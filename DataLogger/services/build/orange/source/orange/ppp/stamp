(dp0
S'TComputeDomainContingency_ImputeWithClassifier'
p1
(i__main__
ClassDefinition
p2
(dp3
S'extended'
p4
I1
sS'imported'
p5
I0
sS'name'
p6
g1
sS'parent'
p7
S'TComputeDomainContingency'
p8
sS'abstract'
p9
I00
sS'components'
p10
(lp11
sS'properties'
p12
(lp13
(S'TLearner'
p14
S'learnerForDiscrete'
p15
S'learner_for_discrete'
p16
S'constructs a classifier for imputation of discrete values'
p17
I0
I0
I00
Ntp18
a(S'TLearner'
p19
S'learnerForContinuous'
p20
S'learner_for_continuous'
p21
S'constructs a classifier for imputation of continuous values'
p22
I0
I0
I00
Ntp23
a(S'bool'
p24
S'classIsOuter'
p25
S'class_is_outer'
p26
S'tells whether the class is the outer variable in contingencies'
p27
I0
I0
I01
Ntp28
asS'constants'
p29
(dp30
sbsS'TRuleDataStoppingCriteria_NoPositives'
p31
(i__main__
ClassDefinition
p32
(dp33
g4
I1
sg5
I0
sg6
g31
sg7
S'TRuleDataStoppingCriteria'
p34
sg9
I00
sg10
(lp35
sg12
(lp36
sg29
(dp37
sbsS'TLearner_Python'
p38
(i__main__
ClassDefinition
p39
(dp40
g4
I1
sg5
I0
sg6
g38
sg7
S'TLearner'
p41
sg9
I00
sg10
(lp42
sg12
(lp43
(S'int'
p44
S'needs'
p45
g45
S'the kind of data that learner needs'
p46
I01
I0
I01
Ntp47
asg29
(dp48
sbsS'TConditionalProbabilityEstimator_FromDistribution'
p49
(i__main__
ClassDefinition
p50
(dp51
g4
I1
sg5
I0
sg6
g49
sg7
S'TConditionalProbabilityEstimator'
p52
sg9
I00
sg10
(lp53
sg12
(lp54
(S'TContingency'
p55
S'probabilities'
p56
g56
S'Contingency that stores conditional probabilities'
p57
I0
I0
I00
Ntp58
a(S'bool'
p59
S'supportsDiscrete'
p60
S'supports_discrete'
p61
S'can estimate probabilities of discrete attributes'
p62
I01
I0
I01
Ntp63
a(S'bool'
p64
S'supportsContinuous'
p65
S'supports_continuous'
p66
S'can estimate probabilities of continuous attributes'
p67
I01
I0
I01
Ntp68
asg29
(dp69
sbsS'TFeatureInducer'
p70
(i__main__
ClassDefinition
p71
(dp72
g4
I1
sg5
I0
sg6
g70
sg7
S'TOrange'
p73
sg9
I01
sg10
(lp74
sg12
(lp75
sg29
(dp76
sbsS'TIMByRowsConstructor'
p77
(i__main__
ClassDefinition
p78
(dp79
g4
I1
sg5
I0
sg6
g77
sg7
S'TOrange'
p80
sg9
I01
sg10
(lp81
sg12
(lp82
sg29
(dp83
sbsS'TExamplesDistanceConstructor_Lp'
p84
(i__main__
ClassDefinition
p85
(dp86
g4
I1
sg5
I0
sg6
g84
sg7
S'TExamplesDistanceConstructor_Normalized'
p87
sg9
I00
sg10
(lp88
sg12
(lp89
(S'float'
p90
S'p'
p91
g91
g91
I0
I0
I01
Ntp92
a(S'bool'
p93
S'normalize'
p94
g94
S'tells whether to normalize distances between attributes'
p95
I0
I0
I01
Ntp96
a(S'bool'
p97
S'ignoreUnknowns'
p98
S'ignore_unknowns'
p99
S'if true (default: false) unknown values are ignored in computation'
p100
I0
I0
I01
Ntp101
a(S'bool'
p102
S'ignoreClass'
p103
S'ignore_class'
p104
S'if true (default), class value is ignored when computing distances'
p105
I0
I0
I01
Ntp106
asg29
(dp107
sbsS'TFilteredGenerator'
p108
(i__main__
ClassDefinition
p109
(dp110
g4
I1
sg5
I0
sg6
g108
sg7
S'TAdapterGenerator'
p111
sg9
I00
sg10
(lp112
sg12
(lp113
(S'TFilter'
p114
S'filter'
p115
g115
S'decides which examples are skipped'
p116
I0
I0
I00
Ntp117
a(S'TDomain'
p118
S'domain'
p119
g119
S'domain'
p120
I0
I0
I00
Ntp121
a(S'int'
p122
S'version'
p123
g123
S'unique version identifier'
p124
I01
I0
I01
Ntp125
asg29
(dp126
sbsS'TExamplesDistance_Maximal'
p127
(i__main__
ClassDefinition
p128
(dp129
g4
I1
sg5
I0
sg6
g127
sg7
S'TExamplesDistance_Normalized'
p130
sg9
I00
sg10
(lp131
sg12
(lp132
(S'TAttributedFloatList'
p133
S'normalizers'
p134
g134
S'normalizing factors for attributes'
p135
I0
I0
I00
Ntp136
a(S'TAttributedFloatList'
p137
S'bases'
p138
g138
S'lowest values for attributes'
p139
I0
I0
I00
Ntp140
a(S'TAttributedFloatList'
p141
S'averages'
p142
g142
S'average values for continuous attribute values'
p143
I0
I0
I00
Ntp144
a(S'TAttributedFloatList'
p145
S'variances'
p146
g146
S'variations for continuous attribute values'
p147
I0
I0
I00
Ntp148
a(S'int'
p149
S'domainVersion'
p150
S'domain_version'
p151
S'version of domain on which the ranges were computed'
p152
I0
I0
I01
Ntp153
a(S'bool'
p154
S'normalize'
p155
g155
S'tells whether to normalize distances between attributes'
p156
I0
I0
I01
Ntp157
a(S'bool'
p158
S'ignoreUnknowns'
p159
S'ignore_unknowns'
p160
S'if true (default: false) unknown values are ignored in computation'
p161
I0
I0
I01
Ntp162
asg29
(dp163
sbsS'TSubsetsGenerator_withRestrictions_iterator'
p164
(i__main__
ClassDefinition
p165
(dp166
g4
I1
sg5
I0
sg6
g164
sg7
S'TSubsetsGenerator_iterator'
p167
sg9
I00
sg10
(lp168
sg12
(lp169
(S'TSubsetsGenerator_iterator'
p170
S'subGenerator_iterator'
p171
S'sub_generator_iterator'
p172
S'subset generator'
p173
I0
I0
I00
Ntp174
a(S'TVarList'
p175
S'required'
p176
g176
S'set of required attributes'
p177
I0
I0
I00
Ntp178
a(S'TVarList'
p179
S'forbidden'
p180
g180
S'set of forbidden attributes'
p181
I0
I0
I00
Ntp182
a(S'TVarListList'
p183
S'forbiddenSubSubsets'
p184
S'forbidden_sub_subsets'
p185
S'set of forbidden subsets (attributes that must not occur together)'
p186
I0
I0
I00
Ntp187
a(S'TVarList'
p188
S'varList'
p189
S'var_list'
p190
S'a set of attributes from which subsets are generated'
p191
I0
I0
I00
Ntp192
asg29
(dp193
sbsS'TPreprocessor_discretize'
p194
(i__main__
ClassDefinition
p195
(dp196
g4
I1
sg5
I0
sg6
g194
sg7
S'TPreprocessor'
p197
sg9
I00
sg10
(lp198
sg12
(lp199
(S'TVarList'
p200
S'attributes'
p201
g201
S'attributes to be discretized (all, if not defined or empty)'
p202
I0
I0
I00
Ntp203
a(S'bool'
p204
S'discretizeClass'
p205
S'discretize_class'
p206
S'also discretize the class attribute (default: false)'
p207
I0
I0
I01
Ntp208
a(S'TDiscretization'
p209
S'method'
p210
g210
S'discretization method'
p211
I0
I0
I00
Ntp212
asg29
(dp213
sbsS'TProgressCallback_Python'
p214
(i__main__
ClassDefinition
p215
(dp216
g4
I1
sg5
I0
sg6
g214
sg7
S'TProgressCallback'
p217
sg9
I00
sg10
(lp218
sg12
(lp219
sg29
(dp220
sbsS'TAssociationRulesSparseInducer'
p221
(i__main__
ClassDefinition
p222
(dp223
g4
I1
sg5
I0
sg6
g221
sg7
S'TOrange'
p224
sg9
I00
sg10
(lp225
sg12
(lp226
(S'int'
p227
S'maxItemSets'
p228
S'max_item_sets'
p229
S'maximal number of itemsets (increase if you want)'
p230
I0
I0
I01
Ntp231
a(S'float'
p232
S'confidence'
p233
g233
S'required confidence'
p234
I0
I0
I01
Ntp235
a(S'float'
p236
S'support'
p237
g237
S'required support'
p238
I0
I0
I01
Ntp239
a(S'bool'
p240
S'storeExamples'
p241
S'store_examples'
p242
S'stores examples corresponding to rules'
p243
I0
I0
I01
Ntp244
asg29
(dp245
sbsS'TFilter_sameExample'
p246
(i__main__
ClassDefinition
p247
(dp248
g4
I1
sg5
I0
sg6
g246
sg7
S'TFilter'
p249
sg9
I00
sg10
(lp250
sg12
(lp251
(S'TExample'
p252
S'example'
p253
g253
S'example with which examples are compared'
p254
I0
I0
I00
Ntp255
a(S'bool'
p256
S'negate'
p257
g257
S'if true, filter output should be negated.'
p258
I0
I0
I01
Ntp259
a(S'TDomain'
p260
S'domain'
p261
g261
S'domain to which the examples are converted (if needed)'
p262
I0
I0
I00
Ntp263
asg29
(dp264
sbsS'TRuleClassifierConstructor'
p265
(i__main__
ClassDefinition
p266
(dp267
g4
I1
sg5
I0
sg6
g265
sg7
S'TOrange'
p268
sg9
I01
sg10
(lp269
sg12
(lp270
sg29
(dp271
sbsS'TMakeRandomIndicesMultiple'
p272
(i__main__
ClassDefinition
p273
(dp274
g4
I1
sg5
I0
sg6
g272
sg7
S'TMakeRandomIndices'
p275
sg9
I00
sg10
(lp276
sg12
(lp277
(S'int'
p278
S'stratified'
p279
g279
S' requests stratified distributions'
p280
I0
I0
I01
S'MakeRandomIndices_Stratification'
p281
tp282
a(S'int'
p283
S'randseed'
p284
g284
S'a seed for random generator'
p285
I0
I0
I01
Ntp286
a(S'TRandomGenerator'
p287
S'randomGenerator'
p288
S'random_generator'
p289
S'a random generator'
p290
I0
I0
I00
Ntp291
asg29
(dp292
sbsS'TLearnerFD'
p293
(i__main__
ClassDefinition
p294
(dp295
g4
I1
sg5
I0
sg6
g293
sg7
S'TLearner'
p296
sg9
I00
sg10
(lp297
sg12
(lp298
(S'TDomain'
p299
S'domain'
p300
g300
S'domain'
p301
I0
I0
I00
Ntp302
ag47
asg29
(dp303
sbsS'TMapIntValue'
p304
(i__main__
ClassDefinition
p305
(dp306
g4
I1
sg5
I0
sg6
g304
sg7
S'TTransformValue'
p307
sg9
I00
sg10
(lp308
sg12
(lp309
(S'TIntList'
p310
S'mapping'
p311
g311
S'a lookup table'
p312
I0
I0
I00
Ntp313
a(S'TTransformValue'
p314
S'subTransform'
p315
S'sub_transform'
p316
S'transformation executed prior to this'
p317
I0
I0
I00
Ntp318
asg29
(dp319
sbsS'TEVDistGetter_Standard'
p320
(i__main__
ClassDefinition
p321
(dp322
g4
I1
sg5
I0
sg6
g320
sg7
S'TEVDistGetter'
p323
sg9
I00
sg10
(lp324
sg12
(lp325
(S'TEVDistList'
p326
S'dists'
p327
g327
S'EVC distribution (sorted by rule length, 0 = for rules without conditions)'
p328
I0
I0
I00
Ntp329
asg29
(dp330
sbsS'TFeatureByIM'
p331
(i__main__
ClassDefinition
p332
(dp333
g4
I1
sg5
I0
sg6
g331
sg7
S'TFeatureInducer'
p334
sg9
I00
sg10
(lp335
sg12
(lp336
(S'TIMConstructor'
p337
S'IMconstructor'
p338
g338
S'incompatibility matrix constructor'
p339
I0
I0
I00
Ntp340
a(S'TClustersFromIM'
p341
S'clustersFromIM'
p342
S'clusters_from_IM'
p343
S'clustering algorithm'
p344
I0
I0
I00
Ntp345
a(S'int'
p346
S'completion'
p347
g347
S' decides how to determine the class for points not covered by any cluster'
p348
I0
I0
I01
S'FeatureByIM_Completion'
p349
tp350
asg29
(dp351
S'Completion'
p352
(lp353
(S'NoCompletion'
p354
S'completion_no'
p355
tp356
a(S'CompletionByDefault'
p357
S'completion_default'
p358
tp359
a(S'CompletionByBayes'
p360
S'completion_bayes'
p361
tp362
assbsS'TRuleBeamRefiner'
p363
(i__main__
ClassDefinition
p364
(dp365
g4
I1
sg5
I0
sg6
g363
sg7
S'TOrange'
p366
sg9
I01
sg10
(lp367
sg12
(lp368
sg29
(dp369
sbsS'TSubsetsGenerator_iterator'
p370
(i__main__
ClassDefinition
p371
(dp372
g4
I1
sg5
I0
sg6
g370
sg7
S'TOrange'
p373
sg9
I01
sg10
(lp374
sg12
(lp375
g192
asg29
(dp376
sbsS'TEquiDistDiscretizer'
p377
(i__main__
ClassDefinition
p378
(dp379
g4
I1
sg5
I0
sg6
g377
sg7
S'TDiscretizer'
p380
sg9
I00
sg10
(lp381
sg12
(lp382
(S'int'
p383
S'numberOfIntervals'
p384
(g384
S'n'
p385
tp386
S' number of intervals'
p387
I0
I0
I01
Ntp388
a(S'float'
p389
S'firstCut'
p390
S'first_cut'
p391
S'the first cut-off point'
p392
I0
I0
I01
Ntp393
a(S'float'
p394
S'step'
p395
g395
S'step (width of interval)'
p396
I0
I0
I01
Ntp397
ag318
asg29
(dp398
sbsS'TFindNearest_BruteForce'
p399
(i__main__
ClassDefinition
p400
(dp401
g4
I1
sg5
I0
sg6
g399
sg7
S'TFindNearest'
p402
sg9
I00
sg10
(lp403
sg12
(lp404
(S'TExamplesDistance'
p405
S'distance'
p406
g406
S'metrics'
p407
I0
I0
I00
Ntp408
a(S'TExampleGenerator'
p409
S'examples'
p410
g410
S'a list of stored examples'
p411
I0
I0
I00
Ntp412
a(S'int'
p413
S'weightID'
p414
S'weight_ID'
p415
S'weight to use when counting examples'
p416
I0
I0
I01
Ntp417
a(S'int'
p418
S'distanceID'
p419
S'distance_ID'
p420
S'id of meta attribute where the distance should be stored (0 = no storing)'
p421
I0
I0
I01
Ntp422
a(S'bool'
p423
S'includeSame'
p424
S'include_same'
p425
S'tells whether to include examples that are same as the reference example'
p426
I0
I0
I01
Ntp427
asg29
(dp428
sbsS'TRuleBeamInitializer'
p429
(i__main__
ClassDefinition
p430
(dp431
g4
I1
sg5
I0
sg6
g429
sg7
S'TOrange'
p432
sg9
I01
sg10
(lp433
sg12
(lp434
sg29
(dp435
sbsS'TMeasureAttribute_relevance'
p436
(i__main__
ClassDefinition
p437
(dp438
g4
I1
sg5
I0
sg6
g436
sg7
S'TMeasureAttributeFromProbabilities'
p439
sg9
I00
sg10
(lp440
sg12
(lp441
(S'TProbabilityEstimatorConstructor'
p442
S'estimatorConstructor'
p443
S'estimator_constructor'
p444
S'probability estimator (none by default)'
p445
I0
I0
I00
Ntp446
a(S'TConditionalProbabilityEstimatorConstructor'
p447
S'conditionalEstimatorConstructor'
p448
S'conditional_estimator_constructor'
p449
S'conditional probability estimator (none by default)'
p450
I0
I0
I00
Ntp451
a(S'int'
p452
S'unknownsTreatment'
p453
S'unknowns_treatment'
p454
S' treatment of unknown values'
p455
I0
I0
I01
S'MeasureAttribute_UnknownsTreatment'
p456
tp457
a(S'int'
p458
S'needs'
p459
g459
S' describes what kind of data is needed for computation'
p460
I0
I0
I01
S'MeasureAttribute_Needs'
p461
tp462
a(S'bool'
p463
S'handlesDiscrete'
p464
S'handles_discrete'
p465
S'tells whether the measure can handle discrete attributes'
p466
I0
I0
I01
Ntp467
a(S'bool'
p468
S'handlesContinuous'
p469
S'handles_continuous'
p470
S'tells whether the measure can handle continuous attributes'
p471
I0
I0
I01
Ntp472
a(S'bool'
p473
S'computesThresholds'
p474
S'computes_thresholds'
p475
S'tells whether the measure can compute threshold functions/maxima for continuous attributes'
p476
I0
I0
I01
Ntp477
asg29
(dp478
sbsS'TBayesLearner'
p479
(i__main__
ClassDefinition
p480
(dp481
g4
I1
sg5
I0
sg6
g479
sg7
S'TLearner'
p482
sg9
I00
sg10
(lp483
sg12
(lp484
(S'TProbabilityEstimatorConstructor'
p485
S'estimatorConstructor'
p486
S'estimator_constructor'
p487
S'constructs a probability estimator for P(C)'
p488
I0
I0
I00
Ntp489
a(S'TConditionalProbabilityEstimatorConstructor'
p490
S'conditionalEstimatorConstructor'
p491
S'conditional_estimator_constructor'
p492
S'constructs a probability estimator for P(C|A) '
p493
I0
I0
I00
Ntp494
a(S'TConditionalProbabilityEstimatorConstructor'
p495
S'conditionalEstimatorConstructorContinuous'
p496
S'conditional_estimator_constructor_continuous'
p497
S'constructs a probability estimator for P(C|A) for continuous attributes'
p498
I0
I0
I00
Ntp499
a(S'bool'
p500
S'normalizePredictions'
p501
S'normalize_predictions'
p502
S'instructs learner to construct a classifier that normalizes probabilities'
p503
I0
I0
I01
Ntp504
a(S'bool'
p505
S'adjustThreshold'
p506
S'adjust_threshold'
p507
S'adjust probability thresholds (for binary classes only)'
p508
I0
I0
I01
Ntp509
ag47
asg29
(dp510
sbsS'TConditionalProbabilityEstimator'
p511
(i__main__
ClassDefinition
p512
(dp513
g4
I1
sg5
I0
sg6
g511
sg7
S'TOrange'
p514
sg9
I01
sg10
(lp515
sg12
(lp516
g63
ag68
asg29
(dp517
sbsS'TColumnAssessor_Laplace'
p518
(i__main__
ClassDefinition
p519
(dp520
g4
I1
sg5
I0
sg6
g518
sg7
S'TColumnAssessor'
p521
sg9
I00
sg10
(lp522
sg12
(lp523
sg29
(dp524
sbsS'TFilter_compatibleExample'
p525
(i__main__
ClassDefinition
p526
(dp527
g4
I1
sg5
I0
sg6
g525
sg7
S'TFilter'
p528
sg9
I00
sg10
(lp529
sg12
(lp530
(S'TExample'
p531
S'example'
p532
g532
S'example with which examples are compared'
p533
I0
I0
I00
Ntp534
ag259
ag263
asg29
(dp535
sbsS'TRemoveRedundant'
p536
(i__main__
ClassDefinition
p537
(dp538
g4
I1
sg5
I0
sg6
g536
sg7
S'TOrange'
p539
sg9
I01
sg10
(lp540
sg12
(lp541
(S'bool'
p542
S'keepValues'
p543
S'keep_values'
p544
S'keep an attribute if number values is only smaller, not one'
p545
I0
I0
I01
Ntp546
asg29
(dp547
sbsS'TExamplesDistanceConstructor_Hamming'
p548
(i__main__
ClassDefinition
p549
(dp550
g4
I1
sg5
I0
sg6
g548
sg7
S'TExamplesDistanceConstructor'
p551
sg9
I00
sg10
(lp552
sg12
(lp553
(S'bool'
p554
S'ignoreClass'
p555
S'ignore_class'
p556
S'if true (default), class value is ignored when computing distances'
p557
I0
I0
I01
Ntp558
a(S'bool'
p559
S'ignoreUnknowns'
p560
S'ignore_unknowns'
p561
S'if true (default: false) unknown values are ignored in computation'
p562
I0
I0
I01
Ntp563
ag106
asg29
(dp564
sbsS'TRuleClassifierConstructor_firstRule'
p565
(i__main__
ClassDefinition
p566
(dp567
g4
I1
sg5
I0
sg6
g565
sg7
S'TRuleClassifierConstructor'
p568
sg9
I00
sg10
(lp569
sg12
(lp570
sg29
(dp571
sbsS'TStopDistributionClustering_noProfit'
p572
(i__main__
ClassDefinition
p573
(dp574
g4
I1
sg5
I0
sg6
g572
sg7
S'TStopDistributionClustering'
p575
sg9
I00
sg10
(lp576
sg12
(lp577
(S'float'
p578
S'minProfitProportion'
p579
S'min_profit_proportion'
p580
S'minimal allowable profit proportion'
p581
I0
I0
I01
Ntp582
asg29
(dp583
sbsS'TColoredIG'
p584
(i__main__
ClassDefinition
p585
(dp586
g4
I1
sg5
I0
sg6
g584
sg7
S'TGeneralExampleClustering'
p587
sg9
I00
sg10
(lp588
sg12
(lp589
(S'TIG'
p590
S'ig'
p591
g591
S'incompatibility graph'
p592
I0
I0
I00
Ntp593
a(S'TIntList'
p594
S'colors'
p595
g595
S'colors (one element corresponding to each ig node)'
p596
I0
I0
I00
Ntp597
asg29
(dp598
sbsS'TMeasureAttribute'
p599
(i__main__
ClassDefinition
p600
(dp601
g4
I1
sg5
I0
sg6
g599
sg7
S'TOrange'
p602
sg9
I00
sg10
(lp603
sg12
(lp604
g462
ag467
ag472
ag477
asg29
(dp605
S'Needs'
p606
(lp607
(S'Contingency_Class'
p608
I0
tp609
a(S'DomainContingency'
p610
I1
tp611
a(S'Generator'
p612
I2
tp613
asS'UnknownsTreatment'
p614
(lp615
(S'IgnoreUnknowns'
p616
I0
tp617
a(S'ReduceByUnknowns'
p618
I1
tp619
a(S'UnknownsToCommon'
p620
I2
tp621
a(S'UnknownsAsValue'
p622
I3
tp623
assbsS'TRuleEvaluator'
p624
(i__main__
ClassDefinition
p625
(dp626
g4
I1
sg5
I0
sg6
g624
sg7
S'TOrange'
p627
sg9
I01
sg10
(lp628
sg12
(lp629
sg29
(dp630
sbsS'TStringVariable'
p631
(i__main__
ClassDefinition
p632
(dp633
g4
I1
sg5
I0
sg6
g631
sg7
S'TVariable'
p634
sg9
I00
sg10
(lp635
sg12
(lp636
(S'int'
p637
S'varType'
p638
S'var_type'
p639
S' variable type'
p640
I0
I0
I01
S'Variable_Type'
p641
tp642
a(S'bool'
p643
S'ordered'
p644
g644
S'variable values are ordered'
p645
I0
I0
I01
Ntp646
a(S'bool'
p647
S'distributed'
p648
g648
S'variable values are distributions'
p649
I0
I0
I01
Ntp650
a(S'int'
p651
S'defaultMetaId'
p652
S'default_meta_id'
p653
S'default (proposed, suggested...) meta id for this variable'
p654
I0
I0
I01
Ntp655
a(S'TRandomGenerator'
p656
S'randomGenerator'
p657
S'random_generator'
p658
S'random generator for random values (initialized when first needed)'
p659
I0
I0
I00
Ntp660
a(S'TVariable'
p661
S'sourceVariable'
p662
S'source_variable'
p663
S'The attribute that this attribute is computed from (when applicable)'
p664
I0
I0
I00
Ntp665
a(S'TClassifier'
p666
S'getValueFrom'
p667
S'get_value_from'
p668
S'Function to compute the value from values of other variables'
p669
I0
I0
I00
Ntp670
asg29
(dp671
sbsS'TGraphAsTree'
p672
(i__main__
ClassDefinition
p673
(dp674
g4
I1
sg5
I0
sg6
g672
sg7
S'TGraph'
p675
sg9
I00
sg10
(lp676
sg12
(lp677
(S'int'
p678
S'nVertices'
p679
S'n_vertices'
p680
S'the number of vertices'
p681
I01
I0
I01
Ntp682
a(S'int'
p683
S'nEdgeTypes'
p684
S'n_edge_types'
p685
S'the number of edge types'
p686
I01
I0
I01
Ntp687
a(S'bool'
p688
S'directed'
p689
g689
S'directed'
p690
I01
I0
I01
Ntp691
asg29
(dp692
sbsS'TTreeExampleSplitter_IgnoreUnknowns'
p693
(i__main__
ClassDefinition
p694
(dp695
g4
I1
sg5
I0
sg6
g693
sg7
S'TTreeExampleSplitter'
p696
sg9
I00
sg10
(lp697
sg12
(lp698
sg29
(dp699
sbsS'TProbabilityEstimator_FromDistribution'
p700
(i__main__
ClassDefinition
p701
(dp702
g4
I1
sg5
I0
sg6
g700
sg7
S'TProbabilityEstimator'
p703
sg9
I00
sg10
(lp704
sg12
(lp705
(S'TDistribution'
p706
S'probabilities'
p707
g707
S'probabilities'
p708
I0
I0
I00
Ntp709
a(S'bool'
p710
S'supportsDiscrete'
p711
S'supports_discrete'
p712
S'can estimate probabilities of discrete attributes'
p713
I01
I0
I01
Ntp714
a(S'bool'
p715
S'supportsContinuous'
p716
S'supports_continuous'
p717
S'can estimate probabilities of continuous attributes'
p718
I01
I0
I01
Ntp719
asg29
(dp720
sbsS'TExamplesDistance'
p721
(i__main__
ClassDefinition
p722
(dp723
g4
I1
sg5
I0
sg6
g721
sg7
S'TOrange'
p724
sg9
I01
sg10
(lp725
sg12
(lp726
sg29
(dp727
sbsS'TFileExampleGenerator'
p728
(i__main__
ClassDefinition
p729
(dp730
g4
I1
sg5
I0
sg6
g728
sg7
S'TExampleGenerator'
p731
sg9
I01
sg10
(lp732
sg12
(lp733
(S'string'
p734
S'filename'
p735
g735
S'filename'
p736
I0
I0
I01
Ntp737
a(S'int'
p738
S'startDataPos'
p739
S'start_data_pos'
p740
S'starting position of the data in file'
p741
I0
I0
I01
Ntp742
a(S'int'
p743
S'startDataLine'
p744
S'start_data_line'
p745
S'line in the file where the data starts'
p746
I0
I0
I01
Ntp747
ag121
ag125
asg29
(dp748
sbsS'TClassifierByLookupTable2'
p749
(i__main__
ClassDefinition
p750
(dp751
g4
I1
sg5
I0
sg6
g749
sg7
S'TClassifierByLookupTable'
p752
sg9
I00
sg10
(lp753
sg12
(lp754
(S'TVariable'
p755
S'variable1'
p756
g756
S'the first attribute used for classification'
p757
I01
I0
I00
Ntp758
a(S'TVariable'
p759
S'variable2'
p760
g760
S'the second attribute used for classification'
p761
I01
I0
I00
Ntp762
a(S'int'
p763
S'noOfValues1'
p764
S'no_of_values1'
p765
S'number of values of the first attribute'
p766
I01
I0
I01
Ntp767
a(S'int'
p768
S'noOfValues2'
p769
S'no_of_values2'
p770
S'number of values of the second attribute'
p771
I01
I0
I01
Ntp772
a(S'TEFMDataDescription'
p773
S'dataDescription'
p774
S'data_description'
p775
S'data description'
p776
I0
I0
I00
Ntp777
a(S'TValueList'
p778
S'lookupTable'
p779
S'lookup_table'
p780
S'a list of class values, one for each attribute value'
p781
I01
I0
I00
Ntp782
a(S'TDistributionList'
p783
S'distributions'
p784
g784
S'a list of class distributions, one for each attribute value'
p785
I01
I0
I00
Ntp786
a(S'TVariable'
p787
S'classVar'
p788
S'class_var'
p789
S'class variable'
p790
I0
I0
I00
Ntp791
a(S'bool'
p792
S'computesProbabilities'
p793
S'computes_probabilities'
p794
S'set if classifier computes class probabilities (if not, it assigns 1.0 to the predicted)'
p795
I0
I0
I01
Ntp796
asg29
(dp797
sbsS'TMeasureAttribute_gainRatio'
p798
(i__main__
ClassDefinition
p799
(dp800
g4
I1
sg5
I0
sg6
g798
sg7
S'TMeasureAttributeFromProbabilities'
p801
sg9
I00
sg10
(lp802
sg12
(lp803
g446
ag451
ag457
ag462
ag467
ag472
ag477
asg29
(dp804
sbsS'TContingencyClassAttr'
p805
(i__main__
ClassDefinition
p806
(dp807
g4
I1
sg5
I0
sg6
g805
sg7
S'TContingencyClass'
p808
sg9
I00
sg10
(lp809
sg12
(lp810
(S'TVariable'
p811
S'outerVariable'
p812
S'outer_variable'
p813
S'outer attribute'
p814
I0
I0
I00
Ntp815
a(S'TVariable'
p816
S'innerVariable'
p817
S'inner_variable'
p818
S'inner attribute'
p819
I0
I0
I00
Ntp820
a(S'int'
p821
S'varType'
p822
S'var_type'
p823
S' outer attribute type'
p824
I0
I0
I01
S'Variable_Type'
p825
tp826
a(S'TDistribution'
p827
S'outerDistribution'
p828
S'outer_distribution'
p829
S'distribution of values of outer attributes'
p830
I0
I0
I00
Ntp831
a(S'TDistribution'
p832
S'innerDistribution'
p833
S'inner_distribution'
p834
S'distribution of values of inner attributes'
p835
I0
I0
I00
Ntp836
a(S'TDistribution'
p837
S'innerDistributionUnknown'
p838
S'inner_distribution_unknown'
p839
S'distribution of inner variable for examples where the outer value was unknown'
p840
I0
I0
I00
Ntp841
asg29
(dp842
sbsS'TColumnAssessor_Measure'
p843
(i__main__
ClassDefinition
p844
(dp845
g4
I1
sg5
I0
sg6
g843
sg7
S'TColumnAssessor'
p846
sg9
I00
sg10
(lp847
sg12
(lp848
(S'TMeasureAttribute'
p849
S'measure'
p850
g850
S'attribute quality measure'
p851
I0
I0
I00
Ntp852
asg29
(dp853
sbsS'TLogRegClassifier'
p854
(i__main__
ClassDefinition
p855
(dp856
g4
I1
sg5
I0
sg6
g854
sg7
S'TClassifierFD'
p857
sg9
I00
sg10
(lp858
sg12
(lp859
(S'TDomain'
p860
S'continuizedDomain'
p861
S'continuized_domain'
p862
S'if absent, there is no continuous attributes in original domain'
p863
I0
I0
I00
Ntp864
a(S'TEFMDataDescription'
p865
S'dataDescription'
p866
S'data_description'
p867
S'Data needed for classification in presence of undefined values'
p868
I0
I0
I00
Ntp869
a(S'TAttributedFloatList'
p870
S'beta'
p871
g871
S'estimated beta coefficients for logistic regression'
p872
I0
I0
I00
Ntp873
a(S'TAttributedFloatList'
p874
S'beta_se'
p875
g875
S'estimated standard errors for beta coefficients'
p876
I0
I0
I00
Ntp877
a(S'TAttributedFloatList'
p878
S'wald_Z'
p879
g879
S'Wald Z statstic for beta coefficients'
p880
I0
I0
I00
Ntp881
a(S'TAttributedFloatList'
p882
S'P'
p883
g883
S'estimated significances for beta coefficients'
p884
I0
I0
I00
Ntp885
a(S'float'
p886
S'likelihood'
p887
g887
S"Likelihood: The likelihood function is the function which specifies the probability of the sample observed on the basis of a known model, as a function of the model's parameters. "
p888
I0
I0
I01
Ntp889
a(S'int'
p890
S'fit_status'
p891
g891
S"Tells how the model fitting ended - either regularly (LogRegFitter.OK), or it was interrupted due to one of beta coefficients escaping towards infinity (LogRegFitter.Infinity) or since the values didn't converge (LogRegFitter.Divergence)."
p892
I0
I0
I01
Ntp893
a(S'TImputer'
p894
S'imputer'
p895
g895
S'if present, it imputes unknown values'
p896
I0
I0
I00
Ntp897
a(S'TDomain'
p898
S'domain'
p899
g899
S'domain'
p900
I0
I0
I00
Ntp901
ag791
ag796
asg29
(dp902
sbsS'TClassifierRandomGenerator'
p903
(i__main__
ClassDefinition
p904
(dp905
g4
I1
sg5
I0
sg6
g903
sg7
S'TExampleGenerator'
p906
sg9
I00
sg10
(lp907
sg12
(lp908
(S'TClassifier'
p909
S'classify'
p910
g910
S'classifier'
p911
I0
I0
I00
Ntp912
a(S'int'
p913
S'noOfEx'
p914
S'no_of_ex'
p915
S'number of examples'
p916
I0
I0
I01
Ntp917
ag121
ag125
asg29
(dp918
sbsS'TPreprocessor_select'
p919
(i__main__
ClassDefinition
p920
(dp921
g4
I1
sg5
I0
sg6
g919
sg7
S'TPreprocessor'
p922
sg9
I00
sg10
(lp923
sg12
(lp924
(S'TVarList'
p925
S'attributes'
p926
g926
S'tells which attributes to select'
p927
I0
I0
I00
Ntp928
asg29
(dp929
sbsS'TBasicAttrStat'
p930
(i__main__
ClassDefinition
p931
(dp932
g4
I1
sg5
I0
sg6
g930
sg7
S'TOrange'
p933
sg9
I00
sg10
(lp934
sg12
(lp935
(S'float'
p936
S'sum'
p937
g937
S'sum of values'
p938
I0
I0
I01
Ntp939
a(S'float'
p940
S'sum2'
p941
g941
S'sum of squares of values'
p942
I0
I0
I01
Ntp943
a(S'float'
p944
g385
g385
S'number of examples for which the attribute is defined'
p945
I0
I0
I01
Ntp946
a(S'float'
p947
S'min'
p948
g948
S'the lowest value of the attribute'
p949
I0
I0
I01
Ntp950
a(S'float'
p951
S'max'
p952
g952
S'the highest value of the attribute'
p953
I0
I0
I01
Ntp954
a(S'float'
p955
S'avg'
p956
g956
S'the average value of the attribute'
p957
I0
I0
I01
Ntp958
a(S'float'
p959
S'dev'
p960
g960
S'the deviation of the value of the attribute'
p961
I0
I0
I01
Ntp962
a(S'TVariable'
p963
S'variable'
p964
g964
S'the attribute to which the data applies'
p965
I0
I0
I00
Ntp966
a(S'bool'
p967
S'holdRecomputation'
p968
S'hold_recomputation'
p969
S'temporarily disables recomputation of avg and dev while adding values'
p970
I0
I0
I01
Ntp971
asg29
(dp972
sbsS'TMeasureAttribute_gini'
p973
(i__main__
ClassDefinition
p974
(dp975
g4
I1
sg5
I0
sg6
g973
sg7
S'TMeasureAttributeFromProbabilities'
p976
sg9
I00
sg10
(lp977
sg12
(lp978
g446
ag451
ag457
ag462
ag467
ag472
ag477
asg29
(dp979
sbsS'TIMByRowsByRelief'
p980
(i__main__
ClassDefinition
p981
(dp982
g4
I1
sg5
I0
sg6
g980
sg7
S'TIMByRowsConstructor'
p983
sg9
I00
sg10
(lp984
sg12
(lp985
(S'float'
p986
S'k'
p987
g987
S'number of neighbours'
p988
I0
I0
I01
Ntp989
a(S'float'
p990
S'm'
p991
g991
S'number of reference examples'
p992
I0
I0
I01
Ntp993
a(S'float'
p994
S'kFromColumns'
p995
S'k_from_columns'
p996
S'if positive, number of neighbours is #columns*kFromColumns'
p997
I0
I0
I01
Ntp998
a(S'bool'
p999
S'ignoreSameExample'
p1000
S'ignore_same_example'
p1001
S'does not put reference example into M'
p1002
I0
I0
I01
Ntp1003
a(S'bool'
p1004
S'convertToBinary'
p1005
S'convert_to_binary'
p1006
S'convert to binary class (hit-miss)'
p1007
I0
I0
I01
Ntp1008
a(S'bool'
p1009
S'correctClassFirst'
p1010
S'correct_class_first'
p1011
S'puts the correct class proportion to the first place'
p1012
I0
I0
I01
Ntp1013
a(S'bool'
p1014
S'allExamples'
p1015
S'all_examples'
p1016
S'uses all examples for reference examples'
p1017
I0
I0
I01
Ntp1018
a(S'bool'
p1019
S'allSameNeighbours'
p1020
S'all_same_neighbours'
p1021
S'uses all the examples same to the reference as neighbours'
p1022
I0
I0
I01
Ntp1023
asg29
(dp1024
sbsS'TFindNearestConstructor'
p1025
(i__main__
ClassDefinition
p1026
(dp1027
g4
I1
sg5
I0
sg6
g1025
sg7
S'TOrange'
p1028
sg9
I01
sg10
(lp1029
sg12
(lp1030
(S'TExamplesDistanceConstructor'
p1031
S'distanceConstructor'
p1032
S'distance_constructor'
p1033
S'metrics'
p1034
I0
I0
I00
Ntp1035
a(S'bool'
p1036
S'includeSame'
p1037
S'include_same'
p1038
S'tells whether to include examples that are same as the reference example'
p1039
I0
I0
I01
Ntp1040
asg29
(dp1041
sbsS'TTableAverager'
p1042
(i__main__
ClassDefinition
p1043
(dp1044
g4
I1
sg5
I0
sg6
g1042
sg7
S'TOrange'
p1045
sg9
I00
sg10
(lp1046
sg12
(lp1047
sg29
(dp1048
sbsS'TIntervalDiscretizer'
p1049
(i__main__
ClassDefinition
p1050
(dp1051
g4
I1
sg5
I0
sg6
g1049
sg7
S'TDiscretizer'
p1052
sg9
I00
sg10
(lp1053
sg12
(lp1054
(S'TFloatList'
p1055
S'points'
p1056
g1056
S'cut-off points'
p1057
I0
I0
I00
Ntp1058
ag318
asg29
(dp1059
sbsS'TImputer_asValue'
p1060
(i__main__
ClassDefinition
p1061
(dp1062
g4
I1
sg5
I0
sg6
g1060
sg7
S'TImputer'
p1063
sg9
I00
sg10
(lp1064
sg12
(lp1065
(S'TDomain'
p1066
S'domain'
p1067
g1067
S'domain to which the values are converted'
p1068
I0
I0
I00
Ntp1069
a(S'TExample'
p1070
S'defaults'
p1071
g1071
S'values to impute instead of missing ones - for continuous attributes only!'
p1072
I0
I0
I00
Ntp1073
asg29
(dp1074
sbsS'TDomainContinuizer'
p1075
(i__main__
ClassDefinition
p1076
(dp1077
g4
I1
sg5
I0
sg6
g1075
sg7
S'TOrange'
p1078
sg9
I00
sg10
(lp1079
sg12
(lp1080
(S'bool'
p1081
S'zeroBased'
p1082
S'zero_based'
p1083
S'if true (default) it gives values 0.0 and 1.0; else -1.0 and 1.0, 0.0 for undefined'
p1084
I0
I0
I01
Ntp1085
a(S'int'
p1086
S'continuousTreatment'
p1087
S'continuous_treatment'
p1088
S' 0-leave as they are, 1-divide by span, 1-normalize'
p1089
I0
I0
I01
S'DomainContinuizer_ContinuousTreatment'
p1090
tp1091
a(S'int'
p1092
S'multinomialTreatment'
p1093
S'multinomial_treatment'
p1094
S' 0-lowest value, 1-most frequent (or baseValue), 2-n binary, 3-ignore, 4-ignore all discrete, 5-error, 6-convert as ordinal, 7-ordinal,normalized'
p1095
I0
I0
I01
S'DomainContinuizer_MultinomialTreatment'
p1096
tp1097
a(S'int'
p1098
S'classTreatment'
p1099
S'class_treatment'
p1100
S' 3-leave as is unless target is given, 5-error if not continuous nor binary nor target given, 6-convert as ordinal (unless target given)'
p1101
I0
I0
I01
S'DomainContinuizer_ClassTreatment'
p1102
tp1103
asg29
(dp1104
S'MultinomialTreatment'
p1105
(lp1106
(S'LowestIsBase'
p1107
I0
tp1108
a(S'FrequentIsBase'
p1109
I1
tp1110
a(S'NValues'
p1111
I2
tp1112
a(S'Ignore'
p1113
I3
tp1114
a(S'IgnoreAllDiscrete'
p1115
I4
tp1116
a(S'ReportError'
p1117
I5
tp1118
a(S'AsOrdinal'
p1119
I6
tp1120
a(S'AsNormalizedOrdinal'
p1121
I7
tp1122
asS'ClassTreatment'
p1123
(lp1124
(S'LeaveUnlessTarget'
p1125
S'3'
p1126
tp1127
a(S'ErrorIfCannotHandle'
p1128
S'5'
p1129
tp1130
a(S'AsOrdinal'
p1131
S'6'
p1132
tp1133
asS'ContinuousTreatment'
p1134
(lp1135
(S'Leave'
p1136
I0
tp1137
a(S'NormalizeBySpan'
p1138
I1
tp1139
a(S'NormalizeByVariance'
p1140
I2
tp1141
assbsS'TSimpleTreeClassifier'
p1142
(i__main__
ClassDefinition
p1143
(dp1144
g4
I1
sg5
I0
sg6
g1142
sg7
S'TClassifier'
p1145
sg9
I00
sg10
(lp1146
sg12
(lp1147
g791
ag796
asg29
(dp1148
sbsS'TExamplesDistanceConstructor_Euclidean'
p1149
(i__main__
ClassDefinition
p1150
(dp1151
g4
I1
sg5
I0
sg6
g1149
sg7
S'TExamplesDistanceConstructor_Normalized'
p1152
sg9
I00
sg10
(lp1153
sg12
(lp1154
g96
ag101
ag106
asg29
(dp1155
sbsS'TContingencyAttrAttr'
p1156
(i__main__
ClassDefinition
p1157
(dp1158
g4
I1
sg5
I0
sg6
g1156
sg7
S'TContingency'
p1159
sg9
I00
sg10
(lp1160
sg12
(lp1161
g815
ag820
ag826
ag831
ag836
ag841
asg29
(dp1162
sbsS'TRuleBeamRefiner_Selector'
p1163
(i__main__
ClassDefinition
p1164
(dp1165
g4
I1
sg5
I0
sg6
g1163
sg7
S'TRuleBeamRefiner'
p1166
sg9
I00
sg10
(lp1167
sg12
(lp1168
(S'TDiscretization'
p1169
S'discretization'
p1170
g1170
S'discretization for continuous attributes'
p1171
I0
I0
I00
Ntp1172
asg29
(dp1173
sbsS'TExamplesDistance_Relief'
p1174
(i__main__
ClassDefinition
p1175
(dp1176
g4
I1
sg5
I0
sg6
g1174
sg7
S'TExamplesDistance'
p1177
sg9
I00
sg10
(lp1178
sg12
(lp1179
(S'TDomainDistributions'
p1180
S'distributions'
p1181
g1181
S"distributions of attributes' values"
p1182
I0
I0
I00
Ntp1183
a(S'TAttributedFloatList'
p1184
S'averages'
p1185
g1185
S'average values of attributes'
p1186
I0
I0
I00
Ntp1187
a(S'TAttributedFloatList'
p1188
S'normalizations'
p1189
g1189
S"ranges of attributes' values"
p1190
I0
I0
I00
Ntp1191
a(S'TAttributedFloatList'
p1192
S'bothSpecial'
p1193
S'both_special'
p1194
S'distance if both values of both attributes are undefined'
p1195
I0
I0
I00
Ntp1196
asg29
(dp1197
sbsS'TExamplesDistance_Manhattan'
p1198
(i__main__
ClassDefinition
p1199
(dp1200
g4
I1
sg5
I0
sg6
g1198
sg7
S'TExamplesDistance_Normalized'
p1201
sg9
I00
sg10
(lp1202
sg12
(lp1203
g136
ag140
ag144
ag148
ag153
ag157
ag162
asg29
(dp1204
sbsS'TTreeDescender'
p1205
(i__main__
ClassDefinition
p1206
(dp1207
g4
I1
sg5
I0
sg6
g1205
sg7
S'TOrange'
p1208
sg9
I01
sg10
(lp1209
sg12
(lp1210
sg29
(dp1211
sbsS'TIMBlurer'
p1212
(i__main__
ClassDefinition
p1213
(dp1214
g4
I1
sg5
I0
sg6
g1212
sg7
S'TIMByRowsPreprocessor'
p1215
sg9
I00
sg10
(lp1216
sg12
(lp1217
(S'float'
p1218
S'weight'
p1219
g1219
S'weight of neighbours'
p1220
I0
I0
I01
Ntp1221
a(S'float'
p1222
S'origWeight'
p1223
S'orig_weight'
p1224
S'weight of original row'
p1225
I0
I0
I01
Ntp1226
a(S'TFloatList'
p1227
S'attrWeights'
p1228
S'attr_weights'
p1229
S'weights by individual (different) attributes'
p1230
I0
I0
I00
Ntp1231
a(S'bool'
p1232
S'adjustOrigWeight'
p1233
S'adjust_orig_weight'
p1234
S'uses 1-weight(s) for weight of original row'
p1235
I0
I0
I01
Ntp1236
a(S'bool'
p1237
S'onlyEmpty'
p1238
S'only_empty'
p1239
S'blurs only empty cells'
p1240
I0
I0
I01
Ntp1241
asg29
(dp1242
sbsS'TFeatureByMinComplexity'
p1243
(i__main__
ClassDefinition
p1244
(dp1245
g4
I1
sg5
I0
sg6
g1243
sg7
S'TFeatureInducer'
p1246
sg9
I00
sg10
(lp1247
sg12
(lp1248
(S'TColorIG'
p1249
S'colorIG'
p1250
S'color_IG'
p1251
S'graph coloring algorithm'
p1252
I0
I0
I00
Ntp1253
a(S'int'
p1254
S'completion'
p1255
g1255
S' decides how to determine the class for points not covered by any cluster'
p1256
I0
I0
I01
S'FeatureByMinComplexity_Completion'
p1257
tp1258
asg29
(dp1259
S'Completion'
p1260
(lp1261
(S'NoCompletion'
p1262
S'completion_no'
p1263
tp1264
a(S'CompletionByDefault'
p1265
S'completion_default'
p1266
tp1267
a(S'CompletionByBayes'
p1268
S'completion_bayes'
p1269
tp1270
assbsS'TPreprocessor_dropMissingClasses'
p1271
(i__main__
ClassDefinition
p1272
(dp1273
g4
I1
sg5
I0
sg6
g1271
sg7
S'TPreprocessor'
p1274
sg9
I00
sg10
(lp1275
sg12
(lp1276
sg29
(dp1277
sbsS'TChangeExampleGenerator'
p1278
(i__main__
ClassDefinition
p1279
(dp1280
g4
I1
sg5
I0
sg6
g1278
sg7
S'TAdapterGenerator'
p1281
sg9
I01
sg10
(lp1282
sg12
(lp1283
g121
ag125
asg29
(dp1284
sbsS'TkNNClassifier'
p1285
(i__main__
ClassDefinition
p1286
(dp1287
g4
I1
sg5
I0
sg6
g1285
sg7
S'TClassifierFD'
p1288
sg9
I00
sg10
(lp1289
sg12
(lp1290
(S'TFindNearest'
p1291
S'findNearest'
p1292
S'find_nearest'
p1293
S''
p1294
I0
I0
I00
Ntp1295
a(S'float'
p1296
g987
g987
S'number of neighbours (0 for sqrt of #examples)'
p1297
I0
I0
I01
Ntp1298
a(S'bool'
p1299
S'rankWeight'
p1300
S'rank_weight'
p1301
S'enable weighting by ranks'
p1302
I0
I0
I01
Ntp1303
a(S'int'
p1304
S'weightID'
p1305
S'weight_ID'
p1306
S'id of meta-attribute with weight'
p1307
I0
I0
I01
Ntp1308
a(S'int'
p1309
S'nExamples'
p1310
S'n_examples'
p1311
S'the number of learning examples '
p1312
I0
I0
I01
Ntp1313
ag901
ag791
ag796
asg29
(dp1314
sbsS'TMeasureAttribute_info'
p1315
(i__main__
ClassDefinition
p1316
(dp1317
g4
I1
sg5
I0
sg6
g1315
sg7
S'TMeasureAttributeFromProbabilities'
p1318
sg9
I00
sg10
(lp1319
sg12
(lp1320
g446
ag451
ag457
ag462
ag467
ag472
ag477
asg29
(dp1321
sbsS'TOrange'
p1322
(i__main__
ClassDefinition
p1323
(dp1324
g4
I1
sg5
I0
sg6
g1322
sg7
Nsg9
I00
sg10
(lp1325
sg12
(lp1326
sg29
(dp1327
sbsS'TRuleValidator'
p1328
(i__main__
ClassDefinition
p1329
(dp1330
g4
I1
sg5
I0
sg6
g1328
sg7
S'TOrange'
p1331
sg9
I01
sg10
(lp1332
sg12
(lp1333
sg29
(dp1334
sbsS'TIMByRowsBySorting'
p1335
(i__main__
ClassDefinition
p1336
(dp1337
g4
I1
sg5
I0
sg6
g1335
sg7
S'TIMByRowsConstructor'
p1338
sg9
I00
sg10
(lp1339
sg12
(lp1340
sg29
(dp1341
sbsS'TRuleBeamInitializer_Python'
p1342
(i__main__
ClassDefinition
p1343
(dp1344
g4
I1
sg5
I0
sg6
g1342
sg7
S'TRuleBeamInitializer'
p1345
sg9
I00
sg10
(lp1346
sg12
(lp1347
sg29
(dp1348
sbsS'TRuleCovererAndRemover_Python'
p1349
(i__main__
ClassDefinition
p1350
(dp1351
g4
I1
sg5
I0
sg6
g1349
sg7
S'TRuleCovererAndRemover'
p1352
sg9
I00
sg10
(lp1353
sg12
(lp1354
sg29
(dp1355
sbsS'TMeasureAttribute_gainRatioA'
p1356
(i__main__
ClassDefinition
p1357
(dp1358
g4
I1
sg5
I0
sg6
g1356
sg7
S'TMeasureAttribute_gainRatio'
p1359
sg9
I00
sg10
(lp1360
sg12
(lp1361
g446
ag451
ag457
ag462
ag467
ag472
ag477
asg29
(dp1362
sbsS'TCartesianClassifier'
p1363
(i__main__
ClassDefinition
p1364
(dp1365
g4
I1
sg5
I0
sg6
g1363
sg7
S'TClassifierFD'
p1366
sg9
I00
sg10
(lp1367
sg12
(lp1368
g901
ag791
ag796
asg29
(dp1369
sbsS'TLinearClassifier'
p1370
(i__main__
ClassDefinition
p1371
(dp1372
g4
I1
sg5
I0
sg6
g1370
sg7
S'TClassifierFD'
p1373
sg9
I00
sg10
(lp1374
sg12
(lp1375
(S'TFloatListList'
p1376
S'weights'
p1377
g1377
S'Computed feature weights'
p1378
I0
I0
I00
Ntp1379
a(S'TExampleTable'
p1380
S'examples'
p1381
g1381
S'Examples used to train the classifier'
p1382
I0
I0
I00
Ntp1383
ag901
ag791
ag796
asg29
(dp1384
sbsS'TRemoveRedundantByInduction'
p1385
(i__main__
ClassDefinition
p1386
(dp1387
g4
I1
sg5
I0
sg6
g1385
sg7
S'TRemoveRedundant'
p1388
sg9
I00
sg10
(lp1389
sg12
(lp1390
(S'TFeatureInducer'
p1391
S'featureReducer'
p1392
S'feature_reducer'
p1393
S'feature construction algorithm'
p1394
I0
I0
I00
Ntp1395
a(S'TMeasureAttribute'
p1396
S'measure'
p1397
g1397
S'measure for initial ordering of attributes'
p1398
I0
I0
I00
Ntp1399
a(S'TDiscretization'
p1400
S'discretization'
p1401
g1401
S'discretization method'
p1402
I0
I0
I00
Ntp1403
ag546
asg29
(dp1404
sbsS'TFilter_conjunction'
p1405
(i__main__
ClassDefinition
p1406
(dp1407
g4
I1
sg5
I0
sg6
g1405
sg7
S'TFilter'
p1408
sg9
I00
sg10
(lp1409
sg12
(lp1410
(S'TFilterList'
p1411
S'filters'
p1412
g1412
S'a list of filters;'
p1413
I0
I0
I00
Ntp1414
ag259
ag263
asg29
(dp1415
sbsS'TGraph'
p1416
(i__main__
ClassDefinition
p1417
(dp1418
g4
I1
sg5
I0
sg6
g1416
sg7
S'TOrange'
p1419
sg9
I01
sg10
(lp1420
sg12
(lp1421
g682
ag687
ag691
asg29
(dp1422
sbsS'TStopIMClusteringByAssessor'
p1423
(i__main__
ClassDefinition
p1424
(dp1425
g4
I1
sg5
I0
sg6
g1423
sg7
S'TOrange'
p1426
sg9
I01
sg10
(lp1427
sg12
(lp1428
sg29
(dp1429
sbsS'TClustersFromDistributions'
p1430
(i__main__
ClassDefinition
p1431
(dp1432
g4
I1
sg5
I0
sg6
g1430
sg7
S'TOrange'
p1433
sg9
I01
sg10
(lp1434
sg12
(lp1435
sg29
(dp1436
sbsS'TVariable'
p1437
(i__main__
ClassDefinition
p1438
(dp1439
g4
I1
sg5
I0
sg6
g1437
sg7
S'TOrange'
p1440
sg9
I01
sg10
(lp1441
sg12
(lp1442
g642
ag646
ag650
ag655
ag660
ag665
ag670
asg29
(dp1443
S'Type'
p1444
(lp1445
(S'None'
p1446
S'(int)TValue::NONE'
p1447
tp1448
a(S'Discrete'
p1449
S'(int)TValue::INTVAR'
p1450
tp1451
a(S'Continuous'
p1452
S'(int)TValue::FLOATVAR'
p1453
tp1454
a(S'Other'
p1455
S'(int)(TValue::FLOATVAR+1)'
p1456
tp1457
a(S'String'
p1458
S'(int)STRINGVAR'
p1459
tp1460
asS'MakeStatus'
p1461
(lp1462
(S'OK'
p1463
I0
tp1464
a(S'MissingValues'
p1465
I1
tp1466
a(S'NoRecognizedValues'
p1467
I2
tp1468
a(S'Incompatible'
p1469
I3
tp1470
a(S'NotFound'
p1471
I4
tp1472
assbsS'TImputerConstructor_average'
p1473
(i__main__
ClassDefinition
p1474
(dp1475
g4
I1
sg5
I0
sg6
g1473
sg7
S'TImputerConstructor'
p1476
sg9
I00
sg10
(lp1477
sg12
(lp1478
(S'bool'
p1479
S'imputeClass'
p1480
S'impute_class'
p1481
S'tells whether to impute the class value (default: true)'
p1482
I0
I0
I01
Ntp1483
asg29
(dp1484
sbsS'TStopDistributionClustering'
p1485
(i__main__
ClassDefinition
p1486
(dp1487
g4
I1
sg5
I0
sg6
g1485
sg7
S'TOrange'
p1488
sg9
I01
sg10
(lp1489
sg12
(lp1490
sg29
(dp1491
sbsS'TExampleTable'
p1492
(i__main__
ClassDefinition
p1493
(dp1494
g4
I1
sg5
I0
sg6
g1492
sg7
S'TExampleGenerator'
p1495
sg9
I00
sg10
(lp1496
sg12
(lp1497
(S'TRandomGenerator'
p1498
S'randomGenerator'
p1499
S'random_generator'
p1500
S'random generator used by randomExample'
p1501
I0
I0
I00
Ntp1502
a(S'TExampleGenerator'
p1503
S'lock'
p1504
(g1504
S'owner'
p1505
tp1506
S' the real owner of examples'
p1507
I01
I0
I00
Ntp1508
a(S'bool'
p1509
S'ownsExamples'
p1510
(g1510
S'owns_instances'
p1511
tp1512
S' if false, examples in this table are references to examples in another table'
p1513
I01
I0
I01
Ntp1514
ag121
ag125
asg29
(dp1515
sbsS'TRemoveRedundantByQuality'
p1516
(i__main__
ClassDefinition
p1517
(dp1518
g4
I1
sg5
I0
sg6
g1516
sg7
S'TRemoveRedundant'
p1519
sg9
I00
sg10
(lp1520
sg12
(lp1521
(S'bool'
p1522
S'remeasure'
p1523
g1523
S'reapply the measure after removal'
p1524
I0
I0
I01
Ntp1525
a(S'float'
p1526
S'minQuality'
p1527
S'min_quality'
p1528
S'minimal acceptable quality'
p1529
I0
I0
I01
Ntp1530
a(S'int'
p1531
S'removeBut'
p1532
S'remove_but'
p1533
S'the desired number of attributes'
p1534
I0
I0
I01
Ntp1535
a(S'TMeasureAttribute'
p1536
S'measure'
p1537
g1537
S'attribute quality measure'
p1538
I0
I0
I00
Ntp1539
ag546
asg29
(dp1540
sbsS'TGraphAsList'
p1541
(i__main__
ClassDefinition
p1542
(dp1543
g4
I1
sg5
I0
sg6
g1541
sg7
S'TGraph'
p1544
sg9
I00
sg10
(lp1545
sg12
(lp1546
g682
ag687
ag691
asg29
(dp1547
sbsS'TDistanceMapConstructor'
p1548
(i__main__
ClassDefinition
p1549
(dp1550
g4
I1
sg5
I0
sg6
g1548
sg7
S'TOrange'
p1551
sg9
I00
sg10
(lp1552
sg12
(lp1553
(S'TSymMatrix'
p1554
S'distanceMatrix'
p1555
S'distance_matrix'
p1556
S'distance matrix'
p1557
I0
I0
I00
Ntp1558
a(S'TIntList'
p1559
S'order'
p1560
g1560
S'order of elements'
p1561
I0
I0
I00
Ntp1562
asg29
(dp1563
sbsS'TTransformValue'
p1564
(i__main__
ClassDefinition
p1565
(dp1566
g4
I1
sg5
I0
sg6
g1564
sg7
S'TOrange'
p1567
sg9
I01
sg10
(lp1568
sg12
(lp1569
g318
asg29
(dp1570
sbsS'TComputeDomainContingency_DomainTransformation'
p1571
(i__main__
ClassDefinition
p1572
(dp1573
g4
I1
sg5
I0
sg6
g1571
sg7
S'TComputeDomainContingency'
p1574
sg9
I00
sg10
(lp1575
sg12
(lp1576
(S'TDomainTransformerConstructor'
p1577
S'domainTransformerConstructor'
p1578
S'domain_transformer_constructor'
p1579
S'constructs a domain in which each attribute corresponds one of originals'
p1580
I0
I0
I00
Ntp1581
a(S'bool'
p1582
S'resultInOriginalDomain'
p1583
S'result_in_original_domain'
p1584
S'tells whether the resulting DomainContingency should consist of original attributes'
p1585
I0
I0
I01
Ntp1586
ag28
asg29
(dp1587
sbsS'TTreePruner'
p1588
(i__main__
ClassDefinition
p1589
(dp1590
g4
I1
sg5
I0
sg6
g1588
sg7
S'TOrange'
p1591
sg9
I01
sg10
(lp1592
sg12
(lp1593
sg29
(dp1594
sbsS'TImputer_Python'
p1595
(i__main__
ClassDefinition
p1596
(dp1597
g4
I1
sg5
I0
sg6
g1595
sg7
S'TImputer'
p1598
sg9
I00
sg10
(lp1599
sg12
(lp1600
sg29
(dp1601
sbsS'TPreprocessor_addGaussianClassNoise'
p1602
(i__main__
ClassDefinition
p1603
(dp1604
g4
I1
sg5
I0
sg6
g1602
sg7
S'TPreprocessor'
p1605
sg9
I00
sg10
(lp1606
sg12
(lp1607
(S'float'
p1608
S'deviation'
p1609
g1609
S'class deviation'
p1610
I0
I0
I01
Ntp1611
a(S'TRandomGenerator'
p1612
S'randomGenerator'
p1613
S'random_generator'
p1614
S'random number generator'
p1615
I0
I0
I00
Ntp1616
asg29
(dp1617
sbsS'TRuleEvaluator_Python'
p1618
(i__main__
ClassDefinition
p1619
(dp1620
g4
I1
sg5
I0
sg6
g1618
sg7
S'TRuleEvaluator'
p1621
sg9
I00
sg10
(lp1622
sg12
(lp1623
sg29
(dp1624
sbsS'TIGBySorting'
p1625
(i__main__
ClassDefinition
p1626
(dp1627
g4
I1
sg5
I0
sg6
g1625
sg7
S'TIGConstructor'
p1628
sg9
I00
sg10
(lp1629
sg12
(lp1630
sg29
(dp1631
sbsS'TConditionalProbabilityEstimator_ByRows'
p1632
(i__main__
ClassDefinition
p1633
(dp1634
g4
I1
sg5
I0
sg6
g1632
sg7
S'TConditionalProbabilityEstimator'
p1635
sg9
I00
sg10
(lp1636
sg12
(lp1637
(S'TProbabilityEstimatorList'
p1638
S'estimatorList'
p1639
S'estimator_list'
p1640
S'A list of probability estimators'
p1641
I0
I0
I00
Ntp1642
ag63
ag68
asg29
(dp1643
sbsS'TProgressCallback'
p1644
(i__main__
ClassDefinition
p1645
(dp1646
g4
I1
sg5
I0
sg6
g1644
sg7
S'TOrange'
p1647
sg9
I01
sg10
(lp1648
sg12
(lp1649
sg29
(dp1650
sbsS'THierarchicalClustering'
p1651
(i__main__
ClassDefinition
p1652
(dp1653
g4
I1
sg5
I0
sg6
g1651
sg7
S'TOrange'
p1654
sg9
I00
sg10
(lp1655
sg12
(lp1656
(S'int'
p1657
S'linkage'
p1658
g1658
S' linkage'
p1659
I0
I0
I01
S'HierarchicalClustering_Linkage'
p1660
tp1661
a(S'bool'
p1662
S'overwriteMatrix'
p1663
S'overwrite_matrix'
p1664
S'if true (default is false) it will use (and destroy) the distance matrix given as argument'
p1665
I0
I0
I01
Ntp1666
a(S'TProgressCallback'
p1667
S'progressCallback'
p1668
S'progress_callback'
p1669
S'progress callback function'
p1670
I0
I0
I00
Ntp1671
asg29
(dp1672
S'Linkage'
p1673
(lp1674
(S'Single'
p1675
I0
tp1676
a(S'Average'
p1677
I1
tp1678
a(S'Complete'
p1679
I2
tp1680
a(S'Ward'
p1681
I3
tp1682
assbsS'TTreeSplitConstructor_Python'
p1683
(i__main__
ClassDefinition
p1684
(dp1685
g4
I1
sg5
I0
sg6
g1683
sg7
S'TTreeSplitConstructor'
p1686
sg9
I00
sg10
(lp1687
sg12
(lp1688
(S'float'
p1689
S'minSubset'
p1690
S'min_subset'
p1691
S'minimal number of examples in a subset'
p1692
I0
I0
I01
Ntp1693
asg29
(dp1694
sbsS'TEarthLearner'
p1695
(i__main__
ClassDefinition
p1696
(dp1697
g4
I1
sg5
I0
sg6
g1695
sg7
S'TLearner'
p1698
sg9
I00
sg10
(lp1699
sg12
(lp1700
(S'int'
p1701
S'max_terms'
p1702
g1702
S'Maximum number of terms.'
p1703
I0
I0
I01
Ntp1704
a(S'int'
p1705
S'max_degree'
p1706
g1706
S'Maximum degree of terms.'
p1707
I0
I0
I01
Ntp1708
a(S'float'
p1709
S'penalty'
p1710
g1710
S'Penalty.'
p1711
I0
I0
I01
Ntp1712
a(S'float'
p1713
S'threshold'
p1714
g1714
S'Forward step threshold.'
p1715
I0
I0
I01
Ntp1716
a(S'bool'
p1717
S'prune'
p1718
g1718
S'Prune terms (do backward pass).'
p1719
I0
I0
I01
Ntp1720
a(S'float'
p1721
S'fast_beta'
p1722
g1722
S'Fast beta (aging coefficient).'
p1723
I0
I0
I01
Ntp1724
a(S'float'
p1725
S'trace'
p1726
g1726
S'Execution trace (for debugging only).'
p1727
I0
I0
I01
Ntp1728
a(S'int'
p1729
S'min_span'
p1730
g1730
S'Min. span (training instances) between knots.'
p1731
I0
I0
I01
Ntp1732
a(S'int'
p1733
S'fast_k'
p1734
g1734
S'Fast K.'
p1735
I0
I0
I01
Ntp1736
a(S'bool'
p1737
S'new_var_penalty'
p1738
g1738
S'Penalty for adding a new variable.'
p1739
I0
I0
I01
Ntp1740
a(S'bool'
p1741
S'use_beta_cache'
p1742
g1742
S'Use caching for betas.'
p1743
I0
I0
I01
Ntp1744
ag47
asg29
(dp1745
sbsS'TKernelFunc_Python'
p1746
(i__main__
ClassDefinition
p1747
(dp1748
g4
I1
sg5
I0
sg6
g1746
sg7
S'TKernelFunc'
p1749
sg9
I00
sg10
(lp1750
sg12
(lp1751
sg29
(dp1752
sbsS'TAdapterGenerator'
p1753
(i__main__
ClassDefinition
p1754
(dp1755
g4
I1
sg5
I0
sg6
g1753
sg7
S'TExampleGenerator'
p1756
sg9
I00
sg10
(lp1757
sg12
(lp1758
g121
ag125
asg29
(dp1759
sbsS'TIMFromExamples'
p1760
(i__main__
ClassDefinition
p1761
(dp1762
g4
I1
sg5
I0
sg6
g1760
sg7
S'TOrange'
p1763
sg9
I01
sg10
(lp1764
sg12
(lp1765
sg29
(dp1766
sbsNNsS'TExamplesDistance_Lp'
p1767
(i__main__
ClassDefinition
p1768
(dp1769
g4
I1
sg5
I0
sg6
g1767
sg7
S'TExamplesDistance_Normalized'
p1770
sg9
I00
sg10
(lp1771
sg12
(lp1772
(S'float'
p1773
g91
g91
g91
I01
I0
I01
Ntp1774
ag136
ag140
ag144
ag148
ag153
ag157
ag162
asg29
(dp1775
sbsS'TMakeRandomIndicesCV'
p1776
(i__main__
ClassDefinition
p1777
(dp1778
g4
I1
sg5
I0
sg6
g1776
sg7
S'TMakeRandomIndices'
p1779
sg9
I00
sg10
(lp1780
sg12
(lp1781
(S'int'
p1782
S'folds'
p1783
g1783
S'number of folds'
p1784
I0
I0
I01
Ntp1785
ag282
ag286
ag291
asg29
(dp1786
sbsS'TPreprocessor_removeDuplicates'
p1787
(i__main__
ClassDefinition
p1788
(dp1789
g4
I1
sg5
I0
sg6
g1787
sg7
S'TPreprocessor'
p1790
sg9
I00
sg10
(lp1791
sg12
(lp1792
sg29
(dp1793
sbsS'TTreeExampleSplitter_UnknownsAsBranchSizes'
p1794
(i__main__
ClassDefinition
p1795
(dp1796
g4
I1
sg5
I0
sg6
g1794
sg7
S'TTreeExampleSplitter'
p1797
sg9
I00
sg10
(lp1798
sg12
(lp1799
sg29
(dp1800
sbsS'TExamplesDistanceConstructor_Normalized'
p1801
(i__main__
ClassDefinition
p1802
(dp1803
g4
I1
sg5
I0
sg6
g1801
sg7
S'TExamplesDistanceConstructor'
p1804
sg9
I01
sg10
(lp1805
sg12
(lp1806
g96
ag101
ag106
asg29
(dp1807
sbsS'TCostWrapperLearner'
p1808
(i__main__
ClassDefinition
p1809
(dp1810
g4
I1
sg5
I0
sg6
g1808
sg7
S'TLearner'
p1811
sg9
I00
sg10
(lp1812
sg12
(lp1813
(S'TLearner'
p1814
S'basicLearner'
p1815
S'basic_learner'
p1816
S'basic learner'
p1817
I0
I0
I00
Ntp1818
a(S'TCostMatrix'
p1819
S'costMatrix'
p1820
S'cost_matrix'
p1821
S'cost matrix'
p1822
I0
I0
I00
Ntp1823
ag47
asg29
(dp1824
sbsS'TPearsonCorrelation'
p1825
(i__main__
ClassDefinition
p1826
(dp1827
g4
I1
sg5
I0
sg6
g1825
sg7
S'TOrange'
p1828
sg9
I00
sg10
(lp1829
sg12
(lp1830
(S'float'
p1831
S'r'
p1832
g1832
S'correlation coefficient'
p1833
I0
I0
I01
Ntp1834
a(S'float'
p1835
S't'
p1836
g1836
S't-statics significance'
p1837
I0
I0
I01
Ntp1838
a(S'int'
p1839
S'df'
p1840
g1840
S'degrees of freedom'
p1841
I0
I0
I01
Ntp1842
a(S'float'
p1843
g91
g91
S'significance'
p1844
I0
I0
I01
Ntp1845
asg29
(dp1846
sbsS'TDistributionAssessor_Laplace'
p1847
(i__main__
ClassDefinition
p1848
(dp1849
g4
I1
sg5
I0
sg6
g1847
sg7
S'TDistributionAssessor'
p1850
sg9
I00
sg10
(lp1851
sg12
(lp1852
sg29
(dp1853
sbsS'TColumnAssessor_Relief'
p1854
(i__main__
ClassDefinition
p1855
(dp1856
g4
I1
sg5
I0
sg6
g1854
sg7
S'TColumnAssessor'
p1857
sg9
I00
sg10
(lp1858
sg12
(lp1859
sg29
(dp1860
sbsS'TClassifierByLookupTable'
p1861
(i__main__
ClassDefinition
p1862
(dp1863
g4
I1
sg5
I0
sg6
g1861
sg7
S'TClassifier'
p1864
sg9
I01
sg10
(lp1865
sg12
(lp1866
g782
ag786
ag791
ag796
asg29
(dp1867
sbsS'TRuleBeamFinder'
p1868
(i__main__
ClassDefinition
p1869
(dp1870
g4
I1
sg5
I0
sg6
g1868
sg7
S'TRuleFinder'
p1871
sg9
I00
sg10
(lp1872
sg12
(lp1873
(S'TRuleBeamInitializer'
p1874
S'initializer'
p1875
g1875
g1294
I0
I0
I00
Ntp1876
a(S'TRuleBeamRefiner'
p1877
S'refiner'
p1878
g1878
g1294
I0
I0
I00
Ntp1879
a(S'TRuleBeamCandidateSelector'
p1880
S'candidateSelector'
p1881
S'candidate_selector'
p1882
g1294
I0
I0
I00
Ntp1883
a(S'TRuleBeamFilter'
p1884
S'ruleFilter'
p1885
S'rule_filter'
p1886
g1294
I0
I0
I00
Ntp1887
a(S'TRuleValidator'
p1888
S'ruleStoppingValidator'
p1889
S'rule_stopping_validator'
p1890
g1294
I0
I0
I00
Ntp1891
a(S'TRuleValidator'
p1892
S'validator'
p1893
g1893
g1294
I0
I0
I00
Ntp1894
a(S'TRuleEvaluator'
p1895
S'evaluator'
p1896
g1896
g1294
I0
I0
I00
Ntp1897
asg29
(dp1898
sbsS'TC45Classifier'
p1899
(i__main__
ClassDefinition
p1900
(dp1901
g4
I1
sg5
I0
sg6
g1899
sg7
S'TClassifierFD'
p1902
sg9
I00
sg10
(lp1903
sg12
(lp1904
(S'TC45TreeNode'
p1905
S'tree'
p1906
g1906
S'tree'
p1907
I0
I0
I00
Ntp1908
ag901
ag791
ag796
asg29
(dp1909
sbsS'TFilter_values'
p1910
(i__main__
ClassDefinition
p1911
(dp1912
g4
I1
sg5
I0
sg6
g1910
sg7
S'TFilter'
p1913
sg9
I00
sg10
(lp1914
sg12
(lp1915
(S'TValueFilterList'
p1916
S'conditions'
p1917
g1917
S'a list of filters'
p1918
I0
I0
I00
Ntp1919
a(S'bool'
p1920
S'conjunction'
p1921
g1921
S'if true, filter computes conjunction, otherwise disjunction'
p1922
I0
I0
I01
Ntp1923
ag259
ag263
asg29
(dp1924
S'Operator'
p1925
(lp1926
(S'None'
p1927
I0
tp1928
a(S'Equal'
p1929
I1
tp1930
a(S'NotEqual'
p1931
I2
tp1932
a(S'Less'
p1933
I3
tp1934
a(S'LessEqual'
p1935
I4
tp1936
a(S'Greater'
p1937
I5
tp1938
a(S'GreaterEqual'
p1939
I6
tp1940
a(S'Between'
p1941
I7
tp1942
a(S'Outside'
p1943
I8
tp1944
a(S'Contains'
p1945
I9
tp1946
a(S'NotContains'
p1947
I10
tp1948
a(S'BeginsWith'
p1949
I11
tp1950
a(S'EndsWith'
p1951
I12
tp1952
a(S'Listed'
p1953
I13
tp1954
assbsS'TRuleClassifier'
p1955
(i__main__
ClassDefinition
p1956
(dp1957
g4
I1
sg5
I0
sg6
g1955
sg7
S'TClassifier'
p1958
sg9
I01
sg10
(lp1959
sg12
(lp1960
(S'TRuleList'
p1961
S'rules'
p1962
g1962
g1294
I0
I0
I00
Ntp1963
a(S'TExampleTable'
p1964
S'examples'
p1965
g1965
g1294
I0
I0
I00
Ntp1966
a(S'int'
p1967
S'weightID'
p1968
S'weight_ID'
p1969
g1294
I0
I0
I01
Ntp1970
ag791
ag796
asg29
(dp1971
sbsS'TSymMatrix'
p1972
(i__main__
ClassDefinition
p1973
(dp1974
g4
I1
sg5
I0
sg6
g1972
sg7
S'TOrange'
p1975
sg9
I00
sg10
(lp1976
sg12
(lp1977
(S'int'
p1978
S'dim'
p1979
g1979
S'matrix dimension'
p1980
I01
I0
I01
Ntp1981
a(S'int'
p1982
S'matrixType'
p1983
S'matrix_type'
p1984
S' 0 lower, 1 upper, 2 symmetric, 3 lower_filled, 4 upper_filled'
p1985
I0
I0
I01
S'SymMatrix_Shape'
p1986
tp1987
asg29
(dp1988
S'Shape'
p1989
(lp1990
(S'Lower'
p1991
I0
tp1992
a(S'Upper'
p1993
I1
tp1994
a(S'Symmetric'
p1995
I2
tp1996
a(S'LowerFilled'
p1997
I3
tp1998
a(S'UpperFilled'
p1999
I4
tp2000
assbsS'TSVMLearner'
p2001
(i__main__
ClassDefinition
p2002
(dp2003
g4
I1
sg5
I0
sg6
g2001
sg7
S'TLearner'
p2004
sg9
I00
sg10
(lp2005
sg12
(lp2006
(S'int'
p2007
S'svm_type'
p2008
g2008
S'  SVM type (C_SVC=0, NU_SVC, ONE_CLASS, EPSILON_SVR=3, NU_SVR=4)'
p2009
I0
I0
I01
S'SVMLearner_SVMType'
p2010
tp2011
a(S'int'
p2012
S'kernel_type'
p2013
g2013
S'  kernel type (LINEAR=0, POLY, RBF, SIGMOID, CUSTOM=4)'
p2014
I0
I0
I01
S'SVMLearner_Kernel'
p2015
tp2016
a(S'float'
p2017
S'degree'
p2018
g2018
S'polynomial kernel degree'
p2019
I0
I0
I01
Ntp2020
a(S'float'
p2021
S'gamma'
p2022
g2022
S'poly/rbf/sigm parameter'
p2023
I0
I0
I01
Ntp2024
a(S'float'
p2025
S'coef0'
p2026
g2026
S'poly/sigm parameter'
p2027
I0
I0
I01
Ntp2028
a(S'float'
p2029
S'cache_size'
p2030
g2030
S'cache size in MB'
p2031
I0
I0
I01
Ntp2032
a(S'float'
p2033
S'eps'
p2034
g2034
S'stopping criteria'
p2035
I0
I0
I01
Ntp2036
a(S'float'
p2037
S'C'
p2038
g2038
S'for C_SVC and C_SVR'
p2039
I0
I0
I01
Ntp2040
a(S'float'
p2041
S'nu'
p2042
g2042
S'for NU_SVC and ONE_CLASS'
p2043
I0
I0
I01
Ntp2044
a(S'float'
p2045
g91
g91
S'for C_SVR'
p2046
I0
I0
I01
Ntp2047
a(S'int'
p2048
S'shrinking'
p2049
g2049
S'shrinking'
p2050
I0
I0
I01
Ntp2051
a(S'int'
p2052
S'probability'
p2053
g2053
S'probability'
p2054
I0
I0
I01
Ntp2055
a(S'bool'
p2056
S'verbose'
p2057
g2057
S'verbose'
p2058
I0
I0
I01
Ntp2059
a(S'TKernelFunc'
p2060
S'kernelFunc'
p2061
S'kernel_func'
p2062
S'custom kernel function'
p2063
I0
I0
I00
Ntp2064
ag47
asg29
(dp2065
S'Kernel'
p2066
(lp2067
(S'Linear'
p2068
S'LINEAR'
p2069
tp2070
a(S'Polynomial'
p2071
S'POLY'
p2072
tp2073
a(S'RBF'
p2074
S'RBF'
p2075
tp2076
a(S'Sigmoid'
p2077
S'SIGMOID'
p2078
tp2079
a(S'Custom'
p2080
S'PRECOMPUTED'
p2081
tp2082
asS'LIBSVM_VERSION'
p2083
(lp2084
(S'VERSION'
p2085
S'LIBSVM_VERSION'
p2086
tp2087
asS'SVMType'
p2088
(lp2089
(S'C_SVC'
p2090
S'C_SVC'
p2091
tp2092
a(S'Nu_SVC'
p2093
S'NU_SVC'
p2094
tp2095
a(S'OneClass'
p2096
S'ONE_CLASS'
p2097
tp2098
a(S'Epsilon_SVR'
p2099
S'EPSILON_SVR'
p2100
tp2101
a(S'Nu_SVR'
p2102
S'NU_SVR'
p2103
tp2104
assbsS'TImputerConstructor_defaults'
p2105
(i__main__
ClassDefinition
p2106
(dp2107
g4
I1
sg5
I0
sg6
g2105
sg7
S'TImputerConstructor'
p2108
sg9
I00
sg10
(lp2109
sg12
(lp2110
(S'TExample'
p2111
S'defaults'
p2112
g2112
S'default values to be imputed instead missing ones'
p2113
I0
I0
I00
Ntp2114
ag1483
asg29
(dp2115
sbsS'TConditionalProbabilityEstimatorConstructor'
p2116
(i__main__
ClassDefinition
p2117
(dp2118
g4
I1
sg5
I0
sg6
g2116
sg7
S'TOrange'
p2119
sg9
I01
sg10
(lp2120
sg12
(lp2121
sg29
(dp2122
sbsS'TPreprocessor_takeMissingClasses'
p2123
(i__main__
ClassDefinition
p2124
(dp2125
g4
I1
sg5
I0
sg6
g2123
sg7
S'TPreprocessor'
p2126
sg9
I00
sg10
(lp2127
sg12
(lp2128
sg29
(dp2129
sbsS'TRuleValidator_LRS'
p2130
(i__main__
ClassDefinition
p2131
(dp2132
g4
I1
sg5
I0
sg6
g2130
sg7
S'TRuleValidator'
p2133
sg9
I00
sg10
(lp2134
sg12
(lp2135
(S'float'
p2136
S'alpha'
p2137
g2137
g1294
I0
I0
I01
Ntp2138
a(S'float'
p2139
S'min_coverage'
p2140
g2140
g1294
I0
I0
I01
Ntp2141
a(S'int'
p2142
S'max_rule_complexity'
p2143
g2143
g1294
I0
I0
I01
Ntp2144
a(S'float'
p2145
S'min_quality'
p2146
g2146
g1294
I0
I0
I01
Ntp2147
asg29
(dp2148
sbsS'TLogRegFitter_Python'
p2149
(i__main__
ClassDefinition
p2150
(dp2151
g4
I1
sg5
I0
sg6
g2149
sg7
S'TLogRegFitter'
p2152
sg9
I00
sg10
(lp2153
sg12
(lp2154
sg29
(dp2155
sbsS'TContDistribution'
p2156
(i__main__
ClassDefinition
p2157
(dp2158
g4
I1
sg5
I0
sg6
g2156
sg7
S'TDistribution'
p2159
sg9
I00
sg10
(lp2160
sg12
(lp2161
(S'TFloatList'
p2162
S'variances'
p2163
g2163
S'variances'
p2164
I0
I0
I00
Ntp2165
a(S'float'
p2166
S'sum'
p2167
g2167
S'weighted sum of elements (i.e. N*average)'
p2168
I01
I0
I01
Ntp2169
a(S'float'
p2170
S'sum2'
p2171
g2171
S'weighted sum of squares of elements'
p2172
I01
I0
I01
Ntp2173
a(S'TVariable'
p2174
S'variable'
p2175
g2175
S'attribute descriptor (optional)'
p2176
I0
I0
I00
Ntp2177
a(S'float'
p2178
S'unknowns'
p2179
g2179
S'number of unknown values'
p2180
I0
I0
I01
Ntp2181
a(S'float'
p2182
S'abs'
p2183
g2183
S'sum of frequencies (not including unknown values!)'
p2184
I0
I0
I01
Ntp2185
a(S'float'
p2186
S'cases'
p2187
g2187
S"number of cases; as abs, but doesn't change at *= and normalize()"
p2188
I0
I0
I01
Ntp2189
a(S'bool'
p2190
S'normalized'
p2191
g2191
S'distribution is normalized'
p2192
I0
I0
I01
Ntp2193
a(S'bool'
p2194
S'supportsDiscrete'
p2195
S'supports_discrete'
p2196
S'distribution supports discrete interface'
p2197
I01
I0
I01
Ntp2198
a(S'bool'
p2199
S'supportsContinuous'
p2200
S'supports_continuous'
p2201
S'distribution supports continuous interface'
p2202
I01
I0
I01
Ntp2203
a(S'TRandomGenerator'
p2204
S'randomGenerator'
p2205
S'random_generator'
p2206
S'random generator; initialized when needed, if not given earlier'
p2207
I0
I0
I00
Ntp2208
asg29
(dp2209
sbsS'TTreeDescender_UnknownMergeAsSelector'
p2210
(i__main__
ClassDefinition
p2211
(dp2212
g4
I1
sg5
I0
sg6
g2210
sg7
S'TTreeDescender'
p2213
sg9
I0
sg10
(lp2214
sg12
(lp2215
sg29
(dp2216
sbsS'TContingencyAttrClass'
p2217
(i__main__
ClassDefinition
p2218
(dp2219
g4
I1
sg5
I0
sg6
g2217
sg7
S'TContingencyClass'
p2220
sg9
I00
sg10
(lp2221
sg12
(lp2222
g815
ag820
ag826
ag831
ag836
ag841
asg29
(dp2223
sbsS'TPythonValueSpecial'
p2224
(i__main__
ClassDefinition
p2225
(dp2226
g4
I1
sg5
I0
sg6
g2224
sg7
S'TOrange'
p2227
sg9
I00
sg10
(lp2228
sg12
(lp2229
(S'int'
p2230
S'valueType'
p2231
S'value_type'
p2232
S'value type'
p2233
I0
I0
I01
Ntp2234
asg29
(dp2235
sbsS'TProbabilityEstimatorConstructor'
p2236
(i__main__
ClassDefinition
p2237
(dp2238
g4
I1
sg5
I0
sg6
g2236
sg7
S'TOrange'
p2239
sg9
I01
sg10
(lp2240
sg12
(lp2241
sg29
(dp2242
sbsS'TFloatVariable'
p2243
(i__main__
ClassDefinition
p2244
(dp2245
g4
I1
sg5
I0
sg6
g2243
sg7
S'TVariable'
p2246
sg9
I00
sg10
(lp2247
sg12
(lp2248
(S'float'
p2249
S'startValue'
p2250
S'start_value'
p2251
S'lowest value'
p2252
I0
I0
I01
Ntp2253
a(S'float'
p2254
S'endValue'
p2255
S'end_value'
p2256
S'highest value'
p2257
I0
I0
I01
Ntp2258
a(S'float'
p2259
S'stepValue'
p2260
S'step_value'
p2261
S'step'
p2262
I0
I0
I01
Ntp2263
a(S'int'
p2264
S'numberOfDecimals'
p2265
S'number_of_decimals'
p2266
S'number of digits after decimal point'
p2267
I0
I0
I01
Ntp2268
a(S'bool'
p2269
S'scientificFormat'
p2270
S'scientific_format'
p2271
S'use scientific format in output'
p2272
I0
I0
I01
Ntp2273
a(S'int'
p2274
S'adjustDecimals'
p2275
S'adjust_decimals'
p2276
S"adjust number of decimals according to the values converted (0 - no, 1 - yes, 2 - yes, but haven't seen any yet)"
p2277
I0
I0
I01
Ntp2278
ag642
ag646
ag650
ag655
ag660
ag665
ag670
asg29
(dp2279
sbsS'TImputer_random'
p2280
(i__main__
ClassDefinition
p2281
(dp2282
g4
I1
sg5
I0
sg6
g2280
sg7
S'TImputer'
p2283
sg9
I00
sg10
(lp2284
sg12
(lp2285
(S'bool'
p2286
S'imputeClass'
p2287
S'impute_class'
p2288
S'Tells whether to impute the class values, too (default: true)'
p2289
I0
I0
I01
Ntp2290
a(S'bool'
p2291
S'deterministic'
p2292
g2292
S"tells whether to initialize random by example's CRC (default: false)"
p2293
I0
I0
I01
Ntp2294
a(S'TDistributionList'
p2295
S'distributions'
p2296
g2296
S'probability functions'
p2297
I0
I0
I00
Ntp2298
asg29
(dp2299
sbsS'TFilter_hasMeta'
p2300
(i__main__
ClassDefinition
p2301
(dp2302
g4
I1
sg5
I0
sg6
g2300
sg7
S'TFilter'
p2303
sg9
I00
sg10
(lp2304
sg12
(lp2305
(S'int'
p2306
S'id'
p2307
g2307
S'meta attribute id'
p2308
I0
I0
I01
Ntp2309
ag259
ag263
asg29
(dp2310
sbsS'TProbabilityEstimatorConstructor_kernel'
p2311
(i__main__
ClassDefinition
p2312
(dp2313
g4
I1
sg5
I0
sg6
g2311
sg7
S'TProbabilityEstimatorConstructor'
p2314
sg9
I00
sg10
(lp2315
sg12
(lp2316
(S'float'
p2317
S'minImpact'
p2318
S'min_impact'
p2319
S'Minimal impact the point must have to be counted'
p2320
I0
I0
I01
Ntp2321
a(S'float'
p2322
S'smoothing'
p2323
g2323
S'Smoothing factor'
p2324
I0
I0
I01
Ntp2325
a(S'int'
p2326
S'nPoints'
p2327
S'n_points'
p2328
S'Number of points for curve (negative means the given number of points is inserted in each interval)'
p2329
I0
I0
I01
Ntp2330
asg29
(dp2331
sbsS'TSubsetsGenerator_constant'
p2332
(i__main__
ClassDefinition
p2333
(dp2334
g4
I1
sg5
I0
sg6
g2332
sg7
S'TSubsetsGenerator'
p2335
sg9
I00
sg10
(lp2336
sg12
(lp2337
(S'TVarList'
p2338
S'constant'
p2339
g2339
S'a subset that is returned (once!)'
p2340
I0
I0
I00
Ntp2341
a(S'TVarList'
p2342
S'varList'
p2343
S'var_list'
p2344
S'a set of attributes from which subsets are generated'
p2345
I0
I0
I00
Ntp2346
asg29
(dp2347
sbsS'TDefaultClassifier'
p2348
(i__main__
ClassDefinition
p2349
(dp2350
g4
I1
sg5
I0
sg6
g2348
sg7
S'TClassifier'
p2351
sg9
I00
sg10
(lp2352
sg12
(lp2353
(S'TValue'
p2354
S'defaultVal'
p2355
S'default_val'
p2356
S'default prediction'
p2357
I0
I0
I01
Ntp2358
a(S'TDistribution'
p2359
S'defaultDistribution'
p2360
S'default_distribution'
p2361
S'default distribution'
p2362
I0
I0
I00
Ntp2363
ag791
ag796
asg29
(dp2364
sbsS'TTreeSplitConstructor_Measure'
p2365
(i__main__
ClassDefinition
p2366
(dp2367
g4
I1
sg5
I0
sg6
g2365
sg7
S'TTreeSplitConstructor'
p2368
sg9
I01
sg10
(lp2369
sg12
(lp2370
(S'TMeasureAttribute'
p2371
S'measure'
p2372
g2372
S'attribute quality measure'
p2373
I0
I0
I00
Ntp2374
a(S'float'
p2375
S'worstAcceptable'
p2376
S'worst_acceptable'
p2377
S'the worst acceptable quality of the attribute'
p2378
I0
I0
I01
Ntp2379
ag1693
asg29
(dp2380
sbsS'TTreeNode'
p2381
(i__main__
ClassDefinition
p2382
(dp2383
g4
I1
sg5
I0
sg6
g2381
sg7
S'TOrange'
p2384
sg9
I00
sg10
(lp2385
sg12
(lp2386
(S'TClassifier'
p2387
S'nodeClassifier'
p2388
S'node_classifier'
p2389
S'classifies an example'
p2390
I0
I0
I00
Ntp2391
a(S'TDistribution'
p2392
S'distribution'
p2393
g2393
S'distribution of classes in the node'
p2394
I0
I0
I00
Ntp2395
a(S'TDomainContingency'
p2396
S'contingency'
p2397
g2397
S'domain contingency for examples in the node'
p2398
I0
I0
I00
Ntp2399
a(S'TExampleGenerator'
p2400
S'examples'
p2401
g2401
S'learning examples (if stored)'
p2402
I0
I0
I00
Ntp2403
a(S'int'
p2404
S'weightID'
p2405
S'weight_ID'
p2406
S'weightID used to construct this node'
p2407
I0
I0
I01
Ntp2408
a(S'TClassifier'
p2409
S'branchSelector'
p2410
S'branch_selector'
p2411
S'classifier that select a branch for an example'
p2412
I0
I0
I00
Ntp2413
a(S'TTreeNodeList'
p2414
S'branches'
p2415
g2415
S'classifiers presenting the branches'
p2416
I0
I0
I00
Ntp2417
a(S'TStringList'
p2418
S'branchDescriptions'
p2419
S'branch_descriptions'
p2420
S'descriptions of branches'
p2421
I0
I0
I00
Ntp2422
a(S'TDiscDistribution'
p2423
S'branchSizes'
p2424
S'branch_sizes'
p2425
S'numbers of examples in branches'
p2426
I0
I0
I00
Ntp2427
asg29
(dp2428
sbsS'TTransformValue_IsDefined'
p2429
(i__main__
ClassDefinition
p2430
(dp2431
g4
I1
sg5
I0
sg6
g2429
sg7
S'TTransformValue'
p2432
sg9
I00
sg10
(lp2433
sg12
(lp2434
g318
asg29
(dp2435
sbsS'TFilter_hasClassValue'
p2436
(i__main__
ClassDefinition
p2437
(dp2438
g4
I1
sg5
I0
sg6
g2436
sg7
S'TFilter'
p2439
sg9
I00
sg10
(lp2440
sg12
(lp2441
g259
ag263
asg29
(dp2442
sbsS'TStopDistributionClustering_binary'
p2443
(i__main__
ClassDefinition
p2444
(dp2445
g4
I1
sg5
I0
sg6
g2443
sg7
S'TStopDistributionClustering'
p2446
sg9
I00
sg10
(lp2447
sg12
(lp2448
sg29
(dp2449
sbsS'TRuleFinder'
p2450
(i__main__
ClassDefinition
p2451
(dp2452
g4
I1
sg5
I0
sg6
g2450
sg7
S'TOrange'
p2453
sg9
I01
sg10
(lp2454
sg12
(lp2455
g1894
ag1897
asg29
(dp2456
sbsS'TClassifierByExampleTable'
p2457
(i__main__
ClassDefinition
p2458
(dp2459
g4
I1
sg5
I0
sg6
g2457
sg7
S'TClassifierFD'
p2460
sg9
I00
sg10
(lp2461
sg12
(lp2462
(S'TExampleTable'
p2463
S'sortedExamples'
p2464
S'sorted_examples'
p2465
S'a table of examples'
p2466
I0
I0
I00
Ntp2467
a(S'bool'
p2468
S'containsUnknowns'
p2469
S'contains_unknowns'
p2470
S'if true, the table contains unknown values'
p2471
I0
I0
I01
Ntp2472
a(S'TClassifier'
p2473
S'classifierForUnknown'
p2474
S'classifier_for_unknown'
p2475
S'a classifier for unknown cases'
p2476
I0
I0
I00
Ntp2477
a(S'TEFMDataDescription'
p2478
S'dataDescription'
p2479
S'data_description'
p2480
S'data description'
p2481
I0
I0
I00
Ntp2482
ag901
ag791
ag796
asg29
(dp2483
sbsS'TIMByRowsPreprocessor'
p2484
(i__main__
ClassDefinition
p2485
(dp2486
g4
I1
sg5
I0
sg6
g2484
sg7
S'TOrange'
p2487
sg9
I01
sg10
(lp2488
sg12
(lp2489
sg29
(dp2490
sbsS'TImputerConstructor_maximal'
p2491
(i__main__
ClassDefinition
p2492
(dp2493
g4
I1
sg5
I0
sg6
g2491
sg7
S'TImputerConstructor'
p2494
sg9
I00
sg10
(lp2495
sg12
(lp2496
g1483
asg29
(dp2497
sbsS'TRemoveRedundantOneValue'
p2498
(i__main__
ClassDefinition
p2499
(dp2500
g4
I1
sg5
I0
sg6
g2498
sg7
S'TRemoveRedundant'
p2501
sg9
I00
sg10
(lp2502
sg12
(lp2503
(S'bool'
p2504
S'onData'
p2505
S'on_data'
p2506
S'observe the actual number of value on the data (not on attribute definitions)'
p2507
I0
I0
I01
Ntp2508
ag546
asg29
(dp2509
sbsS'TDistributionAssessor_Relief'
p2510
(i__main__
ClassDefinition
p2511
(dp2512
g4
I1
sg5
I0
sg6
g2510
sg7
S'TDistributionAssessor'
p2513
sg9
I00
sg10
(lp2514
sg12
(lp2515
sg29
(dp2516
sbsS'TRuleBeamCandidateSelector'
p2517
(i__main__
ClassDefinition
p2518
(dp2519
g4
I1
sg5
I0
sg6
g2517
sg7
S'TOrange'
p2520
sg9
I01
sg10
(lp2521
sg12
(lp2522
sg29
(dp2523
sbsS'TSubsetsGenerator_minMaxSize'
p2524
(i__main__
ClassDefinition
p2525
(dp2526
g4
I1
sg5
I0
sg6
g2524
sg7
S'TSubsetsGenerator'
p2527
sg9
I00
sg10
(lp2528
sg12
(lp2529
(S'int'
p2530
S'min'
p2531
g2531
S'minimal subset size'
p2532
I0
I0
I01
Ntp2533
a(S'int'
p2534
S'max'
p2535
g2535
S'maximal subset size'
p2536
I0
I0
I01
Ntp2537
ag2346
asg29
(dp2538
sbsS'TContingencyClass'
p2539
(i__main__
ClassDefinition
p2540
(dp2541
g4
I1
sg5
I0
sg6
g2539
sg7
S'TContingency'
p2542
sg9
I01
sg10
(lp2543
sg12
(lp2544
g815
ag820
ag826
ag831
ag836
ag841
asg29
(dp2545
sbsS'TAssociationClassifier'
p2546
(i__main__
ClassDefinition
p2547
(dp2548
g4
I1
sg5
I0
sg6
g2546
sg7
S'TClassifierFD'
p2549
sg9
I00
sg10
(lp2550
sg12
(lp2551
(S'TAssociationRules'
p2552
S'rules'
p2553
g2553
S'association rules'
p2554
I0
I0
I00
Ntp2555
a(S'int'
p2556
S'voteWeight'
p2557
S'vote_weight'
p2558
S'vote weight (s=support, c=confidence, p=product)'
p2559
I0
I0
I01
Ntp2560
ag901
ag791
ag796
asg29
(dp2561
sbsS'TDomainDistributions'
p2562
(i__main__
ClassDefinition
p2563
(dp2564
g4
I1
sg5
I0
sg6
g2562
sg7
S'TOrange'
p2565
sg9
I00
sg10
(lp2566
sg12
(lp2567
sg29
(dp2568
sbsS'TSVMLearnerSparse'
p2569
(i__main__
ClassDefinition
p2570
(dp2571
g4
I1
sg5
I0
sg6
g2569
sg7
S'TSVMLearner'
p2572
sg9
I00
sg10
(lp2573
sg12
(lp2574
(S'bool'
p2575
S'useNonMeta'
p2576
S'use_non_meta'
p2577
S'include non meta attributes in the learning process'
p2578
I0
I0
I01
Ntp2579
ag2011
ag2016
ag2020
ag2024
ag2028
ag2032
ag2036
ag2040
ag2044
ag2047
ag2051
ag2055
ag2059
ag2064
ag47
asg29
(dp2580
sbsS'TSubsetsGenerator_constant_iterator'
p2581
(i__main__
ClassDefinition
p2582
(dp2583
g4
I1
sg5
I0
sg6
g2581
sg7
S'TSubsetsGenerator_iterator'
p2584
sg9
I00
sg10
(lp2585
sg12
(lp2586
(S'TVarList'
p2587
S'constant'
p2588
g2588
S'a subset that is returned (once!)'
p2589
I0
I0
I00
Ntp2590
a(S'bool'
p2591
S'moreToCome'
p2592
S'more_to_come'
p2593
g1294
I0
I0
I01
Ntp2594
ag192
asg29
(dp2595
sbsS'TExampleDistConstructor'
p2596
(i__main__
ClassDefinition
p2597
(dp2598
g4
I1
sg5
I0
sg6
g2596
sg7
S'TOrange'
p2599
sg9
I01
sg10
(lp2600
sg12
(lp2601
sg29
(dp2602
sbsS'TIMByIMByRows'
p2603
(i__main__
ClassDefinition
p2604
(dp2605
g4
I1
sg5
I0
sg6
g2603
sg7
S'TIMConstructor'
p2606
sg9
I00
sg10
(lp2607
sg12
(lp2608
(S'bool'
p2609
S'recordRowExamples'
p2610
S'record_row_examples'
p2611
S'enables creation of rowExample list'
p2612
I0
I0
I01
Ntp2613
asg29
(dp2614
sbsS'TDiscrete2Continuous'
p2615
(i__main__
ClassDefinition
p2616
(dp2617
g4
I1
sg5
I0
sg6
g2615
sg7
S'TTransformValue'
p2618
sg9
I00
sg10
(lp2619
sg12
(lp2620
(S'int'
p2621
S'value'
p2622
g2622
S'target value'
p2623
I0
I0
I01
Ntp2624
a(S'bool'
p2625
S'invert'
p2626
g2626
S'give 1.0 to values not equal to the target'
p2627
I0
I0
I01
Ntp2628
a(S'bool'
p2629
S'zeroBased'
p2630
S'zero_based'
p2631
S'if true (default) it gives values 0.0 and 1.0; else -1.0 and 1.0, 0.0 for undefined'
p2632
I0
I0
I01
Ntp2633
ag318
asg29
(dp2634
sbsS'TColumnAssessor_m'
p2635
(i__main__
ClassDefinition
p2636
(dp2637
g4
I1
sg5
I0
sg6
g2635
sg7
S'TColumnAssessor'
p2638
sg9
I00
sg10
(lp2639
sg12
(lp2640
(S'float'
p2641
g991
g991
S'm for m-estimate'
p2642
I0
I0
I01
Ntp2643
asg29
(dp2644
sbsS'TImputer_defaults'
p2645
(i__main__
ClassDefinition
p2646
(dp2647
g4
I1
sg5
I0
sg6
g2645
sg7
S'TImputer'
p2648
sg9
I00
sg10
(lp2649
sg12
(lp2650
(S'TExample'
p2651
S'defaults'
p2652
g2652
S'values that are to be inserted instead of missing ones'
p2653
I0
I0
I00
Ntp2654
asg29
(dp2655
sbsS'TContingency'
p2656
(i__main__
ClassDefinition
p2657
(dp2658
g4
I1
sg5
I0
sg6
g2656
sg7
S'TOrange'
p2659
sg9
I00
sg10
(lp2660
sg12
(lp2661
g815
ag820
ag826
ag831
ag836
ag841
asg29
(dp2662
sbsS'TStringValue'
p2663
(i__main__
ClassDefinition
p2664
(dp2665
g4
I1
sg5
I0
sg6
g2663
sg7
S'TSomeValue'
p2666
sg9
I00
sg10
(lp2667
sg12
(lp2668
sg29
(dp2669
sbsS'TClassifierGenerator'
p2670
(i__main__
ClassDefinition
p2671
(dp2672
g4
I1
sg5
I0
sg6
g2670
sg7
S'TExampleGenerator'
p2673
sg9
I00
sg10
(lp2674
sg12
(lp2675
(S'TClassifier'
p2676
S'classify'
p2677
g2677
S'classifier'
p2678
I0
I0
I00
Ntp2679
ag121
ag125
asg29
(dp2680
sbsS'TRuleDataStoppingCriteria_Python'
p2681
(i__main__
ClassDefinition
p2682
(dp2683
g4
I1
sg5
I0
sg6
g2681
sg7
S'TRuleDataStoppingCriteria'
p2684
sg9
I00
sg10
(lp2685
sg12
(lp2686
sg29
(dp2687
sbsS'TTreeDescender_UnknownToCommonSelector'
p2688
(i__main__
ClassDefinition
p2689
(dp2690
g4
I1
sg5
I0
sg6
g2688
sg7
g2213
sg9
I0
sg10
(lp2691
sg12
(lp2692
sg29
(dp2693
sbsS'TPreprocessIM'
p2694
(i__main__
ClassDefinition
p2695
(dp2696
g4
I1
sg5
I0
sg6
g2694
sg7
S'TOrange'
p2697
sg9
I01
sg10
(lp2698
sg12
(lp2699
sg29
(dp2700
sbsS'TRuleEvaluator_Laplace'
p2701
(i__main__
ClassDefinition
p2702
(dp2703
g4
I1
sg5
I0
sg6
g2701
sg7
S'TRuleEvaluator'
p2704
sg9
I00
sg10
(lp2705
sg12
(lp2706
sg29
(dp2707
sbsS'TColumnAssessor_N'
p2708
(i__main__
ClassDefinition
p2709
(dp2710
g4
I1
sg5
I0
sg6
g2708
sg7
S'TColumnAssessor'
p2711
sg9
I00
sg10
(lp2712
sg12
(lp2713
sg29
(dp2714
sbsS'TRuleEvaluator_mEVC'
p2715
(i__main__
ClassDefinition
p2716
(dp2717
g4
I1
sg5
I0
sg6
g2715
sg7
S'TRuleEvaluator'
p2718
sg9
I00
sg10
(lp2719
sg12
(lp2720
(S'float'
p2721
g991
g991
S'Parameter m for m-estimate after EVC correction'
p2722
I0
I0
I01
Ntp2723
a(S'TEVDistGetter'
p2724
S'evDistGetter'
p2725
S'ev_dist_getter'
p2726
S'get EVC distribution for chi correction'
p2727
I0
I0
I00
Ntp2728
a(S'TVariable'
p2729
S'probVar'
p2730
S'prob_var'
p2731
S'probability coverage variable (meta usually)'
p2732
I0
I0
I00
Ntp2733
a(S'TRuleValidator'
p2734
S'validator'
p2735
g2735
S'rule validator for best rule'
p2736
I0
I0
I00
Ntp2737
a(S'int'
p2738
S'min_improved'
p2739
g2739
S'minimal number of improved examples'
p2740
I0
I0
I01
Ntp2741
a(S'float'
p2742
S'min_improved_perc'
p2743
g2743
S'minimal percentage of improved examples'
p2744
I0
I0
I01
Ntp2745
a(S'TRule'
p2746
S'bestRule'
p2747
S'best_rule'
p2748
S'best rule found and evaluated given conditions (min_improved, validator)'
p2749
I0
I0
I00
Ntp2750
a(S'float'
p2751
S'ruleAlpha'
p2752
S'rule_alpha'
p2753
S"minimal 'true' rule significance"
p2754
I0
I0
I01
Ntp2755
a(S'float'
p2756
S'attributeAlpha'
p2757
S'attribute_alpha'
p2758
S'minimal attribute significance'
p2759
I0
I0
I01
Ntp2760
a(S'bool'
p2761
S'returnExpectedProb'
p2762
S'return_expected_prob'
p2763
S'if true, evaluator returns expected class probability, if false, current class probability'
p2764
I0
I0
I01
Ntp2765
a(S'int'
p2766
S'optimismReduction'
p2767
S'optimism_reduction'
p2768
S'to select optimstic (0), pessimistic (1) or EVC (2) evaluation'
p2769
I0
I0
I01
Ntp2770
asg29
(dp2771
sbsS'TExample'
p2772
(i__main__
ClassDefinition
p2773
(dp2774
g4
I1
sg5
I0
sg6
g2772
sg7
S'TOrange'
p2775
sg9
I00
sg10
(lp2776
sg12
(lp2777
(S'TDomain'
p2778
S'domain'
p2779
g2779
S"Example's domain"
p2780
I01
I0
I00
Ntp2781
a(S'int'
p2782
S'id'
p2783
g2783
g1294
I0
I0
I01
Ntp2784
asg29
(dp2785
sbsS'TOrdinal2Continuous'
p2786
(i__main__
ClassDefinition
p2787
(dp2788
g4
I1
sg5
I0
sg6
g2786
sg7
S'TTransformValue'
p2789
sg9
I00
sg10
(lp2790
sg12
(lp2791
(S'float'
p2792
S'factor'
p2793
g2793
S'number of values'
p2794
I0
I0
I01
Ntp2795
ag318
asg29
(dp2796
sbsS'TExampleDistBySorting'
p2797
(i__main__
ClassDefinition
p2798
(dp2799
g4
I1
sg5
I0
sg6
g2797
sg7
S'TExampleDistConstructor'
p2800
sg9
I00
sg10
(lp2801
sg12
(lp2802
sg29
(dp2803
sbsS'TValueFilter_discrete'
p2804
(i__main__
ClassDefinition
p2805
(dp2806
g4
I1
sg5
I0
sg6
g2804
sg7
S'TValueFilter'
p2807
sg9
I00
sg10
(lp2808
sg12
(lp2809
(S'TValueList'
p2810
S'values'
p2811
g2811
S'accepted values'
p2812
I0
I0
I00
Ntp2813
a(S'bool'
p2814
S'negate'
p2815
g2815
S'negate'
p2816
I0
I0
I01
Ntp2817
a(S'int'
p2818
S'position'
p2819
g2819
S"attribute's position in domain"
p2820
I0
I0
I01
Ntp2821
a(S'int'
p2822
S'acceptSpecial'
p2823
S'accept_special'
p2824
S'tells whether a special value (DK, DC...) is accepted (1), rejected (0) or ignored (-1)'
p2825
I0
I0
I01
Ntp2826
asg29
(dp2827
sbsS'TAssociationRulesInducer'
p2828
(i__main__
ClassDefinition
p2829
(dp2830
g4
I1
sg5
I0
sg6
g2828
sg7
S'TOrange'
p2831
sg9
I00
sg10
(lp2832
sg12
(lp2833
(S'int'
p2834
S'maxItemSets'
p2835
S'max_item_sets'
p2836
S'maximal number of itemsets (increase if you want)'
p2837
I0
I0
I01
Ntp2838
a(S'float'
p2839
S'confidence'
p2840
g2840
S'required confidence'
p2841
I0
I0
I01
Ntp2842
a(S'float'
p2843
S'support'
p2844
g2844
S'required support'
p2845
I0
I0
I01
Ntp2846
a(S'bool'
p2847
S'classificationRules'
p2848
S'classification_rules'
p2849
S'if true, rules will have the class and only the class attribute on the right-hand side'
p2850
I0
I0
I01
Ntp2851
a(S'bool'
p2852
S'storeExamples'
p2853
S'store_examples'
p2854
S'if true, each rule is going to have tables with references to examples which match its left side or both sides'
p2855
I0
I0
I01
Ntp2856
asg29
(dp2857
sbsS'TPreprocessor_addMissingClasses'
p2858
(i__main__
ClassDefinition
p2859
(dp2860
g4
I1
sg5
I0
sg6
g2858
sg7
S'TPreprocessor'
p2861
sg9
I00
sg10
(lp2862
sg12
(lp2863
(S'float'
p2864
S'proportion'
p2865
g2865
S'proportion of removed class values'
p2866
I0
I0
I01
Ntp2867
a(S'int'
p2868
S'specialType'
p2869
S'special_type'
p2870
S'special value type (1=DC, 2=DK)'
p2871
I0
I0
I01
Ntp2872
a(S'TRandomGenerator'
p2873
S'randomGenerator'
p2874
S'random_generator'
p2875
S'random number generator'
p2876
I0
I0
I00
Ntp2877
asg29
(dp2878
sbsS'TBasketExampleGenerator'
p2879
(i__main__
ClassDefinition
p2880
(dp2881
g4
I1
sg5
I0
sg6
g2879
sg7
S'TFileExampleGenerator'
p2882
sg9
I00
sg10
(lp2883
sg12
(lp2884
g737
ag742
ag747
ag121
ag125
asg29
(dp2885
sbsS'TRuleEvaluator_Entropy'
p2886
(i__main__
ClassDefinition
p2887
(dp2888
g4
I1
sg5
I0
sg6
g2886
sg7
S'TRuleEvaluator'
p2889
sg9
I00
sg10
(lp2890
sg12
(lp2891
sg29
(dp2892
sbsS'TExamplesDistance_DTW'
p2893
(i__main__
ClassDefinition
p2894
(dp2895
g4
I1
sg5
I0
sg6
g2893
sg7
S'TExamplesDistance_Normalized'
p2896
sg9
I00
sg10
(lp2897
sg12
(lp2898
(S'int'
p2899
S'dtwDistance'
p2900
S'dtw_distance'
p2901
S' distance measure between individual attributes (default: square of difference)'
p2902
I0
I0
I01
S'ExamplesDistance_DTW_DistanceType'
p2903
tp2904
ag136
ag140
ag144
ag148
ag153
ag157
ag162
asg29
(dp2905
S'DistanceType'
p2906
(lp2907
(S'Euclidean'
p2908
I0
tp2909
a(S'Derivative'
p2910
I1
tp2911
assbsS'TTreeExampleSplitter_UnknownsToRandom'
p2912
(i__main__
ClassDefinition
p2913
(dp2914
g4
I1
sg5
I0
sg6
g2912
sg7
S'TTreeExampleSplitter'
p2915
sg9
I00
sg10
(lp2916
sg12
(lp2917
sg29
(dp2918
sbsS'TTreeSplitConstructor_Combined'
p2919
(i__main__
ClassDefinition
p2920
(dp2921
g4
I1
sg5
I0
sg6
g2919
sg7
S'TTreeSplitConstructor'
p2922
sg9
I00
sg10
(lp2923
sg12
(lp2924
(S'TTreeSplitConstructor'
p2925
S'discreteSplitConstructor'
p2926
S'discrete_split_constructor'
p2927
S'split constructor for discrete attributes'
p2928
I0
I0
I00
Ntp2929
a(S'TTreeSplitConstructor'
p2930
S'continuousSplitConstructor'
p2931
S'continuous_split_constructor'
p2932
S'split constructor for continuous attributes'
p2933
I0
I0
I00
Ntp2934
ag1693
asg29
(dp2935
sbsS'TExamplesDistanceConstructor_DTW'
p2936
(i__main__
ClassDefinition
p2937
(dp2938
g4
I1
sg5
I0
sg6
g2936
sg7
S'TExamplesDistanceConstructor_Normalized'
p2939
sg9
I00
sg10
(lp2940
sg12
(lp2941
(S'int'
p2942
S'dtwDistance'
p2943
S'dtw_distance'
p2944
S'distance measure between individual attributes (default: square of difference)'
p2945
I0
I0
I01
Ntp2946
ag96
ag101
ag106
asg29
(dp2947
sbsS'TStopIMClusteringByAssessor_n'
p2948
(i__main__
ClassDefinition
p2949
(dp2950
g4
I1
sg5
I0
sg6
g2948
sg7
S'TStopIMClusteringByAssessor'
p2951
sg9
I00
sg10
(lp2952
sg12
(lp2953
(S'int'
p2954
g385
g385
S'number of clusters'
p2955
I0
I0
I01
Ntp2956
asg29
(dp2957
sbsS'TRandomGenerator'
p2958
(i__main__
ClassDefinition
p2959
(dp2960
g4
I1
sg5
I0
sg6
g2958
sg7
S'TOrange'
p2961
sg9
I00
sg10
(lp2962
sg12
(lp2963
(S'int'
p2964
S'initseed'
p2965
g2965
S'initial random seed'
p2966
I0
I0
I01
Ntp2967
a(S'int'
p2968
S'uses'
p2969
g2969
S'#times a number was returned'
p2970
I0
I0
I01
Ntp2971
asg29
(dp2972
sbsS'TPreprocessor_imputeByLearner'
p2973
(i__main__
ClassDefinition
p2974
(dp2975
g4
I1
sg5
I0
sg6
g2973
sg7
S'TPreprocessor'
p2976
sg9
I00
sg10
(lp2977
sg12
(lp2978
(S'TLearner'
p2979
S'learner'
p2980
g2980
S'learner used for inducing a model for imputation'
p2981
I0
I0
I00
Ntp2982
asg29
(dp2983
sbsS'TLogRegLearner'
p2984
(i__main__
ClassDefinition
p2985
(dp2986
g4
I1
sg5
I0
sg6
g2984
sg7
S'TLearner'
p2987
sg9
I00
sg10
(lp2988
sg12
(lp2989
(S'TLogRegFitter'
p2990
S'fitter'
p2991
g2991
S'fits beta coefficients and calculates beta errors.'
p2992
I0
I0
I00
Ntp2993
a(S'TImputerConstructor'
p2994
S'imputerConstructor'
p2995
S'imputer_constructor'
p2996
S'if present, it constructs an imputer for unknown values'
p2997
I0
I0
I00
Ntp2998
a(S'TDomainContinuizer'
p2999
S'domainContinuizer'
p3000
S'domain_continuizer'
p3001
S'if present, it constructs continuous domain if needed; if absent, default is used'
p3002
I0
I0
I00
Ntp3003
ag47
asg29
(dp3004
sbsS'TMeasureAttribute_IM'
p3005
(i__main__
ClassDefinition
p3006
(dp3007
g4
I1
sg5
I0
sg6
g3005
sg7
S'TMeasureAttribute'
p3008
sg9
I00
sg10
(lp3009
sg12
(lp3010
(S'TIMConstructor'
p3011
S'IMconstructor'
p3012
g3012
S'incompatibility matrix constructor'
p3013
I0
I0
I00
Ntp3014
a(S'TColumnAssessor'
p3015
S'columnAssessor'
p3016
S'column_assessor'
p3017
S'column quality assessor'
p3018
I0
I0
I00
Ntp3019
ag462
ag467
ag472
ag477
asg29
(dp3020
sbsS'TRuleStoppingCriteria_Python'
p3021
(i__main__
ClassDefinition
p3022
(dp3023
g4
I1
sg5
I0
sg6
g3021
sg7
S'TRuleStoppingCriteria'
p3024
sg9
I00
sg10
(lp3025
sg12
(lp3026
sg29
(dp3027
sbsS'TRemoveUnusedValues'
p3028
(i__main__
ClassDefinition
p3029
(dp3030
g4
I1
sg5
I0
sg6
g3028
sg7
S'TOrange'
p3031
sg9
I00
sg10
(lp3032
sg12
(lp3033
(S'bool'
p3034
S'removeOneValued'
p3035
S'remove_one_valued'
p3036
S'if true (default is false), one valued attributes are also removed'
p3037
I0
I0
I01
Ntp3038
asg29
(dp3039
sbsS'TExamplesDistance_Normalized'
p3040
(i__main__
ClassDefinition
p3041
(dp3042
g4
I1
sg5
I0
sg6
g3040
sg7
S'TExamplesDistance'
p3043
sg9
I01
sg10
(lp3044
sg12
(lp3045
g136
ag140
ag144
ag148
ag153
ag157
ag162
asg29
(dp3046
sbsS'TPreprocessor_take'
p3047
(i__main__
ClassDefinition
p3048
(dp3049
g4
I1
sg5
I0
sg6
g3047
sg7
S'TPreprocessor'
p3050
sg9
I00
sg10
(lp3051
sg12
(lp3052
(S'TVariableFilterMap'
p3053
S'values'
p3054
g3054
S'variable-filter pairs'
p3055
I0
I0
I00
Ntp3056
a(S'bool'
p3057
S'conjunction'
p3058
g3058
S'decides whether to take conjunction or disjunction of values'
p3059
I0
I0
I01
Ntp3060
asg29
(dp3061
sbsS'TRuleFinder_Python'
p3062
(i__main__
ClassDefinition
p3063
(dp3064
g4
I1
sg5
I0
sg6
g3062
sg7
S'TRuleFinder'
p3065
sg9
I00
sg10
(lp3066
sg12
(lp3067
g1894
ag1897
asg29
(dp3068
sbsS'TTabDelimExampleGenerator'
p3069
(i__main__
ClassDefinition
p3070
(dp3071
g4
I1
sg5
I0
sg6
g3069
sg7
S'TFileExampleGenerator'
p3072
sg9
I00
sg10
(lp3073
sg12
(lp3074
(S'TIntList'
p3075
S'attributeTypes'
p3076
S'attribute_types'
p3077
S'types of attributes (-1 normal, 0 skip, <-1 = meta ID)'
p3078
I0
I0
I00
Ntp3079
a(S'int'
p3080
S'classPos'
p3081
S'class_pos'
p3082
S'position of the class attribute'
p3083
I0
I0
I01
Ntp3084
a(S'TIntList'
p3085
S'classPoses'
p3086
S'class_poses'
p3087
S'positions of class attributes if there are multiple; otherwise None'
p3088
I0
I0
I00
Ntp3089
a(S'int'
p3090
S'basketPos'
p3091
S'basket_pos'
p3092
S'position of the (virtual) basket attribute'
p3093
I0
I0
I01
Ntp3094
a(S'int'
p3095
S'headerLines'
p3096
S'header_lines'
p3097
S'number of header lines (3 for .tab, 1 for .txt)'
p3098
I0
I0
I01
Ntp3099
a(S'bool'
p3100
S'csv'
p3101
g3101
S"also allow ',' as a separator"
p3102
I0
I0
I01
Ntp3103
a(S'TBasketFeeder'
p3104
S'basketFeeder'
p3105
S'basket_feeder'
p3106
S'takes care of inserting the meta attributes from the basket if need be'
p3107
I0
I0
I00
Ntp3108
ag737
ag742
ag747
ag121
ag125
asg29
(dp3109
sbsS'TkNNLearner'
p3110
(i__main__
ClassDefinition
p3111
(dp3112
g4
I1
sg5
I0
sg6
g3110
sg7
S'TLearner'
p3113
sg9
I00
sg10
(lp3114
sg12
(lp3115
(S'float'
p3116
g987
g987
S'number of neighbours (0 for sqrt of #examples)'
p3117
I0
I0
I01
Ntp3118
a(S'bool'
p3119
S'rankWeight'
p3120
S'rank_weight'
p3121
S'enable weighting by ranks'
p3122
I0
I0
I01
Ntp3123
a(S'TExamplesDistanceConstructor'
p3124
S'distanceConstructor'
p3125
S'distance_constructor'
p3126
S'metrics'
p3127
I0
I0
I00
Ntp3128
ag47
asg29
(dp3129
sbsS'TDistributionAssessor_mf'
p3130
(i__main__
ClassDefinition
p3131
(dp3132
g4
I1
sg5
I0
sg6
g3130
sg7
S'TDistributionAssessor'
p3133
sg9
I00
sg10
(lp3134
sg12
(lp3135
(S'float'
p3136
g991
g991
S'm for m-estimate'
p3137
I0
I0
I01
Ntp3138
asg29
(dp3139
sbsS'TEFMDataDescription'
p3140
(i__main__
ClassDefinition
p3141
(dp3142
g4
I1
sg5
I0
sg6
g3140
sg7
S'TOrange'
p3143
sg9
I00
sg10
(lp3144
S'domainDistributions'
p3145
asg12
(lp3146
(S'TDomain'
p3147
S'domain'
p3148
g3148
S'domain'
p3149
I01
I0
I00
Ntp3150
asg29
(dp3151
sbsS'TClassifierFD'
p3152
(i__main__
ClassDefinition
p3153
(dp3154
g4
I1
sg5
I0
sg6
g3152
sg7
S'TClassifier'
p3155
sg9
I00
sg10
(lp3156
sg12
(lp3157
g901
ag791
ag796
asg29
(dp3158
sbsS'TTreeDescender_UnknownToCommonBranch'
p3159
(i__main__
ClassDefinition
p3160
(dp3161
g4
I1
sg5
I0
sg6
g3159
sg7
g2213
sg9
I0
sg10
(lp3162
sg12
(lp3163
sg29
(dp3164
sbsS'TStopIMClusteringByAssessor_binary'
p3165
(i__main__
ClassDefinition
p3166
(dp3167
g4
I1
sg5
I0
sg6
g3165
sg7
S'TStopIMClusteringByAssessor'
p3168
sg9
I00
sg10
(lp3169
sg12
(lp3170
sg29
(dp3171
sbsS'TExamplesDistanceConstructor'
p3172
(i__main__
ClassDefinition
p3173
(dp3174
g4
I1
sg5
I0
sg6
g3172
sg7
S'TOrange'
p3175
sg9
I01
sg10
(lp3176
sg12
(lp3177
g106
asg29
(dp3178
sbsS'TRuleBeamCandidateSelector_Python'
p3179
(i__main__
ClassDefinition
p3180
(dp3181
g4
I1
sg5
I0
sg6
g3179
sg7
S'TRuleBeamCandidateSelector'
p3182
sg9
I00
sg10
(lp3183
sg12
(lp3184
sg29
(dp3185
sbsS'TEntropyDiscretization'
p3186
(i__main__
ClassDefinition
p3187
(dp3188
g4
I1
sg5
I0
sg6
g3186
sg7
S'TDiscretization'
p3189
sg9
I00
sg10
(lp3190
sg12
(lp3191
(S'int'
p3192
S'maxNumberOfIntervals'
p3193
(g3193
g385
tp3194
S' maximal number of intervals; default = 0 (no limits)'
p3195
I0
I0
I01
Ntp3196
a(S'bool'
p3197
S'forceAttribute'
p3198
(g3198
S'forced'
p3199
tp3200
S' minimal number of intervals; default = 0 (no limits)'
p3201
I0
I0
I01
Ntp3202
asg29
(dp3203
sbsS'TIMBySorting'
p3204
(i__main__
ClassDefinition
p3205
(dp3206
g4
I1
sg5
I0
sg6
g3204
sg7
S'TIMConstructor'
p3207
sg9
I00
sg10
(lp3208
sg12
(lp3209
g2613
asg29
(dp3210
sbsS'TImputerConstructor_asValue'
p3211
(i__main__
ClassDefinition
p3212
(dp3213
g4
I1
sg5
I0
sg6
g3211
sg7
S'TImputerConstructor'
p3214
sg9
I00
sg10
(lp3215
sg12
(lp3216
g1483
asg29
(dp3217
sbsS'TExampleDistVector'
p3218
(i__main__
ClassDefinition
p3219
(dp3220
g4
I1
sg5
I0
sg6
g3218
sg7
S'TOrange'
p3221
sg9
I00
sg10
(lp3222
sg12
(lp3223
sg29
(dp3224
sbsS'TIMClustering'
p3225
(i__main__
ClassDefinition
p3226
(dp3227
g4
I1
sg5
I0
sg6
g3225
sg7
S'TOrange'
p3228
sg9
I00
sg10
(lp3229
sg12
(lp3230
(S'TIM'
p3231
S'im'
p3232
g3232
S'incompatibilty matrix'
p3233
I0
I0
I00
Ntp3234
a(S'TIntList'
p3235
S'clusters'
p3236
g3236
S'cluster index for each matrix column'
p3237
I0
I0
I00
Ntp3238
a(S'int'
p3239
S'maxCluster'
p3240
S'max_cluster'
p3241
S'the highest cluster index'
p3242
I0
I0
I01
Ntp3243
a(S'float'
p3244
S'quality'
p3245
g3245
S'cluster quality'
p3246
I0
I0
I01
Ntp3247
asg29
(dp3248
sbsS'TRuleStoppingCriteria'
p3249
(i__main__
ClassDefinition
p3250
(dp3251
g4
I1
sg5
I0
sg6
g3249
sg7
S'TOrange'
p3252
sg9
I01
sg10
(lp3253
sg12
(lp3254
sg29
(dp3255
sbsS'TImputerConstructor_model'
p3256
(i__main__
ClassDefinition
p3257
(dp3258
g4
I1
sg5
I0
sg6
g3256
sg7
S'TImputerConstructor'
p3259
sg9
I00
sg10
(lp3260
sg12
(lp3261
(S'TLearner'
p3262
S'learnerDiscrete'
p3263
S'learner_discrete'
p3264
S'learner for discrete attributes'
p3265
I0
I0
I00
Ntp3266
a(S'TLearner'
p3267
S'learnerContinuous'
p3268
S'learner_continuous'
p3269
S'learner for continuous attributes'
p3270
I0
I0
I00
Ntp3271
a(S'bool'
p3272
S'useClass'
p3273
S'use_class'
p3274
S'tells whether to use class value in imputation (default: false)'
p3275
I0
I0
I01
Ntp3276
ag1483
asg29
(dp3277
sbsS'TFindNearestConstructor_BruteForce'
p3278
(i__main__
ClassDefinition
p3279
(dp3280
g4
I1
sg5
I0
sg6
g3278
sg7
S'TFindNearestConstructor'
p3281
sg9
I00
sg10
(lp3282
sg12
(lp3283
g1035
ag1040
asg29
(dp3284
sbsS'TImputerConstructor'
p3285
(i__main__
ClassDefinition
p3286
(dp3287
g4
I1
sg5
I0
sg6
g3285
sg7
S'TOrange'
p3288
sg9
I01
sg10
(lp3289
sg12
(lp3290
g1483
asg29
(dp3291
sbsS'TDiscretizer'
p3292
(i__main__
ClassDefinition
p3293
(dp3294
g4
I1
sg5
I0
sg6
g3292
sg7
S'TTransformValue'
p3295
sg9
I01
sg10
(lp3296
sg12
(lp3297
g318
asg29
(dp3298
sbsS'TTreeStopCriteria_common'
p3299
(i__main__
ClassDefinition
p3300
(dp3301
g4
I1
sg5
I0
sg6
g3299
sg7
S'TTreeStopCriteria'
p3302
sg9
I00
sg10
(lp3303
sg12
(lp3304
(S'float'
p3305
S'maxMajority'
p3306
S'max_majority'
p3307
S'a maximal proportion of majority class for division to continue'
p3308
I0
I0
I01
Ntp3309
a(S'float'
p3310
S'minExamples'
p3311
S'min_examples'
p3312
S'a minimal number of examples for division to continue'
p3313
I0
I0
I01
Ntp3314
asg29
(dp3315
sbsS'TTreeStopCriteria_Python'
p3316
(i__main__
ClassDefinition
p3317
(dp3318
g4
I1
sg5
I0
sg6
g3316
sg7
S'TTreeStopCriteria'
p3319
sg9
I00
sg10
(lp3320
sg12
(lp3321
sg29
(dp3322
sbsS'TIGByIM'
p3323
(i__main__
ClassDefinition
p3324
(dp3325
g4
I1
sg5
I0
sg6
g3323
sg7
S'TIGConstructor'
p3326
sg9
I00
sg10
(lp3327
sg12
(lp3328
(S'TIMConstructor'
p3329
S'IMconstructor'
p3330
g3330
S'IM constructor'
p3331
I0
I0
I00
Ntp3332
asg29
(dp3333
sbsS'TRuleEvaluator_LRS'
p3334
(i__main__
ClassDefinition
p3335
(dp3336
g4
I1
sg5
I0
sg6
g3334
sg7
S'TRuleEvaluator'
p3337
sg9
I00
sg10
(lp3338
sg12
(lp3339
(S'TRuleList'
p3340
S'rules'
p3341
g3341
g1294
I0
I0
I00
Ntp3342
a(S'bool'
p3343
S'storeRules'
p3344
S'store_rules'
p3345
g1294
I0
I0
I01
Ntp3346
asg29
(dp3347
sbsS'TExampleCluster'
p3348
(i__main__
ClassDefinition
p3349
(dp3350
g4
I1
sg5
I0
sg6
g3348
sg7
S'TOrange'
p3351
sg9
I00
sg10
(lp3352
sg12
(lp3353
(S'TExampleCluster'
p3354
S'left'
p3355
g3355
S"'left' cluster"
p3356
I0
I0
I00
Ntp3357
a(S'TExampleCluster'
p3358
S'right'
p3359
g3359
S"'right' cluster"
p3360
I0
I0
I00
Ntp3361
a(S'float'
p3362
S'distance'
p3363
g3363
S'distance between the two clusters (not defined for leaves)'
p3364
I0
I0
I01
Ntp3365
a(S'TExample'
p3366
S'centroid'
p3367
g3367
S"cluster's centroid (always defined for leaves)"
p3368
I0
I0
I00
Ntp3369
asg29
(dp3370
sbsS'TClassifierByLookupTableN'
p3371
(i__main__
ClassDefinition
p3372
(dp3373
g4
I1
sg5
I0
sg6
g3371
sg7
S'TClassifierByLookupTable'
p3374
sg9
I00
sg10
(lp3375
sg12
(lp3376
(S'TVarList'
p3377
S'variables'
p3378
g3378
S'attributes'
p3379
I01
I0
I00
Ntp3380
a(S'TIntList'
p3381
S'noOfValues'
p3382
S'no_of_values'
p3383
S'number of values for each attribute'
p3384
I01
I0
I00
Ntp3385
a(S'TEFMDataDescription'
p3386
S'dataDescription'
p3387
S'data_description'
p3388
S'data description'
p3389
I0
I0
I00
Ntp3390
ag782
ag786
ag791
ag796
asg29
(dp3391
sbsS'TP2NN'
p3392
(i__main__
ClassDefinition
p3393
(dp3394
g4
I1
sg5
I0
sg6
g3392
sg7
S'TPNN'
p3395
sg9
I00
sg10
(lp3396
sg12
(lp3397
(S'int'
p3398
S'dimensions'
p3399
g3399
S'the number of dimensions'
p3400
I01
I0
I01
Ntp3401
a(S'TFloatList'
p3402
S'offsets'
p3403
g3403
S'offsets to subtract from the attribute values'
p3404
I0
I0
I00
Ntp3405
a(S'TFloatList'
p3406
S'normalizers'
p3407
g3407
S'number to divide the values by'
p3408
I0
I0
I00
Ntp3409
a(S'TFloatList'
p3410
S'averages'
p3411
g3411
S'numbers to use instead of the missing'
p3412
I0
I0
I00
Ntp3413
a(S'bool'
p3414
S'normalizeExamples'
p3415
S'normalize_examples'
p3416
S'if true, attribute values are divided to sum up to 1'
p3417
I0
I0
I01
Ntp3418
a(S'int'
p3419
S'nExamples'
p3420
S'n_examples'
p3421
S'the number of examples'
p3422
I01
I0
I01
Ntp3423
a(S'int'
p3424
S'law'
p3425
g3425
S'law'
p3426
I0
I0
I01
Ntp3427
ag901
ag791
ag796
asg29
(dp3428
sbsS'TImputerConstruct_Python'
p3429
(i__main__
ClassDefinition
p3430
(dp3431
g4
I1
sg5
I0
sg6
g3429
sg7
S'TImputerConstructor'
p3432
sg9
I00
sg10
(lp3433
sg12
(lp3434
g1483
asg29
(dp3435
sbsS'TSubsetsGenerator_withRestrictions'
p3436
(i__main__
ClassDefinition
p3437
(dp3438
g4
I1
sg5
I0
sg6
g3436
sg7
S'TSubsetsGenerator'
p3439
sg9
I00
sg10
(lp3440
sg12
(lp3441
(S'TSubsetsGenerator'
p3442
S'subGenerator'
p3443
S'sub_generator'
p3444
S'subset generator'
p3445
I0
I0
I00
Ntp3446
a(S'TVarList'
p3447
S'required'
p3448
g3448
S'set of required attributes'
p3449
I0
I0
I00
Ntp3450
a(S'TVarList'
p3451
S'forbidden'
p3452
g3452
S'set of forbidden attributes'
p3453
I0
I0
I00
Ntp3454
a(S'TVarListList'
p3455
S'forbiddenSubSubsets'
p3456
S'forbidden_sub_subsets'
p3457
S'set of forbidden subsets (attributes that must not occur together)'
p3458
I0
I0
I00
Ntp3459
ag2346
asg29
(dp3460
sbsS'TRuleBeamFilter_Python'
p3461
(i__main__
ClassDefinition
p3462
(dp3463
g4
I1
sg5
I0
sg6
g3461
sg7
S'TRuleBeamFilter'
p3464
sg9
I00
sg10
(lp3465
sg12
(lp3466
sg29
(dp3467
sbsS'TTreeExampleSplitter'
p3468
(i__main__
ClassDefinition
p3469
(dp3470
g4
I1
sg5
I0
sg6
g3468
sg7
S'TOrange'
p3471
sg9
I01
sg10
(lp3472
sg12
(lp3473
sg29
(dp3474
sbsS'TSVMClassifier'
p3475
(i__main__
ClassDefinition
p3476
(dp3477
g4
I1
sg5
I0
sg6
g3475
sg7
S'TClassifierFD'
p3478
sg9
I00
sg10
(lp3479
sg12
(lp3480
(S'TIntList'
p3481
S'nSV'
p3482
S'n_SV'
p3483
S'nSV'
p3484
I0
I0
I00
Ntp3485
a(S'TFloatList'
p3486
S'rho'
p3487
g3487
S'rho'
p3488
I0
I0
I00
Ntp3489
a(S'TFloatListList'
p3490
S'coef'
p3491
g3491
S'coef'
p3492
I0
I0
I00
Ntp3493
a(S'TFloatList'
p3494
S'probA'
p3495
S'prob_a'
p3496
S'probA - pairwise probability information'
p3497
I0
I0
I00
Ntp3498
a(S'TFloatList'
p3499
S'probB'
p3500
S'prob_b'
p3501
S'probB - pairwise probability information'
p3502
I0
I0
I00
Ntp3503
a(S'TExampleTable'
p3504
S'supportVectors'
p3505
S'support_vectors'
p3506
S'support vectors'
p3507
I0
I0
I00
Ntp3508
a(S'TExampleTable'
p3509
S'examples'
p3510
g3510
S'examples used to train the classifier'
p3511
I0
I0
I00
Ntp3512
a(S'TKernelFunc'
p3513
S'kernelFunc'
p3514
S'kernel_func'
p3515
S'custom kernel function'
p3516
I0
I0
I00
Ntp3517
a(S'int'
p3518
S'svm_type'
p3519
g3519
S'  SVM type (C_SVC=0, NU_SVC, ONE_CLASS, EPSILON_SVR=3, NU_SVR=4)'
p3520
I0
I0
I01
S'SVMLearner_SVMType'
p3521
tp3522
a(S'int'
p3523
S'kernel_type'
p3524
g3524
S'  kernel type (LINEAR=0, POLY, RBF, SIGMOID, CUSTOM=4)'
p3525
I0
I0
I01
S'SVMLearner_Kernel'
p3526
tp3527
ag901
ag791
ag796
asg29
(dp3528
sbsS'TTreeLearner'
p3529
(i__main__
ClassDefinition
p3530
(dp3531
g4
I1
sg5
I0
sg6
g3529
sg7
S'TLearner'
p3532
sg9
I00
sg10
(lp3533
sg12
(lp3534
(S'TTreeSplitConstructor'
p3535
S'split'
p3536
g3536
S'split criterion'
p3537
I0
I0
I00
Ntp3538
a(S'TTreeStopCriteria'
p3539
S'stop'
p3540
g3540
S'stop criterion'
p3541
I0
I0
I00
Ntp3542
a(S'TComputeDomainContingency'
p3543
S'contingencyComputer'
p3544
S'contingency_computer'
p3545
S'computes contingency matrix'
p3546
I0
I0
I00
Ntp3547
a(S'TLearner'
p3548
S'nodeLearner'
p3549
S'node_learner'
p3550
S'node learner'
p3551
I0
I0
I00
Ntp3552
a(S'TTreeExampleSplitter'
p3553
S'exampleSplitter'
p3554
S'example_splitter'
p3555
S'splits examples to branches'
p3556
I0
I0
I00
Ntp3557
a(S'int'
p3558
S'maxDepth'
p3559
S'max_depth'
p3560
S'maximal tree depth (0 = root only, -1 = no limit)'
p3561
I0
I0
I01
Ntp3562
a(S'bool'
p3563
S'storeExamples'
p3564
S'store_examples'
p3565
S'if true (default: false), learning examples in nodes are stored'
p3566
I0
I0
I01
Ntp3567
a(S'bool'
p3568
S'storeDistributions'
p3569
S'store_distributions'
p3570
S'if true (default), class distributions of learning examples in nodes are stored'
p3571
I0
I0
I01
Ntp3572
a(S'bool'
p3573
S'storeContingencies'
p3574
S'store_contingencies'
p3575
S'if true (default), contingency matrices for examples are stored'
p3576
I0
I0
I01
Ntp3577
a(S'bool'
p3578
S'storeNodeClassifier'
p3579
S'store_node_classifier'
p3580
S'if true (default), the internal nodes have classifiers; needed for pruning'
p3581
I0
I0
I01
Ntp3582
a(S'TTreeDescender'
p3583
S'descender'
p3584
g3584
S'descends down the tree'
p3585
I0
I0
I00
Ntp3586
ag47
asg29
(dp3587
sbsS'TPreprocessor_shuffle'
p3588
(i__main__
ClassDefinition
p3589
(dp3590
g4
I1
sg5
I0
sg6
g3588
sg7
S'TPreprocessor'
p3591
sg9
I00
sg10
(lp3592
sg12
(lp3593
(S'TVarList'
p3594
S'attributes'
p3595
g3595
S'tells which attributes to shuffle'
p3596
I0
I0
I00
Ntp3597
a(S'TRandomGenerator'
p3598
S'randomGenerator'
p3599
S'random_generator'
p3600
S'random number generator'
p3601
I0
I0
I00
Ntp3602
asg29
(dp3603
sbsS'TLearner'
p3604
(i__main__
ClassDefinition
p3605
(dp3606
g4
I1
sg5
I0
sg6
g3604
sg7
S'TOrange'
p3607
sg9
I00
sg10
(lp3608
sg12
(lp3609
g47
asg29
(dp3610
sbsS'TRuleClassifier_logit'
p3611
(i__main__
ClassDefinition
p3612
(dp3613
g4
I1
sg5
I0
sg6
g3611
sg7
S'TRuleClassifier'
p3614
sg9
I00
sg10
(lp3615
sg12
(lp3616
(S'TDistribution'
p3617
S'prior'
p3618
g3618
S'prior distribution'
p3619
I0
I0
I00
Ntp3620
a(S'TDomain'
p3621
S'domain'
p3622
g3622
S'Domain'
p3623
I0
I0
I00
Ntp3624
a(S'TFloatList'
p3625
S'ruleBetas'
p3626
S'rule_betas'
p3627
S'Rule betas'
p3628
I0
I0
I00
Ntp3629
a(S'float'
p3630
S'minStep'
p3631
S'min_step'
p3632
S'minimal step value'
p3633
I0
I0
I01
Ntp3634
a(S'float'
p3635
S'minSignificance'
p3636
S'min_significance'
p3637
S'minimum requested significance for betas. '
p3638
I0
I0
I01
Ntp3639
a(S'float'
p3640
S'minBeta'
p3641
S'min_beta'
p3642
S'minimum beta by rule to be included in the model. '
p3643
I0
I0
I01
Ntp3644
a(S'TClassifier'
p3645
S'priorClassifier'
p3646
S'prior_classifier'
p3647
S'prior classifier used if provided'
p3648
I0
I0
I00
Ntp3649
a(S'TRuleList'
p3650
S'prefixRules'
p3651
S'prefix_rules'
p3652
S'rules that trigger before logit sum.'
p3653
I0
I0
I00
Ntp3654
ag1963
ag1966
ag1970
ag791
ag796
asg29
(dp3655
sbsS'TRuleCovererAndRemover'
p3656
(i__main__
ClassDefinition
p3657
(dp3658
g4
I1
sg5
I0
sg6
g3656
sg7
S'TOrange'
p3659
sg9
I01
sg10
(lp3660
sg12
(lp3661
sg29
(dp3662
sbsS'TPythonValue'
p3663
(i__main__
ClassDefinition
p3664
(dp3665
g4
I1
sg5
I0
sg6
g3663
sg7
S'TSomeValue'
p3666
sg9
I00
sg10
(lp3667
sg12
(lp3668
sg29
(dp3669
sbsS'TDistributionAssessor_Kramer'
p3670
(i__main__
ClassDefinition
p3671
(dp3672
g4
I1
sg5
I0
sg6
g3670
sg7
S'TDistributionAssessor'
p3673
sg9
I00
sg10
(lp3674
sg12
(lp3675
sg29
(dp3676
sbsS'TTreeExampleSplitter_UnknownsToBranch'
p3677
(i__main__
ClassDefinition
p3678
(dp3679
g4
I1
sg5
I0
sg6
g3677
sg7
S'TTreeExampleSplitter'
p3680
sg9
I00
sg10
(lp3681
sg12
(lp3682
sg29
(dp3683
sbsS'TMajorityLearner'
p3684
(i__main__
ClassDefinition
p3685
(dp3686
g4
I1
sg5
I0
sg6
g3684
sg7
S'TLearner'
p3687
sg9
I00
sg10
(lp3688
sg12
(lp3689
(S'TProbabilityEstimatorConstructor'
p3690
S'estimatorConstructor'
p3691
S'estimator_constructor'
p3692
S'constructs probability estimator'
p3693
I0
I0
I00
Ntp3694
a(S'TDistribution'
p3695
S'aprioriDistribution'
p3696
S'apriori_distribution'
p3697
S'apriori class distribution'
p3698
I0
I0
I00
Ntp3699
ag47
asg29
(dp3700
sbsS'TMeasureAttributeFromProbabilities'
p3701
(i__main__
ClassDefinition
p3702
(dp3703
g4
I1
sg5
I0
sg6
g3701
sg7
S'TMeasureAttribute'
p3704
sg9
I01
sg10
(lp3705
sg12
(lp3706
g446
ag451
ag457
ag462
ag467
ag472
ag477
asg29
(dp3707
sbsS'TProbabilityEstimatorConstructor_relative'
p3708
(i__main__
ClassDefinition
p3709
(dp3710
g4
I1
sg5
I0
sg6
g3708
sg7
S'TProbabilityEstimatorConstructor'
p3711
sg9
I00
sg10
(lp3712
sg12
(lp3713
sg29
(dp3714
sbsS'TClassifierByLookupTable3'
p3715
(i__main__
ClassDefinition
p3716
(dp3717
g4
I1
sg5
I0
sg6
g3715
sg7
S'TClassifierByLookupTable'
p3718
sg9
I00
sg10
(lp3719
sg12
(lp3720
(S'TVariable'
p3721
S'variable1'
p3722
g3722
S'the first attribute used for classification'
p3723
I01
I0
I00
Ntp3724
a(S'TVariable'
p3725
S'variable2'
p3726
g3726
S'the second attribute used for classification'
p3727
I01
I0
I00
Ntp3728
a(S'TVariable'
p3729
S'variable3'
p3730
g3730
S'the third attribute used for classification'
p3731
I01
I0
I00
Ntp3732
a(S'int'
p3733
S'noOfValues1'
p3734
S'no_of_values1'
p3735
S'number of values of the first attribute'
p3736
I01
I0
I01
Ntp3737
a(S'int'
p3738
S'noOfValues2'
p3739
S'no_of_values2'
p3740
S'number of values of the second attribute'
p3741
I01
I0
I01
Ntp3742
a(S'int'
p3743
S'noOfValues3'
p3744
S'no_of_values3'
p3745
S'number of values of the third attribute'
p3746
I01
I0
I01
Ntp3747
a(S'TEFMDataDescription'
p3748
S'dataDescription'
p3749
S'data_description'
p3750
S'data description'
p3751
I0
I0
I00
Ntp3752
ag782
ag786
ag791
ag796
asg29
(dp3753
sbsS'TThresholdCA'
p3754
(i__main__
ClassDefinition
p3755
(dp3756
g4
I1
sg5
I0
sg6
g3754
sg7
S'TOrange'
p3757
sg9
I00
sg10
(lp3758
sg12
(lp3759
sg29
(dp3760
sbsS'TClassifierByLookupTable1'
p3761
(i__main__
ClassDefinition
p3762
(dp3763
g4
I1
sg5
I0
sg6
g3761
sg7
S'TClassifierByLookupTable'
p3764
sg9
I00
sg10
(lp3765
sg12
(lp3766
(S'TVariable'
p3767
S'variable1'
p3768
(g3768
S'variable'
p3769
tp3770
S' attribute used for classification'
p3771
I01
I0
I00
Ntp3772
ag782
ag786
ag791
ag796
asg29
(dp3773
sbsS'TValueFilter_string'
p3774
(i__main__
ClassDefinition
p3775
(dp3776
g4
I1
sg5
I0
sg6
g3774
sg7
S'TValueFilter'
p3777
sg9
I00
sg10
(lp3778
sg12
(lp3779
(S'string'
p3780
S'min'
p3781
(g3781
S'ref'
p3782
tp3783
S' reference value (lower bound for interval operators)'
p3784
I0
I0
I01
Ntp3785
a(S'string'
p3786
S'max'
p3787
g3787
S'upper bound for interval operators'
p3788
I0
I0
I01
Ntp3789
a(S'int'
p3790
S'oper'
p3791
g3791
S' operator'
p3792
I0
I0
I01
S'ValueFilter_Operator'
p3793
tp3794
a(S'bool'
p3795
S'caseSensitive'
p3796
S'case_sensitive'
p3797
S'if true (default), the operator is case sensitive'
p3798
I0
I0
I01
Ntp3799
ag2821
ag2826
asg29
(dp3800
sbsS'TGraphAsMatrix'
p3801
(i__main__
ClassDefinition
p3802
(dp3803
g4
I1
sg5
I0
sg6
g3801
sg7
S'TGraph'
p3804
sg9
I00
sg10
(lp3805
sg12
(lp3806
g682
ag687
ag691
asg29
(dp3807
sbsS'TFilter_hasSpecial'
p3808
(i__main__
ClassDefinition
p3809
(dp3810
g4
I1
sg5
I0
sg6
g3808
sg7
S'TFilter'
p3811
sg9
I00
sg10
(lp3812
sg12
(lp3813
g259
ag263
asg29
(dp3814
sbsS'TIMByRelief'
p3815
(i__main__
ClassDefinition
p3816
(dp3817
g4
I1
sg5
I0
sg6
g3815
sg7
S'TIMConstructor'
p3818
sg9
I00
sg10
(lp3819
sg12
(lp3820
(S'TExamplesDistance_Relief'
p3821
S'distance'
p3822
g3822
S'distance measure'
p3823
I0
I0
I00
Ntp3824
a(S'float'
p3825
g987
g987
S'number of neighbours'
p3826
I0
I0
I01
Ntp3827
a(S'float'
p3828
g991
g991
S'number of reference examples'
p3829
I0
I0
I01
Ntp3830
a(S'float'
p3831
S'kFromColumns'
p3832
S'k_from_columns'
p3833
S'if positive, number of neighbours is #columns*kFromColumns'
p3834
I0
I0
I01
Ntp3835
a(S'bool'
p3836
S'ignoreSameExample'
p3837
S'ignore_same_example'
p3838
S'does not put reference example into M'
p3839
I0
I0
I01
Ntp3840
a(S'bool'
p3841
S'convertToBinary'
p3842
S'convert_to_binary'
p3843
S'convert to binary class (hit-miss)'
p3844
I0
I0
I01
Ntp3845
a(S'bool'
p3846
S'correctClassFirst'
p3847
S'correct_class_first'
p3848
S'puts the correct class proportion to the first place'
p3849
I0
I0
I01
Ntp3850
a(S'bool'
p3851
S'allExamples'
p3852
S'all_examples'
p3853
S'uses all examples for reference examples'
p3854
I0
I0
I01
Ntp3855
a(S'bool'
p3856
S'allSameNeighbours'
p3857
S'all_same_neighbours'
p3858
S'uses all the examples same to the reference as neighbours'
p3859
I0
I0
I01
Ntp3860
ag2613
asg29
(dp3861
sbsS'TPreprocessor_addGaussianNoise'
p3862
(i__main__
ClassDefinition
p3863
(dp3864
g4
I1
sg5
I0
sg6
g3862
sg7
S'TPreprocessor'
p3865
sg9
I00
sg10
(lp3866
sg12
(lp3867
(S'TVariableFloatMap'
p3868
S'deviations'
p3869
g3869
S'deviations individual attribute values'
p3870
I0
I0
I00
Ntp3871
a(S'float'
p3872
S'defaultDeviation'
p3873
S'default_deviation'
p3874
S'default deviation'
p3875
I0
I0
I01
Ntp3876
a(S'TRandomGenerator'
p3877
S'randomGenerator'
p3878
S'random_generator'
p3879
S'random number generator'
p3880
I0
I0
I00
Ntp3881
asg29
(dp3882
sbsS'TRuleStoppingCriteria_NegativeDistribution'
p3883
(i__main__
ClassDefinition
p3884
(dp3885
g4
I1
sg5
I0
sg6
g3883
sg7
S'TRuleStoppingCriteria'
p3886
sg9
I00
sg10
(lp3887
sg12
(lp3888
sg29
(dp3889
sbsS'TTreeSplitConstructor_ExhaustiveBinary'
p3890
(i__main__
ClassDefinition
p3891
(dp3892
g4
I1
sg5
I0
sg6
g3890
sg7
S'TTreeSplitConstructor_Measure'
p3893
sg9
I00
sg10
(lp3894
sg12
(lp3895
g2374
ag2379
ag1693
asg29
(dp3896
sbsS'TTreeClassifier'
p3897
(i__main__
ClassDefinition
p3898
(dp3899
g4
I1
sg5
I0
sg6
g3897
sg7
S'TClassifierFD'
p3900
sg9
I00
sg10
(lp3901
sg12
(lp3902
(S'TTreeNode'
p3903
S'tree'
p3904
g3904
S'decision tree'
p3905
I0
I0
I00
Ntp3906
a(S'TTreeDescender'
p3907
S'descender'
p3908
g3908
S'object that descends down the tree'
p3909
I0
I0
I00
Ntp3910
ag901
ag791
ag796
asg29
(dp3911
sbsS'TSomeValue'
p3912
(i__main__
ClassDefinition
p3913
(dp3914
g4
I1
sg5
I0
sg6
g3912
sg7
S'TOrange'
p3915
sg9
I01
sg10
(lp3916
sg12
(lp3917
sg29
(dp3918
sbsS'TDiscDistribution'
p3919
(i__main__
ClassDefinition
p3920
(dp3921
g4
I1
sg5
I0
sg6
g3919
sg7
S'TDistribution'
p3922
sg9
I00
sg10
(lp3923
sg12
(lp3924
(S'TFloatList'
p3925
S'variances'
p3926
g3926
S'variances'
p3927
I0
I0
I00
Ntp3928
ag2177
ag2181
ag2185
ag2189
ag2193
ag2198
ag2203
ag2208
asg29
(dp3929
sbsS'TTreeDescender_UnknownMergeAsBranchSizes'
p3930
(i__main__
ClassDefinition
p3931
(dp3932
g4
I1
sg5
I0
sg6
g3930
sg7
g2213
sg9
I0
sg10
(lp3933
sg12
(lp3934
sg29
(dp3935
sbsS'THierarchicalClusterOrdering'
p3936
(i__main__
ClassDefinition
p3937
(dp3938
g4
I1
sg5
I0
sg6
g3936
sg7
S'TOrange'
p3939
sg9
I00
sg10
(lp3940
sg12
(lp3941
(S'TProgressCallback'
p3942
S'progress_callback'
p3943
g3943
S'progress callback function'
p3944
I0
I0
I00
Ntp3945
asg29
(dp3946
sbsS'TLogitClassifierState'
p3947
(i__main__
ClassDefinition
p3948
(dp3949
g4
I1
sg5
I0
sg6
g3947
sg7
S'TOrange'
p3950
sg9
I00
sg10
(lp3951
sg12
(lp3952
sg29
(dp3953
sbsS'TColorIG'
p3954
(i__main__
ClassDefinition
p3955
(dp3956
g4
I1
sg5
I0
sg6
g3954
sg7
S'TOrange'
p3957
sg9
I01
sg10
(lp3958
sg12
(lp3959
sg29
(dp3960
sbsS'TSimpleTreeLearner'
p3961
(i__main__
ClassDefinition
p3962
(dp3963
g4
I1
sg5
I0
sg6
g3961
sg7
S'TLearner'
p3964
sg9
I00
sg10
(lp3965
sg12
(lp3966
(S'float'
p3967
S'maxMajority'
p3968
S'max_majority'
p3969
g1294
I0
I0
I01
Ntp3970
a(S'int'
p3971
S'minInstances'
p3972
S'min_instances'
p3973
g1294
I0
I0
I01
Ntp3974
a(S'int'
p3975
S'maxDepth'
p3976
S'max_depth'
p3977
g1294
I0
I0
I01
Ntp3978
a(S'float'
p3979
S'skipProb'
p3980
S'skip_prob'
p3981
g1294
I0
I0
I01
Ntp3982
a(S'TRandomGenerator'
p3983
S'randomGenerator'
p3984
S'random_generator'
p3985
g1294
I0
I0
I00
Ntp3986
ag47
asg29
(dp3987
sbsS'TFilter_disjunction'
p3988
(i__main__
ClassDefinition
p3989
(dp3990
g4
I1
sg5
I0
sg6
g3988
sg7
S'TFilter'
p3991
sg9
I00
sg10
(lp3992
sg12
(lp3993
(S'TFilterList'
p3994
S'filters'
p3995
g3995
S'a list of filters;'
p3996
I0
I0
I00
Ntp3997
ag259
ag263
asg29
(dp3998
sbsS'TColumnAssessor'
p3999
(i__main__
ClassDefinition
p4000
(dp4001
g4
I1
sg5
I0
sg6
g3999
sg7
S'TOrange'
p4002
sg9
I01
sg10
(lp4003
sg12
(lp4004
sg29
(dp4005
sbsS'TComputeDomainContingency_Preprocessor'
p4006
(i__main__
ClassDefinition
p4007
(dp4008
g4
I1
sg5
I0
sg6
g4006
sg7
S'TComputeDomainContingency'
p4009
sg9
I00
sg10
(lp4010
sg12
(lp4011
(S'TPreprocessor'
p4012
S'preprocessor'
p4013
g4013
S'preprocesses the exmaples (see the manual for restrictions!)'
p4014
I0
I0
I00
Ntp4015
a(S'bool'
p4016
S'resultInOriginalDomain'
p4017
S'result_in_original_domain'
p4018
S'tells whether the resulting DomainContingency should consist of original attributes'
p4019
I0
I0
I01
Ntp4020
ag28
asg29
(dp4021
sbsS'TMeasureAttribute_MSE'
p4022
(i__main__
ClassDefinition
p4023
(dp4024
g4
I1
sg5
I0
sg6
g4022
sg7
S'TMeasureAttribute'
p4025
sg9
I00
sg10
(lp4026
sg12
(lp4027
(S'float'
p4028
g991
g991
S'm for m-estimate'
p4029
I0
I0
I01
Ntp4030
a(S'int'
p4031
S'unknownsTreatment'
p4032
S'unknowns_treatment'
p4033
S' treatment of unknown values'
p4034
I0
I0
I01
S'MeasureAttribute_UnknownsTreatment'
p4035
tp4036
ag462
ag467
ag472
ag477
asg29
(dp4037
sbsS'TNormalizeContinuous'
p4038
(i__main__
ClassDefinition
p4039
(dp4040
g4
I1
sg5
I0
sg6
g4038
sg7
S'TTransformValue'
p4041
sg9
I00
sg10
(lp4042
sg12
(lp4043
(S'float'
p4044
S'average'
p4045
g4045
S'the average value'
p4046
I0
I0
I01
Ntp4047
a(S'float'
p4048
S'span'
p4049
g4049
S'the value span'
p4050
I0
I0
I01
Ntp4051
ag318
asg29
(dp4052
sbsS'TPNN'
p4053
(i__main__
ClassDefinition
p4054
(dp4055
g4
I1
sg5
I0
sg6
g4053
sg7
S'TClassifierFD'
p4056
sg9
I00
sg10
(lp4057
sg12
(lp4058
g3401
ag3405
ag3409
ag3413
ag3418
ag3423
ag3427
ag901
ag791
ag796
asg29
(dp4059
sbsS'TBiModalDiscretizer'
p4060
(i__main__
ClassDefinition
p4061
(dp4062
g4
I1
sg5
I0
sg6
g4060
sg7
S'TDiscretizer'
p4063
sg9
I00
sg10
(lp4064
sg12
(lp4065
(S'float'
p4066
S'low'
p4067
g4067
S'low threshold'
p4068
I0
I0
I01
Ntp4069
a(S'float'
p4070
S'high'
p4071
g4071
S'high threshold'
p4072
I0
I0
I01
Ntp4073
ag318
asg29
(dp4074
sbsS'TProbabilityEstimatorConstructor_Laplace'
p4075
(i__main__
ClassDefinition
p4076
(dp4077
g4
I1
sg5
I0
sg6
g4075
sg7
S'TProbabilityEstimatorConstructor'
p4078
sg9
I00
sg10
(lp4079
sg12
(lp4080
(S'float'
p4081
S'l'
p4082
g4082
S'number of examples added to each class (default: 1)'
p4083
I0
I0
I01
Ntp4084
a(S'bool'
p4085
S'renormalize'
p4086
g4086
S'computes the estimate on the original (not the normalized) distribution'
p4087
I0
I0
I01
Ntp4088
asg29
(dp4089
sbsS'TEnumVariable'
p4090
(i__main__
ClassDefinition
p4091
(dp4092
g4
I1
sg5
I0
sg6
g4090
sg7
S'TVariable'
p4093
sg9
I00
sg10
(lp4094
sg12
(lp4095
(S'TStringList'
p4096
S'values'
p4097
g4097
S"attribute's values"
p4098
I0
I0
I00
Ntp4099
a(S'int'
p4100
S'baseValue'
p4101
S'base_value'
p4102
S'the index of the base value'
p4103
I0
I0
I01
Ntp4104
ag642
ag646
ag650
ag655
ag660
ag665
ag670
asg29
(dp4105
sbsS'TExamplesDistanceConstructor_Manhattan'
p4106
(i__main__
ClassDefinition
p4107
(dp4108
g4
I1
sg5
I0
sg6
g4106
sg7
S'TExamplesDistanceConstructor_Normalized'
p4109
sg9
I00
sg10
(lp4110
sg12
(lp4111
g96
ag101
ag106
asg29
(dp4112
sbsS'TC45Learner'
p4113
(i__main__
ClassDefinition
p4114
(dp4115
g4
I1
sg5
I0
sg6
g4113
sg7
S'TLearner'
p4116
sg9
I00
sg10
(lp4117
sg12
(lp4118
(S'bool'
p4119
S'gainRatio'
p4120
(g4120
S'g'
p4121
tp4122
S' use gain ratio (instead of information gain)'
p4123
I0
I0
I01
Ntp4124
a(S'bool'
p4125
S'subset'
p4126
(g4126
S's'
p4127
tp4128
S' use subsetting'
p4129
I0
I0
I01
Ntp4130
a(S'bool'
p4131
S'batch'
p4132
(g4132
S'b'
p4133
tp4134
S' batch'
p4135
I0
I0
I01
Ntp4136
a(S'bool'
p4137
S'probThresh'
p4138
(g4138
g91
tp4139
S' probability threshold'
p4140
I0
I0
I01
Ntp4141
a(S'int'
p4142
S'minObjs'
p4143
(g4143
g991
tp4144
S' minimal number of objects (examples) in leaves'
p4145
I0
I0
I01
Ntp4146
a(S'int'
p4147
S'window'
p4148
(g4148
S'w'
p4149
tp4150
S' window'
p4151
I0
I0
I01
Ntp4152
a(S'int'
p4153
S'increment'
p4154
(g4154
S'i'
p4155
tp4156
S' increment'
p4157
I0
I0
I01
Ntp4158
a(S'float'
p4159
S'cf'
p4160
(g4160
S'c'
p4161
tp4162
S' cf'
p4163
I0
I0
I01
Ntp4164
a(S'int'
p4165
S'trials'
p4166
(g4166
g1836
tp4167
S' trials'
p4168
I0
I0
I01
Ntp4169
a(S'bool'
p4170
S'prune'
p4171
g4171
S'return pruned tree'
p4172
I0
I0
I01
Ntp4173
a(S'bool'
p4174
S'convertToOrange'
p4175
S'convert_to_orange'
p4176
S'return TreeClassifier instead of C45TreeClassifier'
p4177
I0
I0
I01
Ntp4178
a(S'bool'
p4179
S'storeExamples'
p4180
S'store_examples'
p4181
S'stores examples when (if) converting to TreeClassifier'
p4182
I0
I0
I01
Ntp4183
a(S'bool'
p4184
S'storeContingencies'
p4185
S'store_contingencies'
p4186
S'stores contingencies when (if) converting to TreeClassifier'
p4187
I0
I0
I01
Ntp4188
ag47
asg29
(dp4189
sbsS'TExamplesDistance_Python'
p4190
(i__main__
ClassDefinition
p4191
(dp4192
g4
I1
sg5
I0
sg6
g4190
sg7
S'TExamplesDistance'
p4193
sg9
I00
sg10
(lp4194
sg12
(lp4195
sg29
(dp4196
sbsS'TTreeStopCriteria'
p4197
(i__main__
ClassDefinition
p4198
(dp4199
g4
I1
sg5
I0
sg6
g4197
sg7
S'TOrange'
p4200
sg9
I00
sg10
(lp4201
sg12
(lp4202
sg29
(dp4203
sbsS'TExamplesDistanceConstructor_Relief'
p4204
(i__main__
ClassDefinition
p4205
(dp4206
g4
I1
sg5
I0
sg6
g4204
sg7
S'TExamplesDistanceConstructor'
p4207
sg9
I00
sg10
(lp4208
sg12
(lp4209
g106
asg29
(dp4210
sbsS'TMissValuesGenerator'
p4211
(i__main__
ClassDefinition
p4212
(dp4213
g4
I1
sg5
I0
sg6
g4211
sg7
S'TChangeExampleGenerator'
p4214
sg9
I00
sg10
(lp4215
sg12
(lp4216
(S'TIntFloatList'
p4217
S'replaceProbabilities'
p4218
S'replace_probabilities'
p4219
S"probabilities for replacing attributes' values"
p4220
I0
I0
I00
Ntp4221
a(S'TRandomGenerator'
p4222
S'randomGenerator'
p4223
S'random_generator'
p4224
S'random generator'
p4225
I0
I0
I00
Ntp4226
ag121
ag125
asg29
(dp4227
sbsS'TRuleValidator_Python'
p4228
(i__main__
ClassDefinition
p4229
(dp4230
g4
I1
sg5
I0
sg6
g4228
sg7
S'TRuleValidator'
p4231
sg9
I00
sg10
(lp4232
sg12
(lp4233
sg29
(dp4234
sbsS'TSubsetsGenerator_constSize_iterator'
p4235
(i__main__
ClassDefinition
p4236
(dp4237
g4
I1
sg5
I0
sg6
g4235
sg7
S'TSubsetsGenerator_iterator'
p4238
sg9
I00
sg10
(lp4239
sg12
(lp4240
(S'bool'
p4241
S'moreToCome'
p4242
S'more_to_come'
p4243
g1294
I01
I0
I01
Ntp4244
ag192
asg29
(dp4245
sbsS'TRuleClassifier_firstRule'
p4246
(i__main__
ClassDefinition
p4247
(dp4248
g4
I1
sg5
I0
sg6
g4246
sg7
S'TRuleClassifier'
p4249
sg9
I00
sg10
(lp4250
sg12
(lp4251
(S'TDistribution'
p4252
S'prior'
p4253
g4253
S'prior distribution'
p4254
I0
I0
I00
Ntp4255
ag1963
ag1966
ag1970
ag791
ag796
asg29
(dp4256
sbsS'TEVDist'
p4257
(i__main__
ClassDefinition
p4258
(dp4259
g4
I1
sg5
I0
sg6
g4257
sg7
S'TOrange'
p4260
sg9
I00
sg10
(lp4261
sg12
(lp4262
(S'float'
p4263
S'mu'
p4264
g4264
S'mu of Fisher-Tippett distribution'
p4265
I0
I0
I01
Ntp4266
a(S'float'
p4267
S'beta'
p4268
g4268
S'beta of Fisher-Tippett distribution'
p4269
I0
I0
I01
Ntp4270
a(S'TFloatList'
p4271
S'percentiles'
p4272
g4272
S'usually 10 values - 0 = 5th percentile, 1 = 15th percentile, 9 = 95th percentile, change maxPercentile and step for other settings'
p4273
I0
I0
I00
Ntp4274
a(S'float'
p4275
S'maxPercentile'
p4276
S'max_percentile'
p4277
S'maxPercentile Value, default 0.95'
p4278
I0
I0
I01
Ntp4279
a(S'float'
p4280
S'step'
p4281
g4281
S'step of percentiles, default 0.1'
p4282
I0
I0
I01
Ntp4283
asg29
(dp4284
sbsS'TAssociationLearner'
p4285
(i__main__
ClassDefinition
p4286
(dp4287
g4
I1
sg5
I0
sg6
g4285
sg7
S'TLearner'
p4288
sg9
I00
sg10
(lp4289
sg12
(lp4290
(S'float'
p4291
S'confidence'
p4292
g4292
S'required confidence'
p4293
I0
I0
I01
Ntp4294
a(S'float'
p4295
S'support'
p4296
g4296
S'required support'
p4297
I0
I0
I01
Ntp4298
a(S'int'
p4299
S'voteWeight'
p4300
S'vote_weight'
p4301
S'vote weight (s=support, c=confidence, p=product)'
p4302
I0
I0
I01
Ntp4303
a(S'int'
p4304
S'maxItemSets'
p4305
S'max_item_sets'
p4306
S'maximal number of itemsets (increase if you want)'
p4307
I0
I0
I01
Ntp4308
ag47
asg29
(dp4309
sbsS'TDistributionAssessor'
p4310
(i__main__
ClassDefinition
p4311
(dp4312
g4
I1
sg5
I0
sg6
g4310
sg7
S'TOrange'
p4313
sg9
I01
sg10
(lp4314
sg12
(lp4315
sg29
(dp4316
sbsS'TEquiDistDiscretization'
p4317
(i__main__
ClassDefinition
p4318
(dp4319
g4
I1
sg5
I0
sg6
g4317
sg7
S'TDiscretization'
p4320
sg9
I00
sg10
(lp4321
sg12
(lp4322
(S'int'
p4323
S'numberOfIntervals'
p4324
(g4324
g385
tp4325
S' number of intervals'
p4326
I0
I0
I01
Ntp4327
asg29
(dp4328
sbsS'TConditionalProbabilityEstimatorConstructor_ByRows'
p4329
(i__main__
ClassDefinition
p4330
(dp4331
g4
I1
sg5
I0
sg6
g4329
sg7
S'TConditionalProbabilityEstimatorConstructor'
p4332
sg9
I00
sg10
(lp4333
sg12
(lp4334
(S'TProbabilityEstimatorConstructor'
p4335
S'estimatorConstructor'
p4336
S'estimator_constructor'
p4337
S'ProbabilityEstimator to be used '
p4338
I0
I0
I00
Ntp4339
asg29
(dp4340
sbsS'TTreeSplitConstructor'
p4341
(i__main__
ClassDefinition
p4342
(dp4343
g4
I1
sg5
I0
sg6
g4341
sg7
S'TOrange'
p4344
sg9
I01
sg10
(lp4345
sg12
(lp4346
g1693
asg29
(dp4347
sbsS'TSubsetsGenerator_constSize'
p4348
(i__main__
ClassDefinition
p4349
(dp4350
g4
I1
sg5
I0
sg6
g4348
sg7
S'TSubsetsGenerator'
p4351
sg9
I00
sg10
(lp4352
sg12
(lp4353
(S'int'
p4354
S'B'
p4355
g4355
S'subset size'
p4356
I0
I0
I01
Ntp4357
ag2346
asg29
(dp4358
sbsS'TColorIG_MCF'
p4359
(i__main__
ClassDefinition
p4360
(dp4361
g4
I1
sg5
I0
sg6
g4359
sg7
S'TColorIG'
p4362
sg9
I00
sg10
(lp4363
sg12
(lp4364
sg29
(dp4365
sbsS'TSVMClassifierSparse'
p4366
(i__main__
ClassDefinition
p4367
(dp4368
g4
I1
sg5
I0
sg6
g4366
sg7
S'TSVMClassifier'
p4369
sg9
I00
sg10
(lp4370
sg12
(lp4371
(S'bool'
p4372
S'useNonMeta'
p4373
S'use_non_meta'
p4374
S'include non meta attributes'
p4375
I0
I0
I01
Ntp4376
ag3485
ag3489
ag3493
ag3498
ag3503
ag3508
ag3512
ag3517
ag3522
ag3527
ag901
ag791
ag796
asg29
(dp4377
sbsS'TRuleBeamFilter'
p4378
(i__main__
ClassDefinition
p4379
(dp4380
g4
I1
sg5
I0
sg6
g4378
sg7
S'TOrange'
p4381
sg9
I01
sg10
(lp4382
sg12
(lp4383
sg29
(dp4384
sbsS'TPreprocessor_addClassWeight'
p4385
(i__main__
ClassDefinition
p4386
(dp4387
g4
I1
sg5
I0
sg6
g4385
sg7
S'TPreprocessor'
p4388
sg9
I00
sg10
(lp4389
sg12
(lp4390
(S'TFloatList'
p4391
S'classWeights'
p4392
S'class_weights'
p4393
S'weights of examples of particular classes'
p4394
I0
I0
I00
Ntp4395
a(S'bool'
p4396
S'equalize'
p4397
g4397
S'reweight examples to equalize class proportions'
p4398
I0
I0
I01
Ntp4399
a(S'TRandomGenerator'
p4400
S'randomGenerator'
p4401
S'random_generator'
p4402
S'random number generator'
p4403
I0
I0
I00
Ntp4404
asg29
(dp4405
sbsS'TValueFilter_continuous'
p4406
(i__main__
ClassDefinition
p4407
(dp4408
g4
I1
sg5
I0
sg6
g4406
sg7
S'TValueFilter'
p4409
sg9
I00
sg10
(lp4410
sg12
(lp4411
(S'float'
p4412
S'min'
p4413
(g4413
S'ref'
p4414
tp4415
S' reference value (lower bound for interval operators)'
p4416
I0
I0
I01
Ntp4417
a(S'float'
p4418
S'max'
p4419
g4419
S'upper bound for interval operators'
p4420
I0
I0
I01
Ntp4421
a(S'bool'
p4422
S'outside'
p4423
g4423
S'obsolete: if true, the filter accepts the values outside the interval, not inside'
p4424
I0
I0
I01
Ntp4425
a(S'int'
p4426
S'oper'
p4427
g4427
S' operator'
p4428
I0
I0
I01
S'ValueFilter_Operator'
p4429
tp4430
ag2821
ag2826
asg29
(dp4431
sbsS'TAssociationRule'
p4432
(i__main__
ClassDefinition
p4433
(dp4434
g4
I1
sg5
I0
sg6
g4432
sg7
S'TOrange'
p4435
sg9
I00
sg10
(lp4436
sg12
(lp4437
(S'TExample'
p4438
S'left'
p4439
g4439
S'left side of the rule'
p4440
I01
I0
I00
Ntp4441
a(S'TExample'
p4442
S'right'
p4443
g4443
S'right side of the rule'
p4444
I01
I0
I00
Ntp4445
a(S'float'
p4446
S'support'
p4447
g4447
S'support for the rule'
p4448
I0
I0
I01
Ntp4449
a(S'float'
p4450
S'confidence'
p4451
g4451
S'confidence of the rule'
p4452
I0
I0
I01
Ntp4453
a(S'float'
p4454
S'coverage'
p4455
g4455
S"rule's coverage"
p4456
I0
I0
I01
Ntp4457
a(S'float'
p4458
S'strength'
p4459
g4459
S"rule's strength"
p4460
I0
I0
I01
Ntp4461
a(S'float'
p4462
S'lift'
p4463
g4463
S"rule's lift"
p4464
I0
I0
I01
Ntp4465
a(S'float'
p4466
S'leverage'
p4467
g4467
S"rule's leverage"
p4468
I0
I0
I01
Ntp4469
a(S'float'
p4470
S'nAppliesLeft'
p4471
S'n_applies_left'
p4472
S"number of examples covered by the rule's left side"
p4473
I0
I0
I01
Ntp4474
a(S'float'
p4475
S'nAppliesRight'
p4476
S'n_applies_right'
p4477
S"number of examples covered by the rule's right side"
p4478
I0
I0
I01
Ntp4479
a(S'float'
p4480
S'nAppliesBoth'
p4481
S'n_applies_both'
p4482
S'number of examples covered by the rule'
p4483
I0
I0
I01
Ntp4484
a(S'float'
p4485
S'nExamples'
p4486
S'n_examples'
p4487
S'number of learning examples'
p4488
I0
I0
I01
Ntp4489
a(S'int'
p4490
S'nLeft'
p4491
S'n_left'
p4492
S"number of items on the rule's left side"
p4493
I01
I0
I01
Ntp4494
a(S'int'
p4495
S'nRight'
p4496
S'n_right'
p4497
S"number of items on the rule's right side"
p4498
I01
I0
I01
Ntp4499
a(S'TExampleTable'
p4500
S'examples'
p4501
g4501
S'examples which the rule was built from'
p4502
I01
I0
I00
Ntp4503
a(S'TIntList'
p4504
S'matchLeft'
p4505
S'match_left'
p4506
S'indices of examples that match the left side of the rule'
p4507
I01
I0
I00
Ntp4508
a(S'TIntList'
p4509
S'matchBoth'
p4510
S'match_both'
p4511
S'indices to examples that match both sides of the rule'
p4512
I01
I0
I00
Ntp4513
asg29
(dp4514
sbsS'TValueFilter'
p4515
(i__main__
ClassDefinition
p4516
(dp4517
g4
I1
sg5
I0
sg6
g4515
sg7
S'TOrange'
p4518
sg9
I01
sg10
(lp4519
sg12
(lp4520
g2821
ag2826
asg29
(dp4521
S'Operator'
p4522
(lp4523
(S'None'
p4524
I0
tp4525
a(S'Equal'
p4526
I1
tp4527
a(S'NotEqual'
p4528
I2
tp4529
a(S'Less'
p4530
I3
tp4531
a(S'LessEqual'
p4532
I4
tp4533
a(S'Greater'
p4534
I5
tp4535
a(S'GreaterEqual'
p4536
I6
tp4537
a(S'Between'
p4538
I7
tp4539
a(S'Outside'
p4540
I8
tp4541
a(S'Contains'
p4542
I9
tp4543
a(S'NotContains'
p4544
I10
tp4545
a(S'BeginsWith'
p4546
I11
tp4547
a(S'EndsWith'
p4548
I12
tp4549
a(S'Listed'
p4550
I13
tp4551
assbsS'TNoiseValuesGenerator'
p4552
(i__main__
ClassDefinition
p4553
(dp4554
g4
I1
sg5
I0
sg6
g4552
sg7
S'TChangeExampleGenerator'
p4555
sg9
I00
sg10
(lp4556
sg12
(lp4557
(S'TIntFloatList'
p4558
S'replaceProbabilities'
p4559
S'replace_probabilities'
p4560
S"probabilities for replacing attributes' values"
p4561
I0
I0
I00
Ntp4562
a(S'TRandomGenerator'
p4563
S'randomGenerator'
p4564
S'random_generator'
p4565
S'random generator'
p4566
I0
I0
I00
Ntp4567
ag121
ag125
asg29
(dp4568
sbsS'TTreeExampleSplitter_UnknownsToAll'
p4569
(i__main__
ClassDefinition
p4570
(dp4571
g4
I1
sg5
I0
sg6
g4569
sg7
S'TTreeExampleSplitter'
p4572
sg9
I00
sg10
(lp4573
sg12
(lp4574
sg29
(dp4575
sbsS'TEquiNDiscretization'
p4576
(i__main__
ClassDefinition
p4577
(dp4578
g4
I1
sg5
I0
sg6
g4576
sg7
S'TDiscretization'
p4579
sg9
I00
sg10
(lp4580
sg12
(lp4581
(S'int'
p4582
S'numberOfIntervals'
p4583
(g4583
g385
tp4584
S' number of intervals'
p4585
I0
I0
I01
Ntp4586
a(S'bool'
p4587
S'recursiveDivision'
p4588
S'recursive_division'
p4589
S'find cut-off points by recursive division (default = true)'
p4590
I0
I0
I01
Ntp4591
asg29
(dp4592
sbsS'TDomainBasicAttrStat'
p4593
(i__main__
ClassDefinition
p4594
(dp4595
g4
I1
sg5
I0
sg6
g4593
sg7
g2565
sg9
I00
sg10
(lp4596
sg12
(lp4597
(S'bool'
p4598
S'hasClassVar'
p4599
S'has_class_var'
p4600
S'has class var'
p4601
I0
I0
I01
Ntp4602
asg29
(dp4603
sbsS'TBayesClassifier'
p4604
(i__main__
ClassDefinition
p4605
(dp4606
g4
I1
sg5
I0
sg6
g4604
sg7
S'TClassifierFD'
p4607
sg9
I00
sg10
(lp4608
sg12
(lp4609
(S'TDistribution'
p4610
S'distribution'
p4611
g4611
S'class distributions (P(C))'
p4612
I0
I0
I00
Ntp4613
a(S'TDomainContingency'
p4614
S'conditionalDistributions'
p4615
S'conditional_distributions'
p4616
S'conditional distributions, P(C|A)'
p4617
I0
I0
I00
Ntp4618
a(S'TProbabilityEstimator'
p4619
S'estimator'
p4620
g4620
S'a probability estimator for P(C)'
p4621
I0
I0
I00
Ntp4622
a(S'TConditionalProbabilityEstimatorList'
p4623
S'conditionalEstimators'
p4624
S'conditional_estimators'
p4625
S'a probability estimator for P(C|A)'
p4626
I0
I0
I00
Ntp4627
a(S'bool'
p4628
S'normalizePredictions'
p4629
S'normalize_predictions'
p4630
S'if true, classifier will normalize predictions'
p4631
I0
I0
I01
Ntp4632
a(S'float'
p4633
S'threshold'
p4634
g4634
S'threshold probability for class 1 (for binary classes only)'
p4635
I0
I0
I01
Ntp4636
ag901
ag791
ag796
asg29
(dp4637
sbsS'TCostWrapperClassifier'
p4638
(i__main__
ClassDefinition
p4639
(dp4640
g4
I1
sg5
I0
sg6
g4638
sg7
S'TClassifier'
p4641
sg9
I00
sg10
(lp4642
sg12
(lp4643
(S'TClassifier'
p4644
S'classifier'
p4645
g4645
S'basic classifier'
p4646
I0
I0
I00
Ntp4647
a(S'TCostMatrix'
p4648
S'costMatrix'
p4649
S'cost_matrix'
p4650
S'cost matrix'
p4651
I0
I0
I00
Ntp4652
ag791
ag796
asg29
(dp4653
sbsS'TPreprocessor_ignore'
p4654
(i__main__
ClassDefinition
p4655
(dp4656
g4
I1
sg5
I0
sg6
g4654
sg7
S'TPreprocessor'
p4657
sg9
I00
sg10
(lp4658
sg12
(lp4659
(S'TVarList'
p4660
S'attributes'
p4661
g4661
S'tells which attributes to remove'
p4662
I0
I0
I00
Ntp4663
asg29
(dp4664
sbsS'TC45TreeNode'
p4665
(i__main__
ClassDefinition
p4666
(dp4667
g4
I1
sg5
I0
sg6
g4665
sg7
S'TOrange'
p4668
sg9
I00
sg10
(lp4669
sg12
(lp4670
(S'int'
p4671
S'nodeType'
p4672
S'node_type'
p4673
S' 0 = leaf,  1 = branch,  2 = cut,  3 = subset'
p4674
I0
I0
I01
S'C45TreeNode_NodeType'
p4675
tp4676
a(S'TValue'
p4677
S'leaf'
p4678
g4678
S'most frequent class at this node'
p4679
I0
I0
I01
Ntp4680
a(S'float'
p4681
S'items'
p4682
g4682
S'no of items at this node'
p4683
I0
I0
I01
Ntp4684
a(S'TDiscDistribution'
p4685
S'classDist'
p4686
S'class_dist'
p4687
S'class distribution of items'
p4688
I0
I0
I00
Ntp4689
a(S'TVariable'
p4690
S'tested'
p4691
g4691
S'attribute referenced in test'
p4692
I0
I0
I00
Ntp4693
a(S'float'
p4694
S'cut'
p4695
g4695
S'threshold for continuous attribute'
p4696
I0
I0
I01
Ntp4697
a(S'float'
p4698
S'lower'
p4699
g4699
S'lower limit of soft threshold'
p4700
I0
I0
I01
Ntp4701
a(S'float'
p4702
S'upper'
p4703
g4703
S'upper limit of soft threshold'
p4704
I0
I0
I01
Ntp4705
a(S'TIntList'
p4706
S'mapping'
p4707
g4707
S'mapping for discrete value'
p4708
I0
I0
I00
Ntp4709
a(S'TC45TreeNodeList'
p4710
S'branch'
p4711
g4711
S'branch[x] = (sub)tree for outcome x */'
p4712
I0
I0
I00
Ntp4713
asg29
(dp4714
S'NodeType'
p4715
(lp4716
(S'Leaf'
p4717
S'0'
p4718
tp4719
a(S'Branch'
p4720
I1
tp4721
a(S'Cut'
p4722
I2
tp4723
a(S'Subset'
p4724
I3
tp4725
assbsS'TMeasureAttribute_Python'
p4726
(i__main__
ClassDefinition
p4727
(dp4728
g4
I1
sg5
I0
sg6
g4726
sg7
S'TMeasureAttribute'
p4729
sg9
I00
sg10
(lp4730
sg12
(lp4731
g462
ag467
ag472
ag477
asg29
(dp4732
sbsS'TDistributionAssessor_Measure'
p4733
(i__main__
ClassDefinition
p4734
(dp4735
g4
I1
sg5
I0
sg6
g4733
sg7
S'TDistributionAssessor'
p4736
sg9
I00
sg10
(lp4737
sg12
(lp4738
(S'TMeasureAttribute'
p4739
S'measure'
p4740
g4740
S'attribute quality measure'
p4741
I0
I0
I00
Ntp4742
asg29
(dp4743
sbsS'TDistributionAssessor_m'
p4744
(i__main__
ClassDefinition
p4745
(dp4746
g4
I1
sg5
I0
sg6
g4744
sg7
S'TDistributionAssessor'
p4747
sg9
I00
sg10
(lp4748
sg12
(lp4749
(S'float'
p4750
g991
g991
S'm for m-estimate'
p4751
I0
I0
I01
Ntp4752
asg29
(dp4753
sbsS'TEVDistGetter'
p4754
(i__main__
ClassDefinition
p4755
(dp4756
g4
I1
sg5
I0
sg6
g4754
sg7
S'TOrange'
p4757
sg9
I01
sg10
(lp4758
sg12
(lp4759
sg29
(dp4760
sbsS'TStopDistributionClustering_n'
p4761
(i__main__
ClassDefinition
p4762
(dp4763
g4
I1
sg5
I0
sg6
g4761
sg7
S'TStopDistributionClustering'
p4764
sg9
I00
sg10
(lp4765
sg12
(lp4766
(S'int'
p4767
g385
g385
S'number of clusters'
p4768
I0
I0
I01
Ntp4769
asg29
(dp4770
sbsS'TTreeExampleSplitter_UnknownsAsSelector'
p4771
(i__main__
ClassDefinition
p4772
(dp4773
g4
I1
sg5
I0
sg6
g4771
sg7
S'TTreeExampleSplitter'
p4774
sg9
I00
sg10
(lp4775
sg12
(lp4776
sg29
(dp4777
sbsS'TClassifier_Python'
p4778
(i__main__
ClassDefinition
p4779
(dp4780
g4
I1
sg5
I0
sg6
g4778
sg7
S'TClassifier'
p4781
sg9
I00
sg10
(lp4782
sg12
(lp4783
g791
ag796
asg29
(dp4784
sbsS'TFilter_isDefined'
p4785
(i__main__
ClassDefinition
p4786
(dp4787
g4
I1
sg5
I0
sg6
g4785
sg7
S'TFilter'
p4788
sg9
I00
sg10
(lp4789
sg12
(lp4790
(S'TAttributedBoolList'
p4791
S'check'
p4792
g4792
S'tells which attributes to check; checks all if the list is empty'
p4793
I0
I0
I00
Ntp4794
ag259
ag263
asg29
(dp4795
sbsS'TProbabilityEstimatorConstructor_m'
p4796
(i__main__
ClassDefinition
p4797
(dp4798
g4
I1
sg5
I0
sg6
g4796
sg7
S'TProbabilityEstimatorConstructor'
p4799
sg9
I00
sg10
(lp4800
sg12
(lp4801
(S'float'
p4802
g991
g991
S'parameter m for m-estimation'
p4803
I0
I0
I01
Ntp4804
a(S'bool'
p4805
S'renormalize'
p4806
g4806
S'computes the estimate on the original (not the normalized) distribution'
p4807
I0
I0
I01
Ntp4808
asg29
(dp4809
sbsS'TStopDistributionClustering_noBigChange'
p4810
(i__main__
ClassDefinition
p4811
(dp4812
g4
I1
sg5
I0
sg6
g4810
sg7
S'TStopDistributionClustering'
p4813
sg9
I00
sg10
(lp4814
sg12
(lp4815
sg29
(dp4816
sbsS'TRuleLearner'
p4817
(i__main__
ClassDefinition
p4818
(dp4819
g4
I1
sg5
I0
sg6
g4817
sg7
S'TLearner'
p4820
sg9
I00
sg10
(lp4821
sg12
(lp4822
(S'TRuleDataStoppingCriteria'
p4823
S'dataStopping'
p4824
S'data_stopping'
p4825
g1294
I0
I0
I00
Ntp4826
a(S'TRuleStoppingCriteria'
p4827
S'ruleStopping'
p4828
S'rule_stopping'
p4829
g1294
I0
I0
I00
Ntp4830
a(S'TRuleCovererAndRemover'
p4831
S'coverAndRemove'
p4832
S'cover_and_remove'
p4833
g1294
I0
I0
I00
Ntp4834
a(S'TRuleFinder'
p4835
S'ruleFinder'
p4836
S'rule_finder'
p4837
g1294
I0
I0
I00
Ntp4838
a(S'TRuleClassifierConstructor'
p4839
S'classifierConstructor'
p4840
S'classifier_constructor'
p4841
S'classifier'
p4842
I0
I0
I00
Ntp4843
a(S'TProgressCallback'
p4844
S'progressCallback'
p4845
S'progress_callback'
p4846
S'progress callback function'
p4847
I0
I0
I00
Ntp4848
a(S'bool'
p4849
S'storeExamples'
p4850
S'store_examples'
p4851
g1294
I0
I0
I01
Ntp4852
a(S'int'
p4853
S'targetClass'
p4854
S'target_class'
p4855
g1294
I0
I0
I01
Ntp4856
a(S'TRuleList'
p4857
S'baseRules'
p4858
S'base_rules'
p4859
g1294
I0
I0
I00
Ntp4860
ag47
asg29
(dp4861
sbsS'TLinearLearner'
p4862
(i__main__
ClassDefinition
p4863
(dp4864
g4
I1
sg5
I0
sg6
g4862
sg7
S'TLearner'
p4865
sg9
I00
sg10
(lp4866
sg12
(lp4867
(S'int'
p4868
S'solver_type'
p4869
g4869
S' Solver type (loss function1)'
p4870
I0
I0
I01
S'LinearLearner_Lossfunction1'
p4871
tp4872
a(S'float'
p4873
S'eps'
p4874
g4874
S'Stopping criteria'
p4875
I0
I0
I01
Ntp4876
a(S'float'
p4877
g2038
g2038
S'Regularization parameter'
p4878
I0
I0
I01
Ntp4879
ag47
asg29
(dp4880
S'LIBLINEAR_VERSION'
p4881
(lp4882
(S'VERSION'
p4883
S'180'
p4884
tp4885
asS'Lossfunction1'
p4886
(lp4887
(S'L2R_LR'
p4888
I0
tp4889
a(S'L2R_L2Loss_SVC_Dual'
p4890
I1
tp4891
a(S'L2R_L2Loss_SVC'
p4892
I2
tp4893
a(S'L2R_L1Loss_SVC_Dual'
p4894
I3
tp4895
a(S'MCSVM_CS'
p4896
I4
tp4897
a(S'L1R_L2Loss_SVC'
p4898
I5
tp4899
a(S'L1R_LR'
p4900
I6
tp4901
a(S'L2R_LR_Dual'
p4902
I7
tp4903
asS'Lossfunction1_old_'
p4904
(lp4905
(S'L2_LR'
p4906
I0
tp4907
a(S'L2Loss_SVM_Dual'
p4908
I1
tp4909
a(S'L2Loss_SVM'
p4910
I2
tp4911
a(S'L1Loss_SVM_Dual'
p4912
I3
tp4913
assbsS'TImputer'
p4914
(i__main__
ClassDefinition
p4915
(dp4916
g4
I1
sg5
I0
sg6
g4914
sg7
S'TOrange'
p4917
sg9
I01
sg10
(lp4918
sg12
(lp4919
sg29
(dp4920
sbsS'TTransformValue_Python'
p4921
(i__main__
ClassDefinition
p4922
(dp4923
g4
I1
sg5
I0
sg6
g4921
sg7
S'TTransformValue'
p4924
sg9
I00
sg10
(lp4925
sg12
(lp4926
g318
asg29
(dp4927
sbsS'TStopIMClusteringByAssessor_noProfit'
p4928
(i__main__
ClassDefinition
p4929
(dp4930
g4
I1
sg5
I0
sg6
g4928
sg7
S'TStopIMClusteringByAssessor'
p4931
sg9
I00
sg10
(lp4932
sg12
(lp4933
(S'float'
p4934
S'minProfitProportion'
p4935
S'min_profit_proportion'
p4936
S'minimal allowable profit proportion'
p4937
I0
I0
I01
Ntp4938
asg29
(dp4939
sbsS'TRuleBeamFilter_Width'
p4940
(i__main__
ClassDefinition
p4941
(dp4942
g4
I1
sg5
I0
sg6
g4940
sg7
S'TRuleBeamFilter'
p4943
sg9
I00
sg10
(lp4944
sg12
(lp4945
(S'int'
p4946
S'width'
p4947
g4947
g1294
I0
I0
I01
Ntp4948
asg29
(dp4949
sbsS'TRandomClassifier'
p4950
(i__main__
ClassDefinition
p4951
(dp4952
g4
I1
sg5
I0
sg6
g4950
sg7
S'TClassifier'
p4953
sg9
I00
sg10
(lp4954
sg12
(lp4955
(S'TDistribution'
p4956
S'probabilities'
p4957
g4957
S'probabilities of predictions'
p4958
I0
I0
I00
Ntp4959
ag791
ag796
asg29
(dp4960
sbsS'TFindNearest'
p4961
(i__main__
ClassDefinition
p4962
(dp4963
g4
I1
sg5
I0
sg6
g4961
sg7
S'TOrange'
p4964
sg9
I01
sg10
(lp4965
sg12
(lp4966
g422
ag427
asg29
(dp4967
sbsS'TLogRegFitter_Cholesky'
p4968
(i__main__
ClassDefinition
p4969
(dp4970
g4
I1
sg5
I0
sg6
g4968
sg7
S'TLogRegFitter'
p4971
sg9
I00
sg10
(lp4972
sg12
(lp4973
sg29
(dp4974
sbsS'TClassifierFromVar'
p4975
(i__main__
ClassDefinition
p4976
(dp4977
g4
I1
sg5
I0
sg6
g4975
sg7
S'TClassifier'
p4978
sg9
I00
sg10
(lp4979
sg12
(lp4980
(S'TVariable'
p4981
S'whichVar'
p4982
(g4982
S'variable'
p4983
tp4984
S' variable'
p4985
I0
I0
I00
Ntp4986
a(S'TTransformValue'
p4987
S'transformer'
p4988
g4988
S'transformer'
p4989
I0
I0
I00
Ntp4990
a(S'TDistribution'
p4991
S'distributionForUnknown'
p4992
S'distribution_for_unknown'
p4993
S'distribution for unknown value'
p4994
I0
I0
I00
Ntp4995
a(S'bool'
p4996
S'transformUnknowns'
p4997
S'transform_unknowns'
p4998
S'if false (default), unknowns stay unknown or are changed into distribution if given'
p4999
I0
I0
I01
Ntp5000
ag791
ag796
asg29
(dp5001
sbsS'TIM'
p5002
(i__main__
ClassDefinition
p5003
(dp5004
g4
I1
sg5
I0
sg6
g5002
sg7
S'TOrange'
p5005
sg9
I00
sg10
(lp5006
sg12
(lp5007
(S'int'
p5008
S'varType'
p5009
S'var_type'
p5010
S' class variable type'
p5011
I0
I0
I01
S'Variable_Type'
p5012
tp5013
a(S'TExampleTable'
p5014
S'rowExamples'
p5015
S'row_examples'
p5016
S'examples with free attributes for each row'
p5017
I0
I0
I00
Ntp5018
asg29
(dp5019
sbsS'TTreeSplitConstructor_OneAgainstOthers'
p5020
(i__main__
ClassDefinition
p5021
(dp5022
g4
I1
sg5
I0
sg6
g5020
sg7
S'TTreeSplitConstructor_Measure'
p5023
sg9
I00
sg10
(lp5024
sg12
(lp5025
g2374
ag2379
ag1693
asg29
(dp5026
sbsS'TClassifier'
p5027
(i__main__
ClassDefinition
p5028
(dp5029
g4
I1
sg5
I0
sg6
g5027
sg7
S'TOrange'
p5030
sg9
I00
sg10
(lp5031
sg12
(lp5032
g791
ag796
asg29
(dp5033
sbsS'TIG'
p5034
(i__main__
ClassDefinition
p5035
(dp5036
g4
I1
sg5
I0
sg6
g5034
sg7
S'TOrange'
p5037
sg9
I00
sg10
(lp5038
sg12
(lp5039
sg29
(dp5040
sbsS'TMeasureAttribute_relief'
p5041
(i__main__
ClassDefinition
p5042
(dp5043
g4
I1
sg5
I0
sg6
g5041
sg7
S'TMeasureAttribute'
p5044
sg9
I00
sg10
(lp5045
sg12
(lp5046
(S'float'
p5047
g987
g987
S'number of neighbours'
p5048
I0
I0
I01
Ntp5049
a(S'float'
p5050
g991
g991
S'number of reference examples'
p5051
I0
I0
I01
Ntp5052
a(S'bool'
p5053
S'checkCachedData'
p5054
S'check_cached_data'
p5055
S'tells whether to check the checksum of the data before reusing the cached neighbours'
p5056
I0
I0
I01
Ntp5057
ag462
ag467
ag472
ag477
asg29
(dp5058
sbsS'TMeasureAttribute_logOddsRatio'
p5059
(i__main__
ClassDefinition
p5060
(dp5061
g4
I1
sg5
I0
sg6
g5059
sg7
S'TMeasureAttributeFromProbabilities'
p5062
sg9
I00
sg10
(lp5063
sg12
(lp5064
g446
ag451
ag457
ag462
ag467
ag472
ag477
asg29
(dp5065
sbsS'TTreeExampleSplitter_Python'
p5066
(i__main__
ClassDefinition
p5067
(dp5068
g4
I1
sg5
I0
sg6
g5066
sg7
S'TTreeExampleSplitter'
p5069
sg9
I00
sg10
(lp5070
sg12
(lp5071
sg29
(dp5072
sbsS'TFilter_random'
p5073
(i__main__
ClassDefinition
p5074
(dp5075
g4
I1
sg5
I0
sg6
g5073
sg7
S'TFilter'
p5076
sg9
I00
sg10
(lp5077
sg12
(lp5078
(S'float'
p5079
S'prob'
p5080
g5080
S'probability of selecting an example'
p5081
I0
I0
I01
Ntp5082
a(S'TRandomGenerator'
p5083
S'randomGenerator'
p5084
S'random_generator'
p5085
S'random generator'
p5086
I0
I0
I00
Ntp5087
ag259
ag263
asg29
(dp5088
sbsS'TC45ExampleGenerator'
p5089
(i__main__
ClassDefinition
p5090
(dp5091
g4
I1
sg5
I0
sg6
g5089
sg7
S'TFileExampleGenerator'
p5092
sg9
I00
sg10
(lp5093
sg12
(lp5094
(S'TBoolList'
p5095
S'skip'
p5096
g5096
S'a boolean list, one element per attribute, denoting which attributes to skip'
p5097
I0
I0
I00
Ntp5098
ag737
ag742
ag747
ag121
ag125
asg29
(dp5099
sbsS'TProbabilityEstimatorConstructor_loess'
p5100
(i__main__
ClassDefinition
p5101
(dp5102
g4
I1
sg5
I0
sg6
g5100
sg7
S'TProbabilityEstimatorConstructor'
p5103
sg9
I00
sg10
(lp5104
sg12
(lp5105
(S'float'
p5106
S'windowProportion'
p5107
S'window_proportion'
p5108
S'The proportion of points in a window for LR'
p5109
I0
I0
I01
Ntp5110
a(S'int'
p5111
S'nPoints'
p5112
S'n_points'
p5113
S'The number of points on curve (negative means the given number of points is inserted in each interval)'
p5114
I0
I0
I01
Ntp5115
a(S'int'
p5116
S'distributionMethod'
p5117
S'distribution_method'
p5118
S" Meaning of the 'nPoints'"
p5119
I0
I0
I01
S'ProbabilityEstimatorConstructor_loess_DistributionMethod'
p5120
tp5121
asg29
(dp5122
S'DistributionMethod'
p5123
(lp5124
(S'Minimal'
p5125
S'DISTRIBUTE_MINIMAL'
p5126
tp5127
a(S'Factor'
p5128
S'DISTRIBUTE_FACTOR'
p5129
tp5130
a(S'Fixed'
p5131
S'DISTRIBUTE_FIXED'
p5132
tp5133
a(S'Uniform'
p5134
S'DISTRIBUTE_UNIFORM'
p5135
tp5136
a(S'Maximal'
p5137
S'DISTRIBUTE_MAXIMAL'
p5138
tp5139
assbsS'TLogRegFitter'
p5140
(i__main__
ClassDefinition
p5141
(dp5142
g4
I1
sg5
I0
sg6
g5140
sg7
S'TOrange'
p5143
sg9
I01
sg10
(lp5144
sg12
(lp5145
sg29
(dp5146
S'ErrorCode'
p5147
(lp5148
(S'OK'
p5149
I0
tp5150
a(S'Infinity'
p5151
I1
tp5152
a(S'Divergence'
p5153
I2
tp5154
a(S'Constant'
p5155
I3
tp5156
a(S'Singularity'
p5157
I4
tp5158
assbsS'TStopIMClusteringByAssessor_noBigChange'
p5159
(i__main__
ClassDefinition
p5160
(dp5161
g4
I1
sg5
I0
sg6
g5159
sg7
S'TStopIMClusteringByAssessor'
p5162
sg9
I00
sg10
(lp5163
sg12
(lp5164
sg29
(dp5165
sbsS'TImputerConstructor_random'
p5166
(i__main__
ClassDefinition
p5167
(dp5168
g4
I1
sg5
I0
sg6
g5166
sg7
S'TImputerConstructor'
p5169
sg9
I00
sg10
(lp5170
sg12
(lp5171
(S'bool'
p5172
S'deterministic'
p5173
g5173
S"tells whether to initialize random by example's CRC (default: false)"
p5174
I0
I0
I01
Ntp5175
ag1483
asg29
(dp5176
sbsS'TRandomLearner'
p5177
(i__main__
ClassDefinition
p5178
(dp5179
g4
I1
sg5
I0
sg6
g5177
sg7
S'TLearner'
p5180
sg9
I00
sg10
(lp5181
sg12
(lp5182
(S'TDistribution'
p5183
S'probabilities'
p5184
g5184
S'probabilities of predictions'
p5185
I0
I0
I00
Ntp5186
ag47
asg29
(dp5187
sbsS'TItemsetsSparseInducer'
p5188
(i__main__
ClassDefinition
p5189
(dp5190
g4
I1
sg5
I0
sg6
g5188
sg7
S'TOrange'
p5191
sg9
I00
sg10
(lp5192
sg12
(lp5193
(S'int'
p5194
S'maxItemSets'
p5195
S'max_item_sets'
p5196
S'maximal number of itemsets (increase if you want)'
p5197
I0
I0
I01
Ntp5198
a(S'float'
p5199
S'support'
p5200
g5200
S'required support'
p5201
I0
I0
I01
Ntp5202
a(S'bool'
p5203
S'storeExamples'
p5204
S'store_examples'
p5205
S'stores examples corresponding to itemsets'
p5206
I0
I0
I01
Ntp5207
asg29
(dp5208
sbsS'TRuleBeamInitializer_Default'
p5209
(i__main__
ClassDefinition
p5210
(dp5211
g4
I1
sg5
I0
sg6
g5209
sg7
S'TRuleBeamInitializer'
p5212
sg9
I00
sg10
(lp5213
sg12
(lp5214
sg29
(dp5215
sbsS'TImputerConstructor_minimal'
p5216
(i__main__
ClassDefinition
p5217
(dp5218
g4
I1
sg5
I0
sg6
g5216
sg7
S'TImputerConstructor'
p5219
sg9
I00
sg10
(lp5220
sg12
(lp5221
g1483
asg29
(dp5222
sbsS'TMeasureAttribute_cost'
p5223
(i__main__
ClassDefinition
p5224
(dp5225
g4
I1
sg5
I0
sg6
g5223
sg7
S'TMeasureAttributeFromProbabilities'
p5226
sg9
I00
sg10
(lp5227
sg12
(lp5228
(S'TCostMatrix'
p5229
S'cost'
p5230
g5230
S'cost matrix'
p5231
I0
I0
I00
Ntp5232
ag446
ag451
ag457
ag462
ag467
ag472
ag477
asg29
(dp5233
sbsS'TClustersFromIM'
p5234
(i__main__
ClassDefinition
p5235
(dp5236
g4
I1
sg5
I0
sg6
g5234
sg7
S'TOrange'
p5237
sg9
I01
sg10
(lp5238
sg12
(lp5239
sg29
(dp5240
sbsS'TRuleCovererAndRemover_Default'
p5241
(i__main__
ClassDefinition
p5242
(dp5243
g4
I1
sg5
I0
sg6
g5241
sg7
S'TRuleCovererAndRemover'
p5244
sg9
I00
sg10
(lp5245
sg12
(lp5246
sg29
(dp5247
sbsS'TClustersFromIMByAssessor'
p5248
(i__main__
ClassDefinition
p5249
(dp5250
g4
I1
sg5
I0
sg6
g5248
sg7
S'TClustersFromIM'
p5251
sg9
I00
sg10
(lp5252
sg12
(lp5253
(S'TColumnAssessor'
p5254
S'columnAssessor'
p5255
S'column_assessor'
p5256
S'column quality assessor'
p5257
I0
I0
I00
Ntp5258
a(S'TStopIMClusteringByAssessor'
p5259
S'stopCriterion'
p5260
S'stop_criterion'
p5261
S'stop criterion'
p5262
I0
I0
I00
Ntp5263
asg29
(dp5264
sbsS'TDomainContingency'
p5265
(i__main__
ClassDefinition
p5266
(dp5267
g4
I1
sg5
I0
sg6
g5265
sg7
g2565
sg9
I00
sg10
(lp5268
sg12
(lp5269
(S'TDistribution'
p5270
S'classes'
p5271
g5271
S'distribution of class values'
p5272
I0
I0
I00
Ntp5273
a(S'bool'
p5274
S'classIsOuter'
p5275
S'class_is_outer'
p5276
S'tells whether the class is the outer variable'
p5277
I0
I0
I01
Ntp5278
asg29
(dp5279
sbsS'TEarthClassifier'
p5280
(i__main__
ClassDefinition
p5281
(dp5282
g4
I1
sg5
I0
sg6
g5280
sg7
S'TClassifierFD'
p5283
sg9
I00
sg10
(lp5284
sg12
(lp5285
(S'int'
p5286
S'num_preds'
p5287
g5287
S'Number of predictor variables'
p5288
I0
I0
I01
Ntp5289
a(S'int'
p5290
S'num_terms'
p5291
g5291
S'Number of used terms'
p5292
I0
I0
I01
Ntp5293
a(S'int'
p5294
S'max_terms'
p5295
g5295
S'Maximum number of terms'
p5296
I0
I0
I01
Ntp5297
a(S'int'
p5298
S'num_responses'
p5299
g5299
S'Number of response variables'
p5300
I0
I0
I01
Ntp5301
a(S'TBoolList'
p5302
S'best_set'
p5303
g5303
S'Used terms.'
p5304
I0
I0
I00
Ntp5305
a(S'TFloatListList'
p5306
S'dirs'
p5307
g5307
S'max_preds x num_preds matrix'
p5308
I0
I0
I00
Ntp5309
a(S'TFloatListList'
p5310
S'cuts'
p5311
g5311
S'max_preds x num_preds matrix of cuts'
p5312
I0
I0
I00
Ntp5313
a(S'TFloatList'
p5314
S'betas'
p5315
g5315
S'Term coefficients;'
p5316
I0
I0
I00
Ntp5317
ag901
ag791
ag796
asg29
(dp5318
sbsS'TValueList'
p5319
(i__main__
ClassDefinition
p5320
(dp5321
g4
I1
sg5
I0
sg6
g5319
sg7
g2565
sg9
I00
sg10
(lp5322
sg12
(lp5323
(S'TVariable'
p5324
S'variable'
p5325
g5325
S'the variable to which the list applies'
p5326
I0
I0
I00
Ntp5327
asg29
(dp5328
sbsS'TTreeExampleSplitter_UnknownsToCommon'
p5329
(i__main__
ClassDefinition
p5330
(dp5331
g4
I1
sg5
I0
sg6
g5329
sg7
S'TTreeExampleSplitter'
p5332
sg9
I00
sg10
(lp5333
sg12
(lp5334
sg29
(dp5335
sbsS'TDomainTransformerConstructor'
p5336
(i__main__
ClassDefinition
p5337
(dp5338
g4
I1
sg5
I0
sg6
g5336
sg7
S'TOrange'
p5339
sg9
I01
sg10
(lp5340
sg12
(lp5341
(S'bool'
p5342
S'preservesOrder'
p5343
S'preserves_order'
p5344
S'a flag telling that original attributes have corresponding attribute in the same order'
p5345
I01
I0
I01
Ntp5346
a(S'bool'
p5347
S'preservesAttributes'
p5348
S'preserves_attributes'
p5349
S'a flag telling whether each original has a corresponding new attribute'
p5350
I01
I0
I01
Ntp5351
asg29
(dp5352
sbsS'TIGConstructor'
p5353
(i__main__
ClassDefinition
p5354
(dp5355
g4
I1
sg5
I0
sg6
g5353
sg7
S'TOrange'
p5356
sg9
I01
sg10
(lp5357
sg12
(lp5358
sg29
(dp5359
sbsS'TTreeDescender_UnknownToNode'
p5360
(i__main__
ClassDefinition
p5361
(dp5362
g4
I1
sg5
I0
sg6
g5360
sg7
g2213
sg9
I0
sg10
(lp5363
sg12
(lp5364
sg29
(dp5365
sbsS'TMakeRandomIndices'
p5366
(i__main__
ClassDefinition
p5367
(dp5368
g4
I1
sg5
I0
sg6
g5366
sg7
S'TOrange'
p5369
sg9
I00
sg10
(lp5370
sg12
(lp5371
g282
ag286
ag291
asg29
(dp5372
S'Stratification'
p5373
(lp5374
(S'StratifiedIfPossible'
p5375
S'-1'
p5376
tp5377
a(S'NotStratified'
p5378
I0
tp5379
a(S'Stratified'
p5380
I1
tp5381
assbsS'TFilter_Python'
p5382
(i__main__
ClassDefinition
p5383
(dp5384
g4
I1
sg5
I0
sg6
g5382
sg7
S'TFilter'
p5385
sg9
I00
sg10
(lp5386
sg12
(lp5387
g259
ag263
asg29
(dp5388
sbsS'TExamplesDistanceConstructor_Maximal'
p5389
(i__main__
ClassDefinition
p5390
(dp5391
g4
I1
sg5
I0
sg6
g5389
sg7
S'TExamplesDistanceConstructor_Normalized'
p5392
sg9
I00
sg10
(lp5393
sg12
(lp5394
g96
ag101
ag106
asg29
(dp5395
sbsS'TExamplesDistanceConstructor_Python'
p5396
(i__main__
ClassDefinition
p5397
(dp5398
g4
I1
sg5
I0
sg6
g5396
sg7
S'TExamplesDistanceConstructor'
p5399
sg9
I00
sg10
(lp5400
sg12
(lp5401
g106
asg29
(dp5402
sbsS'TPythonVariable'
p5403
(i__main__
ClassDefinition
p5404
(dp5405
g4
I1
sg5
I0
sg6
g5403
sg7
S'TVariable'
p5406
sg9
I00
sg10
(lp5407
sg12
(lp5408
(S'bool'
p5409
S'usePickle'
p5410
S'use_pickle'
p5411
S'tells whether to use pickle for saving to/loading from files'
p5412
I0
I0
I01
Ntp5413
a(S'bool'
p5414
S'useSomeValue'
p5415
S'use_some_value'
p5416
S'tells whether the Variable will operate on Value or SomeValue (default)'
p5417
I0
I0
I01
Ntp5418
ag642
ag646
ag650
ag655
ag660
ag665
ag670
asg29
(dp5419
sbsS'TGaussianNoiseGenerator'
p5420
(i__main__
ClassDefinition
p5421
(dp5422
g4
I1
sg5
I0
sg6
g5420
sg7
S'TChangeExampleGenerator'
p5423
sg9
I00
sg10
(lp5424
sg12
(lp5425
(S'TIntFloatList'
p5426
S'deviations'
p5427
g5427
S"deviations for attributes' values"
p5428
I0
I0
I00
Ntp5429
a(S'TRandomGenerator'
p5430
S'randomGenerator'
p5431
S'random_generator'
p5432
S'random generator'
p5433
I0
I0
I00
Ntp5434
ag121
ag125
asg29
(dp5435
sbsS'TClustersFromDistributionsByAssessor'
p5436
(i__main__
ClassDefinition
p5437
(dp5438
g4
I1
sg5
I0
sg6
g5436
sg7
S'TClustersFromDistributions'
p5439
sg9
I00
sg10
(lp5440
sg12
(lp5441
(S'TDistributionAssessor'
p5442
S'distributionAssessor'
p5443
S'distribution_assessor'
p5444
S'column quality assessor'
p5445
I0
I0
I00
Ntp5446
a(S'TStopDistributionClustering'
p5447
S'stopCriterion'
p5448
S'stop_criterion'
p5449
S'stop criterion'
p5450
I0
I0
I00
Ntp5451
a(S'float'
p5452
S'minProfitProportion'
p5453
S'min_profit_proportion'
p5454
S'minimal merge profit'
p5455
I0
I0
I01
Ntp5456
asg29
(dp5457
sbsS'TExamplesDistance_Hamming'
p5458
(i__main__
ClassDefinition
p5459
(dp5460
g4
I1
sg5
I0
sg6
g5458
sg7
S'TExamplesDistance'
p5461
sg9
I00
sg10
(lp5462
sg12
(lp5463
(S'bool'
p5464
S'ignoreClass'
p5465
S'ignore_class'
p5466
S'if true (default), class value is ignored when computing distances'
p5467
I0
I0
I01
Ntp5468
a(S'bool'
p5469
S'ignoreUnknowns'
p5470
S'ignore_unknowns'
p5471
S'if true (default: false) unknown values are ignored in computation'
p5472
I0
I0
I01
Ntp5473
asg29
(dp5474
sbsS'TColumnAssessor_Kramer'
p5475
(i__main__
ClassDefinition
p5476
(dp5477
g4
I1
sg5
I0
sg6
g5475
sg7
S'TColumnAssessor'
p5478
sg9
I00
sg10
(lp5479
sg12
(lp5480
sg29
(dp5481
sbsS'TEVDistGetter_Python'
p5482
(i__main__
ClassDefinition
p5483
(dp5484
g4
I1
sg5
I0
sg6
g5482
sg7
S'TEVDistGetter'
p5485
sg9
I00
sg10
(lp5486
sg12
(lp5487
sg29
(dp5488
sbsS'TDiscretization'
p5489
(i__main__
ClassDefinition
p5490
(dp5491
g4
I1
sg5
I0
sg6
g5489
sg7
S'TOrange'
p5492
sg9
I01
sg10
(lp5493
sg12
(lp5494
sg29
(dp5495
sbsS'TIMByRows'
p5496
(i__main__
ClassDefinition
p5497
(dp5498
g4
I1
sg5
I0
sg6
g5496
sg7
S'TOrange'
p5499
sg9
I00
sg10
(lp5500
sg12
(lp5501
(S'int'
p5502
S'varType'
p5503
S'var_type'
p5504
S' class variable type'
p5505
I0
I0
I01
S'Variable_Type'
p5506
tp5507
asg29
(dp5508
sbsS'TAssessIMQuality'
p5509
(i__main__
ClassDefinition
p5510
(dp5511
g4
I1
sg5
I0
sg6
g5509
sg7
S'TOrange'
p5512
sg9
I00
sg10
(lp5513
sg12
(lp5514
(S'TColumnAssessor'
p5515
S'columnAssessor'
p5516
S'column_assessor'
p5517
S'column quality assessor'
p5518
I0
I0
I00
Ntp5519
asg29
(dp5520
sbsS'TRule'
p5521
(i__main__
ClassDefinition
p5522
(dp5523
g4
I1
sg5
I0
sg6
g5521
sg7
S'TOrange'
p5524
sg9
I00
sg10
(lp5525
sg12
(lp5526
(S'TFilter'
p5527
S'filter'
p5528
g5528
S'stored filter for this rule'
p5529
I0
I0
I00
Ntp5530
a(S'TFilter'
p5531
S'valuesFilter'
p5532
S'values_filter'
p5533
S'Filter_values representation of main filter (sometimes needed)'
p5534
I0
I0
I00
Ntp5535
a(S'TClassifier'
p5536
S'classifier'
p5537
g5537
S'classifies an example'
p5538
I0
I0
I00
Ntp5539
a(S'TLearner'
p5540
S'learner'
p5541
g5541
S'learns a classifier from data'
p5542
I0
I0
I00
Ntp5543
a(S'TRule'
p5544
S'parentRule'
p5545
S'parent_rule'
p5546
g1294
I0
I0
I00
Ntp5547
a(S'TDistribution'
p5548
S'baseDist'
p5549
S'base_dist'
p5550
S'initial distribution'
p5551
I0
I0
I00
Ntp5552
a(S'TDistribution'
p5553
S'classDistribution'
p5554
S'class_distribution'
p5555
S'distribution of classes covered by the rule'
p5556
I0
I0
I00
Ntp5557
a(S'TExampleTable'
p5558
S'examples'
p5559
g5559
S'covered examples'
p5560
I0
I0
I00
Ntp5561
a(S'int'
p5562
S'weightID'
p5563
S'weight_ID'
p5564
S'weight for the stored examples'
p5565
I0
I0
I01
Ntp5566
a(S'float'
p5567
S'quality'
p5568
g5568
S'some measure of rule quality'
p5569
I0
I0
I01
Ntp5570
a(S'int'
p5571
S'complexity'
p5572
g5572
g1294
I0
I0
I01
Ntp5573
a(S'float'
p5574
S'chi'
p5575
g5575
g1294
I0
I0
I01
Ntp5576
a(S'int'
p5577
S'requiredConditions'
p5578
S'required_conditions'
p5579
S'conditions that are mandatory in rule - rule attribute significance avoids these'
p5580
I0
I0
I01
Ntp5581
asg29
(dp5582
sbsS'TPreprocessor_addClassNoise'
p5583
(i__main__
ClassDefinition
p5584
(dp5585
g4
I1
sg5
I0
sg6
g5583
sg7
S'TPreprocessor'
p5586
sg9
I00
sg10
(lp5587
sg12
(lp5588
(S'float'
p5589
S'proportion'
p5590
g5590
S'proportion of changed class values'
p5591
I0
I0
I01
Ntp5592
a(S'TRandomGenerator'
p5593
S'randomGenerator'
p5594
S'random_generator'
p5595
S'random number generator'
p5596
I0
I0
I00
Ntp5597
asg29
(dp5598
sbsS'TFilter'
p5599
(i__main__
ClassDefinition
p5600
(dp5601
g4
I1
sg5
I0
sg6
g5599
sg7
S'TOrange'
p5602
sg9
I01
sg10
(lp5603
sg12
(lp5604
g259
ag263
asg29
(dp5605
sbsS'TRuleBeamCandidateSelector_TakeAll'
p5606
(i__main__
ClassDefinition
p5607
(dp5608
g4
I1
sg5
I0
sg6
g5606
sg7
S'TRuleBeamCandidateSelector'
p5609
sg9
I00
sg10
(lp5610
sg12
(lp5611
sg29
(dp5612
sbsS'TPreprocessor_addMissing'
p5613
(i__main__
ClassDefinition
p5614
(dp5615
g4
I1
sg5
I0
sg6
g5613
sg7
S'TPreprocessor'
p5616
sg9
I00
sg10
(lp5617
sg12
(lp5618
(S'TVariableFloatMap'
p5619
S'proportions'
p5620
g5620
S'proportion of removed values for individual values'
p5621
I0
I0
I00
Ntp5622
a(S'float'
p5623
S'defaultProportion'
p5624
S'default_proportion'
p5625
S'default proportion of removed values (for attributes not specified above)'
p5626
I0
I0
I01
Ntp5627
a(S'int'
p5628
S'specialType'
p5629
S'special_type'
p5630
S'special value type (1=DC, 2=DK)'
p5631
I0
I0
I01
Ntp5632
a(S'TRandomGenerator'
p5633
S'randomGenerator'
p5634
S'random_generator'
p5635
S'random number generator'
p5636
I0
I0
I00
Ntp5637
asg29
(dp5638
sbsS'TThresholdDiscretizer'
p5639
(i__main__
ClassDefinition
p5640
(dp5641
g4
I1
sg5
I0
sg6
g5639
sg7
S'TDiscretizer'
p5642
sg9
I00
sg10
(lp5643
sg12
(lp5644
(S'float'
p5645
S'threshold'
p5646
g5646
S'threshold'
p5647
I0
I0
I01
Ntp5648
ag318
asg29
(dp5649
sbsS'TMakeRandomIndicesN'
p5650
(i__main__
ClassDefinition
p5651
(dp5652
g4
I1
sg5
I0
sg6
g5650
sg7
S'TMakeRandomIndices'
p5653
sg9
I00
sg10
(lp5654
sg12
(lp5655
(S'TFloatList'
p5656
g91
g91
S'probabilities of indices (last is 1-sum(p))'
p5657
I0
I0
I00
Ntp5658
ag282
ag286
ag291
asg29
(dp5659
sbsS'TValueFilter_stringList'
p5660
(i__main__
ClassDefinition
p5661
(dp5662
g4
I1
sg5
I0
sg6
g5660
sg7
S'TValueFilter'
p5663
sg9
I00
sg10
(lp5664
sg12
(lp5665
(S'TStringList'
p5666
S'values'
p5667
g5667
S'accepted values'
p5668
I0
I0
I00
Ntp5669
a(S'bool'
p5670
S'caseSensitive'
p5671
S'case_sensitive'
p5672
S'if true (default), the comparison is case sensitive'
p5673
I0
I0
I01
Ntp5674
ag2821
ag2826
asg29
(dp5675
sbsS'TDomain'
p5676
(i__main__
ClassDefinition
p5677
(dp5678
g4
I1
sg5
I0
sg6
g5676
sg7
S'TOrange'
p5679
sg9
I00
sg10
(lp5680
sg12
(lp5681
(S'TVariable'
p5682
S'classVar'
p5683
S'class_var'
p5684
S'class variable'
p5685
I01
I0
I00
Ntp5686
a(S'TVarList'
p5687
S'attributes'
p5688
(g5688
S'features'
p5689
tp5690
S' list of attributes, excluding the class'
p5691
I01
I0
I00
Ntp5692
a(S'TVarList'
p5693
S'variables'
p5694
g5694
S'list of attributes, including the class at the end of the list'
p5695
I01
I0
I00
Ntp5696
a(S'TVarList'
p5697
S'classVars'
p5698
S'class_vars'
p5699
S'list of class variables, if multiple; else None'
p5700
I01
I0
I00
Ntp5701
a(S'int'
p5702
S'version'
p5703
g5703
S"unique version identifier; it's changed each time a domain is changed"
p5704
I01
I0
I01
Ntp5705
asg29
(dp5706
sbsS'TTreePruner_SameMajority'
p5707
(i__main__
ClassDefinition
p5708
(dp5709
g4
I1
sg5
I0
sg6
g5707
sg7
S'TTreePruner'
p5710
sg9
I00
sg10
(lp5711
sg12
(lp5712
sg29
(dp5713
sbsS'TDomainDiscretization'
p5714
(i__main__
ClassDefinition
p5715
(dp5716
g4
I1
sg5
I0
sg6
g5714
sg7
S'TOrange'
p5717
sg9
I00
sg10
(lp5718
sg12
(lp5719
(S'TDiscretization'
p5720
S'discretization'
p5721
g5721
S'discretization'
p5722
I0
I0
I00
Ntp5723
asg29
(dp5724
sbsS'TTreeDescender_Python'
p5725
(i__main__
ClassDefinition
p5726
(dp5727
g4
I1
sg5
I0
sg6
g5725
sg7
S'TTreeDescender'
p5728
sg9
I00
sg10
(lp5729
sg12
(lp5730
sg29
(dp5731
sbsS'TKernelFunc'
p5732
(i__main__
ClassDefinition
p5733
(dp5734
g4
I1
sg5
I0
sg6
g5732
sg7
S'TOrange'
p5735
sg9
I01
sg10
(lp5736
sg12
(lp5737
sg29
(dp5738
sbsS'TRuleClassifierConstructor_Python'
p5739
(i__main__
ClassDefinition
p5740
(dp5741
g4
I1
sg5
I0
sg6
g5739
sg7
S'TRuleClassifierConstructor'
p5742
sg9
I00
sg10
(lp5743
sg12
(lp5744
sg29
(dp5745
sbsS'THierarchicalCluster'
p5746
(i__main__
ClassDefinition
p5747
(dp5748
g4
I1
sg5
I0
sg6
g5746
sg7
S'TOrange'
p5749
sg9
I00
sg10
(lp5750
sg12
(lp5751
(S'THierarchicalClusterList'
p5752
S'branches'
p5753
g5753
S'subclusters'
p5754
I0
I0
I00
Ntp5755
a(S'float'
p5756
S'height'
p5757
g5757
S'height'
p5758
I0
I0
I01
Ntp5759
a(S'TIntList'
p5760
S'mapping'
p5761
g5761
S'indices to the list of all elements in the clustering'
p5762
I0
I0
I00
Ntp5763
a(S'int'
p5764
S'first'
p5765
g5765
S"the index into 'elements' to the first element of the cluster"
p5766
I0
I0
I01
Ntp5767
a(S'int'
p5768
S'last'
p5769
g5769
S"the index into 'elements' to the one after the last element of the cluster"
p5770
I0
I0
I01
Ntp5771
asg29
(dp5772
sbsS'TBasketFeeder'
p5773
(i__main__
ClassDefinition
p5774
(dp5775
g4
I1
sg5
I0
sg6
g5773
sg7
S'TOrange'
p5776
sg9
I00
sg10
(lp5777
sg12
(lp5778
(S'bool'
p5779
S'dontStore'
p5780
S'dont_store'
p5781
S'disables items storing'
p5782
I0
I0
I01
Ntp5783
a(S'bool'
p5784
S'dontCheckStored'
p5785
S'dont_check_stored'
p5786
S'disables items lookup in the global cache'
p5787
I0
I0
I01
Ntp5788
a(S'TDomain'
p5789
S'domain'
p5790
g5790
S'domain where the meta attributes are stored'
p5791
I0
I0
I00
Ntp5792
a(S'TDomain'
p5793
S'sourceDomain'
p5794
S'source_domain'
p5795
S'domain with items that can be reused'
p5796
I0
I0
I00
Ntp5797
asg29
(dp5798
sbsS'TSubsetsGenerator_minMaxSize_iterator'
p5799
(i__main__
ClassDefinition
p5800
(dp5801
g4
I1
sg5
I0
sg6
g5799
sg7
S'TSubsetsGenerator_iterator'
p5802
sg9
I00
sg10
(lp5803
sg12
(lp5804
(S'int'
p5805
g4355
g4355
g1294
I01
I0
I01
Ntp5806
a(S'int'
p5807
S'max'
p5808
g5808
S'maximal subset size'
p5809
I0
I0
I01
Ntp5810
a(S'bool'
p5811
S'moreToCome'
p5812
S'more_to_come'
p5813
g1294
I01
I0
I01
Ntp5814
ag192
asg29
(dp5815
sbsS'TPreprocessor_dropMissing'
p5816
(i__main__
ClassDefinition
p5817
(dp5818
g4
I1
sg5
I0
sg6
g5816
sg7
S'TPreprocessor'
p5819
sg9
I00
sg10
(lp5820
sg12
(lp5821
sg29
(dp5822
sbsS'TComputeDomainContingency'
p5823
(i__main__
ClassDefinition
p5824
(dp5825
g4
I1
sg5
I0
sg6
g5823
sg7
S'TOrange'
p5826
sg9
I00
sg10
(lp5827
sg12
(lp5828
g28
asg29
(dp5829
sbsS'TFixedDiscretization'
p5830
(i__main__
ClassDefinition
p5831
(dp5832
g4
I1
sg5
I0
sg6
g5830
sg7
S'TDiscretization'
p5833
sg9
I00
sg10
(lp5834
sg12
(lp5835
(S'TFloatList'
p5836
S'points'
p5837
g5837
S'cut-off points'
p5838
I0
I0
I00
Ntp5839
asg29
(dp5840
sbsS'TExampleClusters'
p5841
(i__main__
ClassDefinition
p5842
(dp5843
g4
I1
sg5
I0
sg6
g5841
sg7
S'TGeneralExampleClustering'
p5844
sg9
I00
sg10
(lp5845
sg12
(lp5846
(S'TExampleCluster'
p5847
S'root'
p5848
g5848
S'root of cluster hierarchy'
p5849
I0
I0
I00
Ntp5850
a(S'float'
p5851
S'quality'
p5852
g5852
S"'quality' of clustering"
p5853
I0
I0
I01
Ntp5854
asg29
(dp5855
sbsS'TRuleDataStoppingCriteria'
p5856
(i__main__
ClassDefinition
p5857
(dp5858
g4
I1
sg5
I0
sg6
g5856
sg7
S'TOrange'
p5859
sg9
I01
sg10
(lp5860
sg12
(lp5861
sg29
(dp5862
sbsS'TPreprocessor_filter'
p5863
(i__main__
ClassDefinition
p5864
(dp5865
g4
I1
sg5
I0
sg6
g5863
sg7
S'TPreprocessor'
p5866
sg9
I00
sg10
(lp5867
sg12
(lp5868
(S'TFilter'
p5869
S'filter'
p5870
g5870
S'filter'
p5871
I0
I0
I00
Ntp5872
asg29
(dp5873
sbsS'TMakeRandomIndices2'
p5874
(i__main__
ClassDefinition
p5875
(dp5876
g4
I1
sg5
I0
sg6
g5874
sg7
S'TMakeRandomIndices'
p5877
sg9
I00
sg10
(lp5878
sg12
(lp5879
(S'float'
p5880
S'p0'
p5881
g5881
S"a proportion or a number of 0's"
p5882
I0
I0
I01
Ntp5883
ag282
ag286
ag291
asg29
(dp5884
sbsS'TLookupLearner'
p5885
(i__main__
ClassDefinition
p5886
(dp5887
g4
I1
sg5
I0
sg6
g5885
sg7
S'TLearner'
p5888
sg9
I00
sg10
(lp5889
sg12
(lp5890
(S'TLearner'
p5891
S'learnerForUnknown'
p5892
S'learner_for_unknown'
p5893
S'a learner for classifying cases not found in the table'
p5894
I0
I0
I00
Ntp5895
a(S'bool'
p5896
S'allowFastLookups'
p5897
S'allow_fast_lookups'
p5898
S'if true, it constructs LookupClassifiers for <=3 attributes'
p5899
I0
I0
I01
Ntp5900
a(S'int'
p5901
S'unknownsHandling'
p5902
S'unknowns_handling'
p5903
S'0 omit examples with unknowns, 1 distribute them, 2 keep them in table'
p5904
I0
I0
I01
Ntp5905
ag47
asg29
(dp5906
sbsS'TImputeClassifier'
p5907
(i__main__
ClassDefinition
p5908
(dp5909
g4
I1
sg5
I0
sg6
g5907
sg7
S'TClassifier'
p5910
sg9
I00
sg10
(lp5911
sg12
(lp5912
(S'TClassifierFromVar'
p5913
S'classifierFromVar'
p5914
S'classifier_from_var'
p5915
S'ClassifierFromVar that is used to retrieve defined values'
p5916
I0
I0
I00
Ntp5917
a(S'TClassifier'
p5918
S'imputer'
p5919
g5919
S'classifier that is used to determine the missing values '
p5920
I0
I0
I00
Ntp5921
ag791
ag796
asg29
(dp5922
sbsS'TMeasureAttribute_chiSquare'
p5923
(i__main__
ClassDefinition
p5924
(dp5925
g4
I1
sg5
I0
sg6
g5923
sg7
S'TMeasureAttributeFromProbabilities'
p5926
sg9
I00
sg10
(lp5927
sg12
(lp5928
(S'bool'
p5929
S'computeProbabilities'
p5930
S'compute_probabilities'
p5931
g1294
I0
I0
I01
Ntp5932
ag446
ag451
ag457
ag462
ag467
ag472
ag477
asg29
(dp5933
sbsS'TDistribution'
p5934
(i__main__
ClassDefinition
p5935
(dp5936
g4
I1
sg5
I0
sg6
g5934
sg7
S'TSomeValue'
p5937
sg9
I01
sg10
(lp5938
sg12
(lp5939
g2177
ag2181
ag2185
ag2189
ag2193
ag2198
ag2203
ag2208
asg29
(dp5940
sbsS'TTreePruner_m'
p5941
(i__main__
ClassDefinition
p5942
(dp5943
g4
I1
sg5
I0
sg6
g5941
sg7
S'TTreePruner'
p5944
sg9
I00
sg10
(lp5945
sg12
(lp5946
(S'float'
p5947
g991
g991
S'm for m-estimate'
p5948
I0
I0
I01
Ntp5949
asg29
(dp5950
sbsS'TBiModalDiscretization'
p5951
(i__main__
ClassDefinition
p5952
(dp5953
g4
I1
sg5
I0
sg6
g5951
sg7
S'TDiscretization'
p5954
sg9
I00
sg10
(lp5955
sg12
(lp5956
(S'bool'
p5957
S'splitInTwo'
p5958
S'split_in_two'
p5959
S'if true (default), flanks are merged into a single interval'
p5960
I0
I0
I01
Ntp5961
asg29
(dp5962
sbsS'TRuleBeamRefiner_Python'
p5963
(i__main__
ClassDefinition
p5964
(dp5965
g4
I1
sg5
I0
sg6
g5963
sg7
S'TRuleBeamRefiner'
p5966
sg9
I00
sg10
(lp5967
sg12
(lp5968
sg29
(dp5969
sbsS'TClassifierFromVarFD'
p5970
(i__main__
ClassDefinition
p5971
(dp5972
g4
I1
sg5
I0
sg6
g5970
sg7
S'TClassifierFD'
p5973
sg9
I00
sg10
(lp5974
sg12
(lp5975
(S'int'
p5976
S'position'
p5977
g5977
S'position of the attribute in domain'
p5978
I0
I0
I01
Ntp5979
a(S'TTransformValue'
p5980
S'transformer'
p5981
g5981
S'transformer'
p5982
I0
I0
I00
Ntp5983
a(S'TDistribution'
p5984
S'distributionForUnknown'
p5985
S'distribution_for_unknown'
p5986
S'distribution for unknown value'
p5987
I0
I0
I00
Ntp5988
a(S'bool'
p5989
S'transformUnknowns'
p5990
S'transform_unknowns'
p5991
S'if false (default is true), unknowns stay unknown or are changed into distribution if given'
p5992
I0
I0
I01
Ntp5993
ag901
ag791
ag796
asg29
(dp5994
sbsS'TImputer_model'
p5995
(i__main__
ClassDefinition
p5996
(dp5997
g4
I1
sg5
I0
sg6
g5995
sg7
S'TImputer'
p5998
sg9
I00
sg10
(lp5999
sg12
(lp6000
(S'TClassifierList'
p6001
S'models'
p6002
g6002
S'classifiers'
p6003
I0
I0
I00
Ntp6004
asg29
(dp6005
sbsS'TFeatureByDistributions'
p6006
(i__main__
ClassDefinition
p6007
(dp6008
g4
I1
sg5
I0
sg6
g6006
sg7
S'TFeatureInducer'
p6009
sg9
I00
sg10
(lp6010
sg12
(lp6011
(S'TClustersFromDistributions'
p6012
S'clustersFromDistributions'
p6013
S'clusters_from_distributions'
p6014
S'clustering algorithm'
p6015
I0
I0
I00
Ntp6016
a(S'int'
p6017
S'completion'
p6018
g6018
S' decides how to determine the class for points not covered by any cluster'
p6019
I0
I0
I01
S'FeatureByDistributions_Completion'
p6020
tp6021
asg29
(dp6022
S'Completion'
p6023
(lp6024
(S'NoCompletion'
p6025
S'completion_no'
p6026
tp6027
a(S'CompletionByDefault'
p6028
S'completion_default'
p6029
tp6030
a(S'CompletionByBayes'
p6031
S'completion_bayes'
p6032
tp6033
assbsS'TPreprocessor_takeMissing'
p6034
(i__main__
ClassDefinition
p6035
(dp6036
g4
I1
sg5
I0
sg6
g6034
sg7
S'TPreprocessor'
p6037
sg9
I00
sg10
(lp6038
sg12
(lp6039
sg29
(dp6040
sbsS'TTreeDescender_UnknownToBranch'
p6041
(i__main__
ClassDefinition
p6042
(dp6043
g4
I1
sg5
I0
sg6
g6041
sg7
g2213
sg9
I0
sg10
(lp6044
sg12
(lp6045
sg29
(dp6046
sbsS'TTreeSplitConstructor_Attribute'
p6047
(i__main__
ClassDefinition
p6048
(dp6049
g4
I1
sg5
I0
sg6
g6047
sg7
S'TTreeSplitConstructor_Measure'
p6050
sg9
I00
sg10
(lp6051
sg12
(lp6052
g2374
ag2379
ag1693
asg29
(dp6053
sbsS'TCostMatrix'
p6054
(i__main__
ClassDefinition
p6055
(dp6056
g4
I1
sg5
I0
sg6
g6054
sg7
S'TOrange'
p6057
sg9
I00
sg10
(lp6058
sg12
(lp6059
(S'TVariable'
p6060
S'classVar'
p6061
S'class_var'
p6062
S'attribute to which the matrix applies'
p6063
I0
I0
I00
Ntp6064
a(S'int'
p6065
S'dimension'
p6066
g6066
S'dimension (should equal classVar.noOfValues())'
p6067
I01
I0
I01
Ntp6068
asg29
(dp6069
sbsS'TFilter_sameValue'
p6070
(i__main__
ClassDefinition
p6071
(dp6072
g4
I1
sg5
I0
sg6
g6070
sg7
S'TFilter'
p6073
sg9
I00
sg10
(lp6074
sg12
(lp6075
(S'int'
p6076
S'position'
p6077
g6077
S'position of the observed attribute'
p6078
I0
I0
I01
Ntp6079
a(S'TValue'
p6080
S'value'
p6081
g6081
S'value that the selected examples should have'
p6082
I0
I0
I01
Ntp6083
ag259
ag263
asg29
(dp6084
sbsS'TExamplesDistance_Euclidean'
p6085
(i__main__
ClassDefinition
p6086
(dp6087
g4
I1
sg5
I0
sg6
g6085
sg7
S'TExamplesDistance_Normalized'
p6088
sg9
I00
sg10
(lp6089
sg12
(lp6090
(S'TDomainDistributions'
p6091
S'distributions'
p6092
g6092
S'distributions (of discrete attributes only)'
p6093
I0
I0
I00
Ntp6094
a(S'TAttributedFloatList'
p6095
S'bothSpecialDist'
p6096
S'both_special_dist'
p6097
S'distances between discrete attributes if both values are unknown'
p6098
I0
I0
I00
Ntp6099
ag136
ag140
ag144
ag148
ag153
ag157
ag162
asg29
(dp6100
sbsS'TIMConstructor'
p6101
(i__main__
ClassDefinition
p6102
(dp6103
g4
I1
sg5
I0
sg6
g6101
sg7
S'TOrange'
p6104
sg9
I01
sg10
(lp6105
sg12
(lp6106
g2613
asg29
(dp6107
sbsS'TConditionalProbabilityEstimatorConstructor_loess'
p6108
(i__main__
ClassDefinition
p6109
(dp6110
g4
I1
sg5
I0
sg6
g6108
sg7
S'TConditionalProbabilityEstimatorConstructor'
p6111
sg9
I00
sg10
(lp6112
sg12
(lp6113
(S'float'
p6114
S'windowProportion'
p6115
S'window_proportion'
p6116
S'The proportion of points in a window for LR'
p6117
I0
I0
I01
Ntp6118
a(S'int'
p6119
S'nPoints'
p6120
S'n_points'
p6121
S'The number of points on curve'
p6122
I0
I0
I01
Ntp6123
a(S'int'
p6124
S'distributionMethod'
p6125
S'distribution_method'
p6126
S" Meaning of the 'nPoints'"
p6127
I0
I0
I01
S'ConditionalProbabilityEstimatorConstructor_loess_DistributionMethod'
p6128
tp6129
asg29
(dp6130
S'DistributionMethod'
p6131
(lp6132
(S'Minimal'
p6133
S'DISTRIBUTE_MINIMAL'
p6134
tp6135
a(S'Factor'
p6136
S'DISTRIBUTE_FACTOR'
p6137
tp6138
a(S'Fixed'
p6139
S'DISTRIBUTE_FIXED'
p6140
tp6141
a(S'Uniform'
p6142
S'DISTRIBUTE_UNIFORM'
p6143
tp6144
a(S'Maximal'
p6145
S'DISTRIBUTE_MAXIMAL'
p6146
tp6147
assbsS'TTreeSplitConstructor_Threshold'
p6148
(i__main__
ClassDefinition
p6149
(dp6150
g4
I1
sg5
I0
sg6
g6148
sg7
S'TTreeSplitConstructor_Measure'
p6151
sg9
I00
sg10
(lp6152
sg12
(lp6153
g2374
ag2379
ag1693
asg29
(dp6154
sbsS'TDistanceMap'
p6155
(i__main__
ClassDefinition
p6156
(dp6157
g4
I1
sg5
I0
sg6
g6155
sg7
S'TOrange'
p6158
sg9
I00
sg10
(lp6159
sg12
(lp6160
(S'int'
p6161
S'dim'
p6162
g6162
S'bitmap dimension (in cells)'
p6163
I01
I0
I01
Ntp6164
a(S'int'
p6165
S'matrixType'
p6166
S'matrix_type'
p6167
S'0 lower, 1 upper, 2 symmetric'
p6168
I0
I0
I01
Ntp6169
a(S'TIntList'
p6170
S'elementIndices'
p6171
S'element_indices'
p6172
S'indices to elements (one for row + one at the end)'
p6173
I01
I0
I00
Ntp6174
asg29
(dp6175
sbsS'TExampleForMissing'
p6176
(i__main__
ClassDefinition
p6177
(dp6178
g4
I1
sg5
I0
sg6
g6176
sg7
S'TExample'
p6179
sg9
I00
sg10
(lp6180
sg12
(lp6181
(S'TEFMDataDescription'
p6182
S'dataDescription'
p6183
S'data_description'
p6184
S'data description'
p6185
I0
I0
I00
Ntp6186
ag2781
ag2784
asg29
(dp6187
sbsS'TCostLearner'
p6188
(i__main__
ClassDefinition
p6189
(dp6190
g4
I1
sg5
I0
sg6
g6188
sg7
S'TMajorityLearner'
p6191
sg9
I00
sg10
(lp6192
sg12
(lp6193
(S'TCostMatrix'
p6194
S'cost'
p6195
g6195
S'cost matrix'
p6196
I0
I0
I00
Ntp6197
ag3694
ag3699
ag47
asg29
(dp6198
sbsS'TPreprocessor_drop'
p6199
(i__main__
ClassDefinition
p6200
(dp6201
g4
I1
sg5
I0
sg6
g6199
sg7
S'TPreprocessor'
p6202
sg9
I00
sg10
(lp6203
sg12
(lp6204
(S'TVariableFilterMap'
p6205
S'values'
p6206
g6206
S'variable-filter pairs'
p6207
I0
I0
I00
Ntp6208
a(S'bool'
p6209
S'conjunction'
p6210
g6210
S'decides whether to take conjunction or disjunction of values'
p6211
I0
I0
I01
Ntp6212
asg29
(dp6213
sbsS'TPreprocessor_addNoise'
p6214
(i__main__
ClassDefinition
p6215
(dp6216
g4
I1
sg5
I0
sg6
g6214
sg7
S'TPreprocessor'
p6217
sg9
I00
sg10
(lp6218
sg12
(lp6219
(S'TVariableFloatMap'
p6220
S'proportions'
p6221
g6221
S'proportion of changed values for individual attributes'
p6222
I0
I0
I00
Ntp6223
a(S'float'
p6224
S'defaultProportion'
p6225
S'default_proportion'
p6226
S'default proportion of changed values (for attributes not specified above)'
p6227
I0
I0
I01
Ntp6228
a(S'TRandomGenerator'
p6229
S'randomGenerator'
p6230
S'random_generator'
p6231
S'random number generator'
p6232
I0
I0
I00
Ntp6233
asg29
(dp6234
sbsS'TColumnAssessor_mf'
p6235
(i__main__
ClassDefinition
p6236
(dp6237
g4
I1
sg5
I0
sg6
g6235
sg7
S'TColumnAssessor'
p6238
sg9
I00
sg10
(lp6239
sg12
(lp6240
(S'float'
p6241
g991
g991
S'm for m-estimate'
p6242
I0
I0
I01
Ntp6243
asg29
(dp6244
sbsS'TSubsetsGenerator'
p6245
(i__main__
ClassDefinition
p6246
(dp6247
g4
I1
sg5
I0
sg6
g6245
sg7
S'TOrange'
p6248
sg9
I01
sg10
(lp6249
sg12
(lp6250
g2346
asg29
(dp6251
sbsS'TPreprocessor_addCensorWeight'
p6252
(i__main__
ClassDefinition
p6253
(dp6254
g4
I1
sg5
I0
sg6
g6252
sg7
S'TPreprocessor'
p6255
sg9
I00
sg10
(lp6256
sg12
(lp6257
(S'TVariable'
p6258
S'outcomeVar'
p6259
S'outcome_var'
p6260
S'outcome variable'
p6261
I0
I0
I00
Ntp6262
a(S'TVariable'
p6263
S'timeVar'
p6264
S'time_var'
p6265
S'time variable'
p6266
I0
I0
I00
Ntp6267
a(S'TValue'
p6268
S'eventValue'
p6269
S'event_value'
p6270
S'event (fail) value'
p6271
I0
I0
I01
Ntp6272
a(S'int'
p6273
S'method'
p6274
g6274
S' weighting method'
p6275
I0
I0
I01
S'Preprocessor_addCensorWeight_Method'
p6276
tp6277
a(S'float'
p6278
S'maxTime'
p6279
S'max_time'
p6280
S'maximal time'
p6281
I0
I0
I01
Ntp6282
a(S'bool'
p6283
S'addComplementary'
p6284
S'add_complementary'
p6285
S'if true (default is false), complementary examples are added for censored examples'
p6286
I0
I0
I01
Ntp6287
asg29
(dp6288
S'Method'
p6289
(lp6290
(S'Linear'
p6291
S'TPreprocessor_addCensorWeight::linear'
p6292
tp6293
a(S'KM'
p6294
S'TPreprocessor_addCensorWeight::km'
p6295
tp6296
a(S'Bayes'
p6297
S'TPreprocessor_addCensorWeight::bayes'
p6298
tp6299
assbsS'TGaussianDistribution'
p6300
(i__main__
ClassDefinition
p6301
(dp6302
g4
I1
sg5
I0
sg6
g6300
sg7
S'TDistribution'
p6303
sg9
I00
sg10
(lp6304
sg12
(lp6305
(S'float'
p6306
S'mean'
p6307
g6307
S'mu'
p6308
I0
I0
I01
Ntp6309
a(S'float'
p6310
S'sigma'
p6311
g6311
S'sigma'
p6312
I0
I0
I01
Ntp6313
ag2177
ag2181
ag2185
ag2189
ag2193
ag2198
ag2203
ag2208
asg29
(dp6314
sbsS'TProbabilityEstimator'
p6315
(i__main__
ClassDefinition
p6316
(dp6317
g4
I1
sg5
I0
sg6
g6315
sg7
S'TOrange'
p6318
sg9
I01
sg10
(lp6319
sg12
(lp6320
g714
ag719
asg29
(dp6321
sbsS'TPreprocessor'
p6322
(i__main__
ClassDefinition
p6323
(dp6324
g4
I1
sg5
I0
sg6
g6322
sg7
S'TOrange'
p6325
sg9
I01
sg10
(lp6326
sg12
(lp6327
sg29
(dp6328
sbsS'TExampleGenerator'
p6329
(i__main__
ClassDefinition
p6330
(dp6331
g4
I1
sg5
I0
sg6
g6329
sg7
S'TOrange'
p6332
sg9
I01
sg10
(lp6333
sg12
(lp6334
g121
ag125
asg29
(dp6335
sbsS'TGeneralExampleClustering'
p6336
(i__main__
ClassDefinition
p6337
(dp6338
g4
I1
sg5
I0
sg6
g6336
sg7
S'TOrange'
p6339
sg9
I01
sg10
(lp6340
sg12
(lp6341
sg29
(dp6342
sbs.